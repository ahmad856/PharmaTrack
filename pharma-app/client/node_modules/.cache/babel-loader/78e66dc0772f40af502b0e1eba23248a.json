{"ast":null,"code":"import _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/ManufacturerPanel.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable(props) {\n    var _this;\n\n    _classCallCheck(this, BSTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BSTable).call(this, props));\n\n    _this.closeTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: false\n      });\n    };\n\n    _this.state = {};\n    _this.state.isTransactionPaneOpen = false;\n    _this.state.distID = \"\";\n    _this.state.transactions = [];\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BSTable, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(SlidingPane, {\n          isOpen: this.state.isTransactionPaneOpen,\n          title: \"Transactions History\",\n          closeIcon: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, \"[ X ]\"),\n          from: \"left\",\n          width: \"400px\",\n          onRequestClose: this.closeTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"35rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" Transaction Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"ID: \", this.props.data.ID), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"QRCode: \", this.props.data.QRCode), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Description: \", this.props.data.Description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Type: \", this.props.data.AssetType))))))), React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \" Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"ID: \", this.props.data.ID), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"QRCode: \", this.props.data.QRCode), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Description: \", this.props.data.Description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Type: \", this.props.data.AssetType)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Mfg Date: \", this.props.data.ManufactureDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"ExpiryDate: \", this.props.data.ExpiryDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Timestamp: \", this.props.data.Timestamp), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Price: \", this.props.data.Price))), React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(MDBDropdown, {\n          dropup: true,\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(MDBDropdownToggle, {\n          caret: true,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Transact Asset\"), React.createElement(MDBDropdownMenu, {\n          basic: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(MDBInput, {\n          label: \"Distributor ID *\",\n          name: \"distID\",\n          type: \"text\",\n          value: this.state.distID,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Transact\")))), React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.setState({\n              isTransactionPaneOpen: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Show Details\")))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component); ///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n///////////////////////////////Distributor///////////////////\n// ID string `json:\"id\"`\n// Name string `json:\"name\"`\n// Owner string 'json:\"owner\"'\n// Address  string `json:\"address\"`\n// Timestamp uint64 `json:\"timestamp\"`\n\n\nvar assetTypes = [{\n  label: \"Medicine\",\n  value: 1\n}, {\n  label: \"Surgical Instrument\",\n  value: 2\n}, {\n  label: \"Hospital Equipment\",\n  value: 3\n}, {\n  label: \"Saftey Equipment\",\n  value: 4\n}];\nvar assetNames = [{\n  label: \"Panadol\",\n  value: 1\n}, {\n  label: \"Xyzal\",\n  value: 2\n}, {\n  label: \"Castine\",\n  value: 3\n}, {\n  label: \"Panadol Extra\",\n  value: 4\n}, {\n  label: \"Calpol\",\n  value: 5\n}, {\n  label: \"Brufen\",\n  value: 6\n}, {\n  label: \"Paracetamol\",\n  value: 7\n}, {\n  label: \"Castine\",\n  value: 8\n}, {\n  label: \"Forceps\",\n  value: 9\n}, {\n  label: \"Scissors\",\n  value: 10\n}, {\n  label: \"Speculums\",\n  value: 11\n}, {\n  label: \"Spatulas\",\n  value: 12\n}, {\n  label: \"Needle Holders\",\n  value: 13\n}, {\n  label: \"Nebulizers\",\n  value: 14\n}, {\n  label: \"Syringe\",\n  value: 15\n}, {\n  label: \"Catheter\",\n  value: 16\n}, {\n  label: \"Medical Gloves\",\n  value: 17\n}, {\n  label: \"Obstetrical Forceps\",\n  value: 18\n}, {\n  label: \"Surgical Mask\",\n  value: 19\n}, {\n  label: \"Gowns\",\n  value: 20\n}, {\n  label: \"Head Covering\",\n  value: 21\n}, {\n  label: \"Shoe Covering\",\n  value: 22\n}];\n\nvar ManufacturerPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManufacturerPanel, _Component);\n\n  function ManufacturerPanel(props) {\n    var _this3;\n\n    _classCallCheck(this, ManufacturerPanel);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ManufacturerPanel).call(this, props));\n\n    _this3.handleChange = function (selectedOption) {\n      _this3.setState({\n        nameValue: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    _this3.handleTypeChange = function (selectedOption) {\n      _this3.setState({\n        assetType: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    _this3.callGetAllMedicines =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/get_all_medicines');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              console.log(body);\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this3.closeAssetPanel = function () {\n      _this3.setState({\n        isAssetPaneOpen: false,\n        nameValue: null,\n        discriptionValue: '',\n        assetType: null,\n        priceValue: '',\n        manufacDate: '',\n        expiryDate: '',\n        qtyValue: '',\n        ownerValue: '' // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n        // nameValid:false,\n        // priceValid:false,\n        // qtyValid:false,\n        // typeValid:false,\n        // formValid:false\n\n      });\n    };\n\n    _this3.closeDistributorPanel = function () {\n      _this3.setState({\n        isDistributorPaneOpen: false,\n        distNameValue: '',\n        distOwnerValue: '',\n        distAddressValue: '' // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n        // nameValid:false,\n        // priceValid:false,\n        // qtyValid:false,\n        // typeValid:false,\n        // formValid:false\n\n      });\n    };\n\n    _this3.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = \"asset\" + (_this3.state.assets.length + 1);\n                qr = \"abcdef\";\n                name = _this3.state.nameValue.label;\n                description = _this3.state.discriptionValue;\n                owner = _this3.state.ownerValue;\n                type = _this3.state.typeValue.label;\n                price = _this3.state.priceValue;\n                mgfDate = _this3.state.manufacDate;\n                expDate = _this3.state.expiryDate;\n                qty = _this3.state.qtyValue;\n                timestamp = Date.now();\n\n                _this3.handleAddAsset(id, qr, name, description, type, price, mgfDate, expDate, qty, owner, timestamp);\n\n                _this3.closeAssetPanel();\n\n                e.preventDefault();\n                _context2.next = 16;\n                return fetch('/add_medicine', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', qr, '~', name, '~', description, '~', owner, '~', type, '~', price, '~', mgfDate, '~', expDate, '~', qty, '~', timestamp)\n                  })\n                });\n\n              case 16:\n                response = _context2.sent;\n                console.log(\"Assets\");\n                console.log(_this3.state.assets);\n                console.log(response.text());\n                _context2.next = 22;\n                return response.text();\n\n              case 22:\n                body = _context2.sent;\n\n                _this3.setState({\n                  responseToPost: body\n                });\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this3.handleDistributorSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var name, address, response, body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this3.handleAddDistributor(_this3.state.distNameValue, _this3.state.distAddressValue);\n\n                name = _this3.state.distNameValue;\n                address = _this3.state.distAddressValue;\n\n                _this3.closeAssetPanel();\n\n                e.preventDefault();\n                _context3.next = 7;\n                return fetch('/add_medicine', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  } //body: JSON.stringify({ post: name.concat('~',price,'~',type,'~',qty) })\n\n                });\n\n              case 7:\n                response = _context3.sent;\n                console.log(\"Assets\");\n                console.log(_this3.state.assets);\n                console.log(response.text());\n                _context3.next = 13;\n                return response.text();\n\n              case 13:\n                body = _context3.sent;\n\n                _this3.setState({\n                  responseToPost: body\n                });\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this3.state = {};\n    _this3.state.activeTab = \"1\";\n    _this3.state.isAssetPaneOpen = false;\n    _this3.state.isDistributorPaneOpen = false;\n    _this3.state.response = \"\";\n    _this3.state.responseToPost = \"\";\n    _this3.state.post = \"\";\n    _this3.state.assets = [];\n    _this3.state.distributors = [];\n    _this3.state.transactions = []; /////////////////////////ASSET/////////////////////////\n\n    _this3.state.nameValue = null;\n    _this3.state.discriptionValue = \"\";\n    _this3.state.assetType = null;\n    _this3.state.priceValue = \"\";\n    _this3.state.manufacDate = \"\";\n    _this3.state.expiryDate = \"\";\n    _this3.state.qtyValue = \"\";\n    _this3.state.ownerValue = \"\"; ////////////////////////Distributor////////////////////\n\n    _this3.state.distNameValue = \"\";\n    _this3.state.distOwnerValue = \"\";\n    _this3.state.distAddressValue = \"\"; // this.state.errors={nameVal:'',priceVal:'',typeVal:'',qtyVal:''};\n    // this.state.nameValid=false;\n    // this.state.priceValid=false;\n    // this.state.qtyValid=false;\n    // this.state.typeValid=false;\n    // this.state.formValid=false;\n\n    _this3.handleInputChange = _this3.handleInputChange.bind(_assertThisInitialized(_this3));\n    _this3.toggle = _this3.toggle.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(ManufacturerPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.callGetAllMedicines().then(function (res) {\n        return _this4.setState({\n          assets: _this4.flattenAssetData(res.express)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(\"Assets\");\n      console.log(this.state.assets);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    }\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"flattenAssetData\",\n    value: function flattenAssetData(assets_array) {\n      var temp_asset = [];\n\n      for (var i = 0; i < assets_array.length; i++) {\n        var temp = {};\n        temp['#'] = i + 1;\n        temp['ID'] = assets_array[i].Record.id;\n        temp['QRCode'] = assets_array[i].Record.qr;\n        temp['Name'] = assets_array[i].Record.name;\n        temp['Description'] = assets_array[i].Record.description;\n        temp['AssetType'] = assets_array[i].Record.type;\n        temp['Price'] = assets_array[i].Record.price;\n        temp['ManufactureDate'] = assets_array[i].Record.manufactureDate;\n        temp['ExpiryDate'] = assets_array[i].Record.expiryDate;\n        temp['Quantity'] = assets_array[i].Record.quantity;\n        temp['Timestamp'] = assets_array[i].Record.timestamp;\n        temp['Owner'] = assets_array[i].Record.owner;\n        temp_asset.push(temp);\n      }\n\n      return temp_asset;\n    } /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"validate\",\n    //,()=>{this.validate(name,value)}\n    value: function validate(name, value) {\n      var fieldErrors = this.state.errors;\n      var nameValid = this.state.nameValid;\n      var priceValid = this.state.priceValid;\n      var qtyValid = this.state.qtyValid;\n      var typeValid = this.state.typeValid;\n\n      switch (name) {\n        case 'nameValue':\n          nameValid = value.length > 0;\n          fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'priceValue':\n          priceValid = value.length > 0;\n          fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'typeValue':\n          typeValid = value.length > 0;\n          fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'qtyValue':\n          qtyValid = value.length > 0;\n          fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n          break;\n      }\n\n      this.setState({\n        errors: fieldErrors,\n        nameValid: nameValid,\n        priceValid: priceValid,\n        typeValid: typeValid,\n        qtyValid: qtyValid\n      }, this.validateF);\n    }\n  }, {\n    key: \"validateF\",\n    value: function validateF() {\n      this.setState({\n        formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid\n      });\n    }\n  }, {\n    key: \"handleAddAsset\",\n    value: function handleAddAsset(id, qr, name, description, type, price, mgfDate, expDate, qty, owner, timestamp) {\n      var asset = {\n        '#': this.state.assets.length + 1,\n        'ID': id,\n        'QRCode': qr,\n        'Name': name,\n        'Description': description,\n        'AssetType': type,\n        'Price': price,\n        'ManufactureDate': mgfDate,\n        'ExpiryDate': expDate,\n        'Quantity': qty,\n        'Timestamp': owner,\n        'Owner': timestamp\n      };\n      console.log(asset);\n      this.state.assets.push(asset);\n      this.setState(this.state.assets);\n    }\n  }, {\n    key: \"handleAddDistributor\",\n    value: function handleAddDistributor(name, address) {\n      var distributor = {\n        Name: name,\n        Address: address\n      };\n      this.state.distributors.push(distributor);\n      this.setState(this.state.distributors);\n    }\n  }, {\n    key: \"render\",\n    //height='240' scrollTop={ 'Top' }\n    value: function render() {\n      var _this5 = this;\n\n      var options = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.assets.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Manufacturer Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), React.createElement(SlidingPane, {\n        closeIcon: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, \"[ X ]\"),\n        isOpen: this.state.isAssetPaneOpen,\n        title: \"Add Asset\",\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeAssetPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Asset Name *\",\n        value: this.state.nameValue,\n        onChange: this.handleChange,\n        options: assetNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        type: \"textarea\",\n        label: \"Description\",\n        rows: \"2\",\n        name: \"discriptionValue\",\n        value: this.state.discriptionValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }), React.createElement(Select, {\n        placeholder: \"Asset Type *\",\n        value: this.state.assetType,\n        onChange: this.handleTypeChange,\n        options: assetTypes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Price *\",\n        name: \"priceValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.priceValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Manufacture Date *\",\n        hint: \"mm/dd/yyyy\",\n        name: \"manufacDate\",\n        type: \"date\",\n        value: this.state.manufacDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Expiry Date *\",\n        hint: \"mm/dd/yyyy\",\n        name: \"expiryDate\",\n        type: \"date\",\n        value: this.state.expiryDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Quantity *\",\n        name: \"qtyValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.qtyValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner Name *\",\n        name: \"ownerValue\",\n        type: \"text\",\n        value: this.state.ownerValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(SlidingPane, {\n        isOpen: this.state.isDistributorPaneOpen,\n        title: \"Add Distributor\",\n        closeIcon: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, \"[ X ]\"),\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeDistributorPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleDistributorSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Name *\",\n        name: \"distNameValue\",\n        type: \"text\",\n        value: this.state.distNameValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner Name *\",\n        name: \"distOwnerValue\",\n        type: \"text\",\n        value: this.state.distOwnerValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Address *\",\n        name: \"distAddressValue\",\n        type: \"text\",\n        value: this.state.distAddressValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"Asset\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \"Distributor\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            isAssetPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Add Asset\"), React.createElement(BootstrapTable, {\n        data: this.state.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: options,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Asset Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"Quantity\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            isDistributorPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Add Distributor\"), React.createElement(BootstrapTable, {\n        data: this.state.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"Asset Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"Quantity\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ManufacturerPanel;\n}(Component);\n\nexport default ManufacturerPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/ManufacturerPanel.js"],"names":["React","Component","MDBContainer","MDBDropdown","MDBDropdownMenu","MDBDropdownToggle","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","BSTable","props","closeTransactionPanel","setState","isTransactionPaneOpen","state","distID","transactions","handleInputChange","bind","event","target","value","name","data","maxWidth","width","ID","QRCode","Description","AssetType","ManufactureDate","ExpiryDate","Timestamp","Price","assetTypes","label","assetNames","ManufacturerPanel","handleChange","selectedOption","nameValue","console","log","handleTypeChange","assetType","callGetAllMedicines","fetch","response","json","body","status","Error","message","closeAssetPanel","isAssetPaneOpen","discriptionValue","priceValue","manufacDate","expiryDate","qtyValue","ownerValue","closeDistributorPanel","isDistributorPaneOpen","distNameValue","distOwnerValue","distAddressValue","handleSubmit","e","id","assets","length","qr","description","owner","type","typeValue","price","mgfDate","expDate","qty","timestamp","Date","now","handleAddAsset","preventDefault","method","headers","JSON","stringify","post","concat","text","responseToPost","handleDistributorSubmit","handleAddDistributor","address","activeTab","distributors","toggle","then","res","flattenAssetData","express","catch","err","tab","row","assets_array","temp_asset","i","temp","Record","manufactureDate","quantity","push","fieldErrors","errors","nameValid","priceValid","qtyValid","typeValid","nameVal","priceVal","typeVal","qtyVal","validateF","formValid","asset","distributor","Name","Address","options","onlyOneExpanding","page","sizePerPageList","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition","active","isExpandableRow","expandComponent","delay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nclass BSTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.isTransactionPaneOpen=false;\n        this.state.distID=\"\";\n        this.state.transactions = [];\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n\n    closeTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: false });\n    };\n\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    {/* Show Transactions side pane */}\n                    <SlidingPane isOpen={this.state.isTransactionPaneOpen} title='Transactions History' closeIcon={<div>[ X ]</div>} from='left' width='400px' onRequestClose={this.closeTransactionPanel}>\n                        <MDBContainer>\n                            {/* Iterates */}\n                            <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"35rem\" }}>\n                                <MDBCardHeader> Transaction Details</MDBCardHeader>\n                                <MDBCardBody className=\"text-info\">\n                                    <MDBRow className=\"justify-content-center\">\n                                        <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\" }}>\n                                            <MDBListGroupItem color=\"primary\">ID: {this.props.data.ID}</MDBListGroupItem>\n                                            <MDBListGroupItem color=\"primary\">QRCode: {this.props.data.QRCode}</MDBListGroupItem>\n                                            <MDBListGroupItem color=\"primary\">Description: {this.props.data.Description}</MDBListGroupItem>\n                                            <MDBListGroupItem color=\"primary\">Type: {this.props.data.AssetType}</MDBListGroupItem>\n                                        </MDBListGroup>\n                                    </MDBRow>\n                                </MDBCardBody>\n                            </MDBCard>\n                            {/* Iterates */}\n                        </MDBContainer>\n                    </SlidingPane>\n\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <MDBCardHeader> Asset Details</MDBCardHeader>\n                        <MDBCardBody className=\"text-info\">\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">ID: {this.props.data.ID}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">QRCode: {this.props.data.QRCode}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Description: {this.props.data.Description}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Type: {this.props.data.AssetType}</MDBListGroupItem>\n                                </MDBListGroup>\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">Mfg Date: {this.props.data.ManufactureDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">ExpiryDate: {this.props.data.ExpiryDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Timestamp: {this.props.data.Timestamp}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Price: {this.props.data.Price}</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBRow>\n                                <MDBRow className=\"justify-content-center\">\n                                {/* <MDBBtn size=\"sm\" color=\"primary\">Transact Asset</MDBBtn> */}\n                                <MDBDropdown dropup size=\"sm\">\n                                    <MDBDropdownToggle caret color=\"primary\">Transact Asset</MDBDropdownToggle>\n                                    <MDBDropdownMenu basic>\n                                        <form>\n                                            <MDBInput label=\"Distributor ID *\" name=\"distID\" type=\"text\" value={this.state.distID} onChange={this.handleInputChange}/>\n                                            <MDBBtn size=\"sm\" color=\"primary\">Transact</MDBBtn>\n                                        </form>\n                                    </MDBDropdownMenu>\n                                </MDBDropdown>\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isTransactionPaneOpen: true })}>Show Details</MDBBtn>\n                                </MDBRow>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>Asset Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\n///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\n///////////////////////////////Distributor///////////////////\n// ID string `json:\"id\"`\n// Name string `json:\"name\"`\n// Owner string 'json:\"owner\"'\n// Address  string `json:\"address\"`\n// Timestamp uint64 `json:\"timestamp\"`\n\nconst assetTypes = [\n    { label: \"Medicine\", value: 1 },\n    { label: \"Surgical Instrument\", value: 2 },\n    { label: \"Hospital Equipment\", value: 3 },\n    { label: \"Saftey Equipment\", value: 4 },\n];\n\nconst assetNames = [\n    { label: \"Panadol\", value: 1 },\n    { label: \"Xyzal\", value: 2 },\n    { label: \"Castine\", value: 3 },\n    { label: \"Panadol Extra\", value: 4 },\n    { label: \"Calpol\", value: 5 },\n    { label: \"Brufen\", value: 6 },\n    { label: \"Paracetamol\", value: 7 },\n    { label: \"Castine\", value: 8 },\n    { label: \"Forceps\", value: 9 },\n    { label: \"Scissors\", value: 10 },\n    { label: \"Speculums\", value: 11 },\n    { label: \"Spatulas\", value: 12 },\n    { label: \"Needle Holders\", value: 13 },\n    { label: \"Nebulizers\", value: 14 },\n    { label: \"Syringe\", value: 15 },\n    { label: \"Catheter\", value: 16 },\n    { label: \"Medical Gloves\", value: 17 },\n    { label: \"Obstetrical Forceps\", value: 18 },\n    { label: \"Surgical Mask\", value: 19 },\n    { label: \"Gowns\", value: 20 },\n    { label: \"Head Covering\", value: 21 },\n    { label: \"Shoe Covering\", value: 22 },\n];\n\nclass ManufacturerPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.activeTab=\"1\";\n        this.state.isAssetPaneOpen=false;\n        this.state.isDistributorPaneOpen=false;\n        this.state.response=\"\";\n        this.state.responseToPost=\"\";\n        this.state.post=\"\";\n        this.state.assets = [];\n        this.state.distributors = [];\n        this.state.transactions = [];\n        /////////////////////////ASSET/////////////////////////\n        this.state.nameValue=null;\n        this.state.discriptionValue=\"\";\n        this.state.assetType=null;\n        this.state.priceValue=\"\";\n        this.state.manufacDate=\"\";\n        this.state.expiryDate=\"\";\n        this.state.qtyValue=\"\";\n        this.state.ownerValue=\"\";\n        ////////////////////////Distributor////////////////////\n        this.state.distNameValue=\"\";\n        this.state.distOwnerValue=\"\";\n        this.state.distAddressValue=\"\";\n\n        // this.state.errors={nameVal:'',priceVal:'',typeVal:'',qtyVal:''};\n        // this.state.nameValid=false;\n        // this.state.priceValid=false;\n        // this.state.qtyValid=false;\n        // this.state.typeValid=false;\n        // this.state.formValid=false;\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ nameValue: selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    handleTypeChange = (selectedOption) => {\n        this.setState({ assetType: selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    componentDidMount() {\n        this.callGetAllMedicines()\n        .then(res => this.setState({ assets: this.flattenAssetData(res.express) }))\n        .catch(err => console.log(err));\n        console.log(\"Assets\");\n        console.log(this.state.assets);\n    }\n\n    callGetAllMedicines = async () => {\n        const response = await fetch('/get_all_medicines');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        console.log(body);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    expandComponent(row) {\n        return (\n            <BSTable data={ row } />\n        );\n    }\n\n    closeAssetPanel = () => {\n        this.setState({\n            isAssetPaneOpen: false,\n            nameValue:null,\n            discriptionValue:'',\n            assetType:null,\n            priceValue:'',\n            manufacDate:'',\n            expiryDate:'',\n            qtyValue:'',\n            ownerValue:'',\n            // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n            // nameValid:false,\n            // priceValid:false,\n            // qtyValid:false,\n            // typeValid:false,\n            // formValid:false\n        });\n    };\n\n    closeDistributorPanel = () => {\n        this.setState({\n            isDistributorPaneOpen: false,\n            distNameValue:'',\n            distOwnerValue:'',\n            distAddressValue:'',\n            // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n            // nameValid:false,\n            // priceValid:false,\n            // qtyValid:false,\n            // typeValid:false,\n            // formValid:false\n        });\n    };\n\n    flattenAssetData (assets_array) {\n        var temp_asset=[];\n        for(let i=0;i<assets_array.length;i++){\n            var temp={};\n            temp['#'] = i+1;\n            temp['ID'] = assets_array[i].Record.id;\n            temp['QRCode'] = assets_array[i].Record.qr;\n            temp['Name'] = assets_array[i].Record.name;\n            temp['Description'] = assets_array[i].Record.description;\n            temp['AssetType'] = assets_array[i].Record.type;\n            temp['Price'] = assets_array[i].Record.price;\n            temp['ManufactureDate'] = assets_array[i].Record.manufactureDate;\n            temp['ExpiryDate'] = assets_array[i].Record.expiryDate;\n            temp['Quantity'] = assets_array[i].Record.quantity;\n            temp['Timestamp'] = assets_array[i].Record.timestamp;\n            temp['Owner'] = assets_array[i].Record.owner;\n            temp_asset.push(temp);\n        }\n        return temp_asset;\n    }\n    /////////////////////////////////////////////////////////////\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n\n    validate(name,value){\n        var fieldErrors=this.state.errors;\n        var nameValid=this.state.nameValid;\n        var priceValid=this.state.priceValid;\n        var qtyValid=this.state.qtyValid;\n        var typeValid=this.state.typeValid;\n        switch(name){\n            case 'nameValue':\n                nameValid = value.length > 0;\n                fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n                break;\n            case 'priceValue':\n                priceValid = value.length > 0;\n                fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n                break;\n            case 'typeValue':\n                typeValid = value.length > 0;\n                fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n                break;\n            case 'qtyValue':\n                qtyValid = value.length > 0;\n                fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n                break;\n        }\n\n        this.setState({\n            errors: fieldErrors,\n            nameValid: nameValid,\n            priceValid: priceValid,\n            typeValid: typeValid,\n            qtyValid: qtyValid,\n            }, this.validateF);\n    }\n\n    validateF() {\n        this.setState({formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid});\n    }\n\n    handleAddAsset(id, qr, name, description, type, price, mgfDate, expDate, qty, owner, timestamp) {\n        var asset = {\n            '#': (this.state.assets.length+1),\n            'ID': id,\n            'QRCode':qr,\n            'Name': name,\n            'Description': description,\n            'AssetType':type,\n            'Price': price,\n            'ManufactureDate': mgfDate,\n            'ExpiryDate':expDate,\n            'Quantity': qty,\n            'Timestamp': owner,\n            'Owner':timestamp,\n        }\n        console.log(asset);\n        this.state.assets.push(asset);\n        this.setState(this.state.assets);\n    };\n\n    //tasks.map((task) => task.name )\n    handleSubmit = async e => {\n        var id=\"asset\"+(this.state.assets.length+1);\n        var qr=\"abcdef\";\n        var name=this.state.nameValue.label;\n        var description=this.state.discriptionValue;\n        var owner=this.state.ownerValue;\n        var type=this.state.typeValue.label;\n        var price=this.state.priceValue;\n        var mgfDate=this.state.manufacDate;\n        var expDate=this.state.expiryDate;\n        var qty=this.state.qtyValue;\n        var timestamp=Date.now();\n        this.handleAddAsset(id, qr, name, description, type, price, mgfDate, expDate, qty, owner, timestamp);\n        this.closeAssetPanel();\n        e.preventDefault();\n        const response = await fetch('/add_medicine', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: id.concat('~',qr,'~',name,'~',description,'~',owner,'~',type,'~',price,'~',mgfDate,'~',expDate,'~',qty,'~',timestamp) })\n        });\n        console.log(\"Assets\");\n        console.log(this.state.assets);\n        console.log(response.text());\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n    handleAddDistributor(name,address) {\n        var distributor = {\n            Name: name,\n            Address: address\n        }\n        this.state.distributors.push(distributor);\n        this.setState(this.state.distributors);\n    };\n\n    handleDistributorSubmit = async e => {\n        this.handleAddDistributor(this.state.distNameValue, this.state.distAddressValue);\n        var name=this.state.distNameValue;\n        var address=this.state.distAddressValue;\n        this.closeAssetPanel();\n        e.preventDefault();\n        const response = await fetch('/add_medicine', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            //body: JSON.stringify({ post: name.concat('~',price,'~',type,'~',qty) })\n        });\n        console.log(\"Assets\");\n        console.log(this.state.assets);\n        console.log(response.text());\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n    //height='240' scrollTop={ 'Top' }\n\n    render() {\n        const options = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.assets.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Manufacturer Panel\"/>\n                {/* Add asset side pane */}\n                <SlidingPane closeIcon={<div>[ X ]</div>} isOpen={this.state.isAssetPaneOpen} title='Add Asset' from='right' width='400px' onRequestClose={this.closeAssetPanel}>\n                    <form onSubmit={this.handleSubmit}>\n                        <Select placeholder=\"Asset Name *\" value={this.state.nameValue} onChange={this.handleChange} options={assetNames}/>\n                        <MDBInput type=\"textarea\" label=\"Description\" rows=\"2\" name=\"discriptionValue\" value={this.state.discriptionValue} onChange={this.handleInputChange}/>\n                        <Select placeholder=\"Asset Type *\" value={this.state.assetType} onChange={this.handleTypeChange} options={assetTypes}/>\n                        <MDBInput label=\"Price *\" name=\"priceValue\" type=\"number\" min=\"1\" value={this.state.priceValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Manufacture Date *\" hint=\"mm/dd/yyyy\" name=\"manufacDate\" type=\"date\" value={this.state.manufacDate} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Expiry Date *\" hint=\"mm/dd/yyyy\" name=\"expiryDate\" type=\"date\" value={this.state.expiryDate} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Quantity *\" name=\"qtyValue\" type=\"number\" min=\"1\" value={this.state.qtyValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner Name *\" name=\"ownerValue\" type=\"text\" value={this.state.ownerValue} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                {/* Add Distributor side pane */}\n                <SlidingPane isOpen={this.state.isDistributorPaneOpen} title='Add Distributor' closeIcon={<div>[ X ]</div>} from='right' width='400px' onRequestClose={this.closeDistributorPanel}>\n                    <form onSubmit={this.handleDistributorSubmit}>\n                        <MDBInput label=\"Name *\" name=\"distNameValue\" type=\"text\" value={this.state.distNameValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner Name *\" name=\"distOwnerValue\" type=\"text\" value={this.state.distOwnerValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Address *\" name=\"distAddressValue\" type=\"text\" value={this.state.distAddressValue} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Asset</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Distributor</NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm={12}>\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isAssetPaneOpen: true })} >Add Asset</MDBBtn>\n\n                                <BootstrapTable data={ this.state.assets } version='4' hover condensed pagination options={ options }  expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                    <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Name' filter={{ type: 'TextFilter', delay: 100 }}>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Owner' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Quantity' >Quantity</TableHeaderColumn>\n                                </BootstrapTable>\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm={12}>\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isDistributorPaneOpen: true })} >Add Distributor</MDBBtn>\n\n                                <BootstrapTable data={ this.state.assets } version='4' hover condensed pagination options={ options }>\n                                    <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Name' filter={{ type: 'TextFilter', delay: 100 }}>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Owner' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Quantity' >Quantity</TableHeaderColumn>\n                                </BootstrapTable>\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n\n            </MDBContainer>\n        );\n    }\n}\n\nexport default ManufacturerPanel;\n"]},"metadata":{},"sourceType":"module"}