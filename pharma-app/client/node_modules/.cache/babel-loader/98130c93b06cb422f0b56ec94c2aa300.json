{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _readOnlyError from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/AdminPanel.js\";\nimport React, { Component } from 'react';\nimport { Animation, MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable(props) {\n    _classCallCheck(this, BSTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTable).call(this, props));\n  }\n\n  _createClass(BSTable, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(Animation, {\n          type: \"fadeIn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \" User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"ID: \", this.props.data.Id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Company Name: \", this.props.data.QRCode), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Company Address:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), \" \", this.props.data.Description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"License Number: \", this.props.data.AssetType)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Owner Name: \", this.props.data.ManufactureDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Owner CNIC: \", this.props.data.ExpiryDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Owner Address:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), \" \", this.props.data.Timestamp)))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component);\n\nvar userTypes = [{\n  label: \"Manufacturer\",\n  value: 1\n}, {\n  label: \"Distributor\",\n  value: 2\n}, {\n  label: \"Chemist\",\n  value: 3\n}];\n\nvar AdminPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminPanel, _Component);\n\n  function AdminPanel(props) {\n    var _this;\n\n    _classCallCheck(this, AdminPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminPanel).call(this, props));\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        typeValue: selectedOption\n      });\n    };\n\n    _this.callGetAllUsers =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/get_all_users');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.closeUserPanel = function () {\n      _this.setState({\n        isUserPaneOpen: false,\n        typeValue: null,\n        compNameValue: '',\n        addressValue: '',\n        licenseValue: '',\n        ownerName: '',\n        ownerCnic: '',\n        ownerAddress: '',\n        password: '' // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n        // nameValid:false,\n        // priceValid:false,\n        // qtyValid:false,\n        // typeValid:false,\n        // formValid:false\n\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var type, comp, address, license, owner, cnic, ownerAddress, password, body, id, response, _response, _response2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                /////////////////////////////////////ckeck if user is manuf/dist/chem\n                type = _this.state.typeValue.value;\n                comp = _this.state.compNameValue;\n                address = _this.state.addressValue;\n                license = _this.state.licenseValue;\n                owner = _this.state.ownerName;\n                cnic = _this.state.ownerCnic;\n                ownerAddress = _this.state.ownerAddress;\n                password = _this.state.password;\n                body = null;\n\n                if (!(type === 1)) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                console.log('Manufac');\n                id = \"manuf\" + (_this.state.users.manufacturers.length + 1);\n\n                _this.handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress);\n\n                _this.closeUserPanel();\n\n                e.preventDefault();\n                _context2.next = 17;\n                return fetch('/add_manufacturer', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', comp, '~', address, '~', license, '~', owner, '~', cnic, '~', ownerAddress, '~', password)\n                  })\n                });\n\n              case 17:\n                response = _context2.sent;\n\n                _readOnlyError(\"body\");\n\n                _context2.next = 21;\n                return response.text();\n\n              case 21:\n                body = _context2.sent;\n                _context2.next = 52;\n                break;\n\n              case 24:\n                if (!(type === 2)) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                console.log('dist');\n                id = \"dist\" + (_this.state.users.distributors.length + 1);\n\n                _this.handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress);\n\n                _this.closeUserPanel();\n\n                e.preventDefault();\n                _context2.next = 32;\n                return fetch('/add_distributor', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', comp, '~', address, '~', license, '~', owner, '~', cnic, '~', ownerAddress, '~', password)\n                  })\n                });\n\n              case 32:\n                _response = _context2.sent;\n\n                _readOnlyError(\"body\");\n\n                _context2.next = 36;\n                return _response.text();\n\n              case 36:\n                body = _context2.sent;\n                _context2.next = 52;\n                break;\n\n              case 39:\n                if (!(type === 3)) {\n                  _context2.next = 52;\n                  break;\n                }\n\n                console.log('chem');\n                id = \"chem\" + (_this.state.users.chemist.length + 1);\n\n                _this.handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress);\n\n                _this.closeUserPanel();\n\n                e.preventDefault();\n                _context2.next = 47;\n                return fetch('/add_chemist', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', comp, '~', address, '~', license, '~', owner, '~', cnic, '~', ownerAddress, '~', password)\n                  })\n                });\n\n              case 47:\n                _response2 = _context2.sent;\n\n                _readOnlyError(\"body\");\n\n                _context2.next = 51;\n                return _response2.text();\n\n              case 51:\n                body = _context2.sent;\n\n              case 52:\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 53:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {};\n    _this.state.activeTab = \"1\";\n    _this.state.isUserPaneOpen = false;\n    _this.state.response = \"\";\n    _this.state.responseToPost = \"\";\n    _this.state.post = \"\";\n    _this.state.users = {\n      manufacturers: [],\n      distributors: [],\n      chemists: []\n    }; ////////////////////////User////////////////////\n\n    _this.state.typeValue = \"\";\n    _this.state.compNameValue = \"\";\n    _this.state.addressValue = \"\";\n    _this.state.licenseValue = \"\";\n    _this.state.ownerName = \"\";\n    _this.state.ownerCnic = \"\";\n    _this.state.ownerAddress = \"\";\n    _this.state.password = \"\";\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AdminPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callGetAllUsers().then(function (res) {\n        return _this2.setState({\n          users: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    }\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    /////////////////////////////////////////////////////////////\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"validate\",\n    //,()=>{this.validate(name,value)}\n    value: function validate(name, value) {\n      var fieldErrors = this.state.errors;\n      var nameValid = this.state.nameValid;\n      var priceValid = this.state.priceValid;\n      var qtyValid = this.state.qtyValid;\n      var typeValid = this.state.typeValid;\n\n      switch (name) {\n        case 'nameValue':\n          nameValid = value.length > 0;\n          fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'priceValue':\n          priceValid = value.length > 0;\n          fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'typeValue':\n          typeValid = value.length > 0;\n          fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'qtyValue':\n          qtyValid = value.length > 0;\n          fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n          break;\n      }\n\n      this.setState({\n        errors: fieldErrors,\n        nameValid: nameValid,\n        priceValid: priceValid,\n        typeValid: typeValid,\n        qtyValid: qtyValid\n      }, this.validateF);\n    }\n  }, {\n    key: \"validateF\",\n    value: function validateF() {\n      this.setState({\n        formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid\n      });\n    } //tasks.map((task) => task.name )\n\n  }, {\n    key: \"handleAddManufacturer\",\n    value: function handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress) {\n      var asset = {\n        'id': id,\n        'name': comp,\n        'address': address,\n        'licence': license,\n        'owner': owner,\n        'cnic': cnic,\n        'ownerAddress': ownerAddress\n      };\n      this.state.users.manufacturers.push(asset);\n      this.setState(this.state.users);\n    }\n  }, {\n    key: \"handleAddDistributor\",\n    value: function handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress) {\n      var asset = {\n        'id': id,\n        'name': comp,\n        'address': address,\n        'licence': license,\n        'owner': owner,\n        'cnic': cnic,\n        'ownerAddress': ownerAddress\n      };\n      this.state.users.distributors.push(asset);\n      this.setState(this.state.users);\n    }\n  }, {\n    key: \"handleAddChemist\",\n    value: function handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress) {\n      var asset = {\n        'id': id,\n        'name': comp,\n        'address': address,\n        'licence': license,\n        'owner': owner,\n        'cnic': cnic,\n        'ownerAddress': ownerAddress\n      };\n      this.state.users.chemists.push(asset);\n      this.setState(this.state.users);\n    }\n  }, {\n    key: \"render\",\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n    //height='240' scrollTop={ 'Top' }\n    value: function render() {\n      var _this3 = this;\n\n      var manufOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.users.manufacturers.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      var distOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.users.distributors.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      var chemOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.users.chemists.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Super Admin Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(SlidingPane, {\n        closeIcon: React.createElement(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \"[ X ]\"),\n        isOpen: this.state.isUserPaneOpen,\n        title: \"Add User\",\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeUserPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"User Type\",\n        options: userTypes,\n        value: this.state.typeValue,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Company Name\",\n        name: \"compNameValue\",\n        value: this.state.compNameValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        type: \"textarea\",\n        rows: \"2\",\n        label: \"Company Address\",\n        name: \"addressValue\",\n        value: this.state.addressValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"License Number\",\n        name: \"licenseValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.licenseValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner Name\",\n        name: \"ownerName\",\n        type: \"text\",\n        value: this.state.ownerName,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner CNIC\",\n        name: \"ownerCnic\",\n        type: \"tel\",\n        pattern: \"^\\\\d{5}-\\\\d{7}-\\\\d{1}$\",\n        value: this.state.ownerCnic,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        type: \"textarea\",\n        rows: \"2\",\n        label: \"Owner Address\",\n        name: \"ownerAddress\",\n        value: this.state.ownerAddress,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        type: \"password\",\n        label: \"Passeord\",\n        name: \"ownerAddress\",\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this3.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Manufacturer\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this3.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Distributor\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this3.toggle('3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Chemist\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.setState({\n            isUserPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Add User\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.users.manufacturers,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: manufOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"address\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Company Address\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.users.distributors,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: distOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"address\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Company Owner\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.users.chemists,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: chemOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"address\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"Company Owner\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return AdminPanel;\n}(Component);\n\nexport default AdminPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/AdminPanel.js"],"names":["React","Component","Animation","MDBContainer","MDBDropdown","MDBDropdownMenu","MDBDropdownItem","MDBDropdownToggle","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","BSTable","props","data","maxWidth","width","wordwrap","Id","QRCode","Description","AssetType","ManufactureDate","ExpiryDate","Timestamp","userTypes","label","value","AdminPanel","handleChange","selectedOption","setState","typeValue","callGetAllUsers","fetch","response","json","body","status","Error","message","closeUserPanel","isUserPaneOpen","compNameValue","addressValue","licenseValue","ownerName","ownerCnic","ownerAddress","password","handleSubmit","e","type","state","comp","address","license","owner","cnic","console","log","id","users","manufacturers","length","handleAddManufacturer","preventDefault","method","headers","JSON","stringify","post","concat","text","distributors","handleAddDistributor","chemist","handleAddChemist","responseToPost","activeTab","chemists","handleInputChange","bind","toggle","then","res","express","catch","err","tab","row","event","target","name","fieldErrors","errors","nameValid","priceValid","qtyValid","typeValid","nameVal","priceVal","typeVal","qtyVal","validateF","formValid","asset","push","manufOptions","onlyOneExpanding","page","sizePerPageList","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition","distOptions","chemOptions","color","active","isExpandableRow","expandComponent","delay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Animation, MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nclass BSTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <Animation  type=\"fadeIn\">\n                            <MDBCardHeader> User Details</MDBCardHeader>\n                            <MDBCardBody className=\"text-info\">\n                                <MDBRow className=\"justify-content-center\">\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\",wordwrap: \"break-word\"  }}>\n                                        <MDBListGroupItem color=\"primary\">ID: {this.props.data.Id}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Company Name: {this.props.data.QRCode}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Company Address:<br/> {this.props.data.Description}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">License Number: {this.props.data.AssetType}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\",wordwrap: \"break-word\" }}>\n                                        <MDBListGroupItem color=\"primary\">Owner Name: {this.props.data.ManufactureDate}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Owner CNIC: {this.props.data.ExpiryDate}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Owner Address:<br/> {this.props.data.Timestamp}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </Animation>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>User Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\nconst userTypes = [\n    { label: \"Manufacturer\", value: 1 },\n    { label: \"Distributor\", value: 2 },\n    { label: \"Chemist\", value: 3 },\n];\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.activeTab=\"1\";\n        this.state.isUserPaneOpen=false;\n        this.state.response=\"\";\n        this.state.responseToPost=\"\";\n        this.state.post=\"\";\n        this.state.users = { manufacturers:[], distributors:[], chemists:[]};\n        ////////////////////////User////////////////////\n        this.state.typeValue=\"\";\n        this.state.compNameValue=\"\";\n        this.state.addressValue=\"\";\n        this.state.licenseValue=\"\";\n        this.state.ownerName=\"\";\n        this.state.ownerCnic=\"\";\n        this.state.ownerAddress=\"\";\n        this.state.password=\"\";\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ typeValue: selectedOption });\n    }\n\n    componentDidMount() {\n        this.callGetAllUsers()\n        .then(res => this.setState({ users: res.express }))\n        .catch(err => console.log(err));\n    }\n\n    callGetAllUsers = async () => {\n        const response = await fetch('/get_all_users');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    expandComponent(row) {\n        return (\n            <BSTable data={ row } />\n        );\n    }\n\n    closeUserPanel = () => {\n        this.setState({\n            isUserPaneOpen: false,\n            typeValue:null,\n            compNameValue:'',\n            addressValue:'',\n            licenseValue:'',\n            ownerName:'',\n            ownerCnic:'',\n            ownerAddress:'',\n            password:'',\n            // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n            // nameValid:false,\n            // priceValid:false,\n            // qtyValid:false,\n            // typeValid:false,\n            // formValid:false\n        });\n    };\n\n    /////////////////////////////////////////////////////////////\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n\n    validate(name,value){\n        var fieldErrors=this.state.errors;\n        var nameValid=this.state.nameValid;\n        var priceValid=this.state.priceValid;\n        var qtyValid=this.state.qtyValid;\n        var typeValid=this.state.typeValid;\n        switch(name){\n            case 'nameValue':\n                nameValid = value.length > 0;\n                fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n                break;\n            case 'priceValue':\n                priceValid = value.length > 0;\n                fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n                break;\n            case 'typeValue':\n                typeValid = value.length > 0;\n                fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n                break;\n            case 'qtyValue':\n                qtyValid = value.length > 0;\n                fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n                break;\n        }\n\n        this.setState({\n            errors: fieldErrors,\n            nameValid: nameValid,\n            priceValid: priceValid,\n            typeValid: typeValid,\n            qtyValid: qtyValid,\n            }, this.validateF);\n    }\n\n    validateF() {\n        this.setState({formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid});\n    }\n    //tasks.map((task) => task.name )\n\n    handleSubmit = async e => {\n        /////////////////////////////////////ckeck if user is manuf/dist/chem\n        var type=this.state.typeValue.value;\n        var comp=this.state.compNameValue;\n        var address=this.state.addressValue;\n        var license=this.state.licenseValue;\n        var owner=this.state.ownerName;\n        var cnic=this.state.ownerCnic;\n        var ownerAddress=this.state.ownerAddress;\n        var password=this.state.password;\n        const body = null;\n        if(type===1){\n            console.log('Manufac');\n            var id=\"manuf\"+(this.state.users.manufacturers.length+1);\n            this.handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress);\n            this.closeUserPanel();\n            e.preventDefault();\n            const response = await fetch('/add_manufacturer', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: id.concat('~',comp,'~',address,'~',license,'~',owner,'~',cnic,'~',ownerAddress,'~',password) })\n            });\n            body = await response.text();\n        }\n        else if(type===2){\n            console.log('dist');\n            var id=\"dist\"+(this.state.users.distributors.length+1);\n            this.handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress);\n            this.closeUserPanel();\n            e.preventDefault();\n            const response = await fetch('/add_distributor', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: id.concat('~',comp,'~',address,'~',license,'~',owner,'~',cnic,'~',ownerAddress,'~',password) })\n            });\n            body = await response.text();\n        }\n        else if(type===3){\n            console.log('chem');\n            var id=\"chem\"+(this.state.users.chemist.length+1);\n            this.handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress);\n            this.closeUserPanel();\n            e.preventDefault();\n            const response = await fetch('/add_chemist', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: id.concat('~',comp,'~',address,'~',license,'~',owner,'~',cnic,'~',ownerAddress,'~',password) })\n            });\n            body = await response.text();\n        }\n\n        this.setState({ responseToPost: body });\n    };\n\n    handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress) {\n        var asset = {\n            'id': id,\n            'name':comp,\n            'address': address,\n            'licence': license,\n            'owner':owner,\n            'cnic':cnic,\n            'ownerAddress': ownerAddress,\n        }\n        this.state.users.manufacturers.push(asset);\n        this.setState(this.state.users);\n    };\n\n    handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress) {\n        var asset = {\n            'id': id,\n            'name':comp,\n            'address': address,\n            'licence': license,\n            'owner':owner,\n            'cnic':cnic,\n            'ownerAddress': ownerAddress,\n        }\n        this.state.users.distributors.push(asset);\n        this.setState(this.state.users);\n    };\n\n    handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress) {\n        var asset = {\n            'id': id,\n            'name':comp,\n            'address': address,\n            'licence': license,\n            'owner':owner,\n            'cnic':cnic,\n            'ownerAddress': ownerAddress,\n        }\n        this.state.users.chemists.push(asset);\n        this.setState(this.state.users);\n    };\n\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n\n    //height='240' scrollTop={ 'Top' }\n\n    render() {\n        const manufOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.users.manufacturers.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n        const distOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.users.distributors.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n        const chemOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.users.chemists.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Super Admin Panel\"/>\n                {/* Add UuserTSer side pane */}\n\n                <SlidingPane closeIcon={<div style={{color:\"red\"}}>[ X ]</div>} isOpen={this.state.isUserPaneOpen} title='Add User' from='right' width='400px' onRequestClose={this.closeUserPanel}>\n                    <form onSubmit={this.handleSubmit}>\n                        <Select  placeholder=\"User Type\" options={userTypes} value={this.state.typeValue} onChange={this.handleChange}></Select>\n                        <MDBInput label=\"Company Name\" name=\"compNameValue\" value={this.state.compNameValue} onChange={this.handleInputChange}/>\n                        <MDBInput type=\"textarea\" rows=\"2\" label=\"Company Address\" name=\"addressValue\" value={this.state.addressValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"License Number\" name=\"licenseValue\" type=\"number\" min=\"1\" value={this.state.licenseValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner Name\"  name=\"ownerName\" type=\"text\" value={this.state.ownerName} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner CNIC\"  name=\"ownerCnic\" type=\"tel\" pattern=\"^\\d{5}-\\d{7}-\\d{1}$\" value={this.state.ownerCnic} onChange={this.handleInputChange}/>\n                        <MDBInput type=\"textarea\" rows=\"2\" label=\"Owner Address\" name=\"ownerAddress\" value={this.state.ownerAddress} onChange={this.handleInputChange}/>\n                        <MDBInput type=\"password\" label=\"Passeord\" name=\"ownerAddress\" value={this.state.password} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                {/* Add Distributor side pane */}\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Manufacturer</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Distributor</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>Chemist</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </NavItem>\n                    <NavItem>\n                        <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isUserPaneOpen: true })} >Add User</MDBBtn>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.users.manufacturers } version='4' hover condensed pagination options={ manufOptions } expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                        <TableHeaderColumn isKey dataField='id'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='address' filter={{ type: 'TextFilter', delay: 100 }}>Company Address</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.users.distributors } version='4' hover condensed pagination options={ distOptions }>\n                                        <TableHeaderColumn isKey dataField='id'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='address' filter={{ type: 'TextFilter', delay: 100 }}>Company Owner</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                    <TabPane tabId=\"3\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.users.chemists } version='4' hover condensed pagination options={ chemOptions }>\n                                        <TableHeaderColumn isKey dataField='id'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='address' filter={{ type: 'TextFilter', delay: 100 }}>Company Owner</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                </TabContent>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}