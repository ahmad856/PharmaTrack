{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/ManufacturerPanel.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css'; //import update from 'react-addons-update';\n\nimport Select from 'react-select';\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BSTable, _Component);\n\n  function BSTable(props) {\n    var _this;\n\n    _classCallCheck(this, BSTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BSTable).call(this, props));\n\n    _this.test = function () {//this.props.onChangeOwner(1,\"ahmad\");\n      //console.log(user);\n    };\n\n    _this.closeTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: false\n      });\n    };\n\n    _this.openTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: true\n      });\n\n      _this.getAllTransactions().then(function (res) {\n        return _this.setState({\n          transactions: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllTransactions =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _this.props.data.Id;\n              _context.next = 3;\n              return fetch('/get_asset_history/' + id);\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.tranactionSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var assetId, distId, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                assetId = _this.props.data.Id;\n                distId = _this.state.distID;\n                e.preventDefault();\n                _context2.next = 5;\n                return fetch('/change_owner', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: assetId.concat('~', distId)\n                  })\n                });\n\n              case 5:\n                response = _context2.sent;\n                _context2.next = 8;\n                return response.text();\n\n              case 8:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {};\n    _this.state.isTransactionPaneOpen = false;\n    _this.state.distID = \"\";\n    _this.state.responseToPost = \"\";\n    _this.state.transactions = [];\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BSTable, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          onClick: this.test,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Test\"), React.createElement(SlidingPane, {\n          isOpen: this.state.isTransactionPaneOpen,\n          title: \"Transactions History\",\n          closeIcon: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"[ X ]\"),\n          from: \"left\",\n          width: \"400px\",\n          onRequestClose: this.closeTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, this.state.transactions.map(function (transaction) {\n          return React.createElement(MDBCard, {\n            border: \"info\",\n            className: \"m-3\",\n            style: {\n              width: \"20rem\"\n            },\n            key: transaction.txid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(MDBCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, \" Transaction Details\"), React.createElement(MDBCardBody, {\n            className: \"text-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(MDBRow, {\n            className: \"justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(MDBListGroup, {\n            className: \"my-4 mx-4\",\n            style: {\n              width: \"18rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"ID: \", transaction.txid), React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Asset ID: \", transaction.asset.id), React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"Asset Owner: \", transaction.asset.owner)))));\n        })), React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \" Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"ID: \", this.props.data.Id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"QRCode: \", this.props.data.QRCode), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Description: \", this.props.data.Description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Type: \", this.props.data.AssetType)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Mfg Date: \", this.props.data.ManufactureDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"ExpiryDate: \", this.props.data.ExpiryDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Timestamp: \", this.props.data.Timestamp), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Price: \", this.props.data.Price))), React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          onClick: this.openTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Show Details\"), React.createElement(MDBDropdown, {\n          dropup: true,\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(MDBDropdownToggle, {\n          caret: true,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Transact Asset\"), React.createElement(MDBDropdownMenu, {\n          basic: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.tranactionSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(MDBInput, {\n          label: \"Distributor ID *\",\n          name: \"distID\",\n          type: \"text\",\n          value: this.state.distID,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Transact\")))))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(Component); ///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\n\nvar assetTypes = [{\n  label: \"Medicine\",\n  value: 1\n}, {\n  label: \"Surgical Instrument\",\n  value: 2\n}, {\n  label: \"Hospital Equipment\",\n  value: 3\n}, {\n  label: \"Saftey Equipment\",\n  value: 4\n}];\nvar assetNames = [{\n  label: \"Panadol\",\n  value: 1\n}, {\n  label: \"Xyzal\",\n  value: 2\n}, {\n  label: \"Castine\",\n  value: 3\n}, {\n  label: \"Panadol Extra\",\n  value: 4\n}, {\n  label: \"Calpol\",\n  value: 5\n}, {\n  label: \"Brufen\",\n  value: 6\n}, {\n  label: \"Paracetamol\",\n  value: 7\n}, {\n  label: \"Castine\",\n  value: 8\n}, {\n  label: \"Forceps\",\n  value: 9\n}, {\n  label: \"Scissors\",\n  value: 10\n}, {\n  label: \"Speculums\",\n  value: 11\n}, {\n  label: \"Spatulas\",\n  value: 12\n}, {\n  label: \"Needle Holders\",\n  value: 13\n}, {\n  label: \"Nebulizers\",\n  value: 14\n}, {\n  label: \"Syringe\",\n  value: 15\n}, {\n  label: \"Catheter\",\n  value: 16\n}, {\n  label: \"Medical Gloves\",\n  value: 17\n}, {\n  label: \"Obstetrical Forceps\",\n  value: 18\n}, {\n  label: \"Surgical Mask\",\n  value: 19\n}, {\n  label: \"Gowns\",\n  value: 20\n}, {\n  label: \"Head Covering\",\n  value: 21\n}, {\n  label: \"Shoe Covering\",\n  value: 22\n}];\n\nvar ManufacturerPanel =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ManufacturerPanel, _Component2);\n\n  function ManufacturerPanel(props) {\n    var _this2;\n\n    _classCallCheck(this, ManufacturerPanel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ManufacturerPanel).call(this, props));\n\n    _this2.handleChange = function (selectedOption) {\n      _this2.setState({\n        nameValue: selectedOption,\n        nameValid: true\n      });\n    };\n\n    _this2.handleTypeChange = function (selectedOption) {\n      _this2.setState({\n        assetType: selectedOption,\n        typeValid: true\n      });\n    };\n\n    _this2.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = null;\n\n              if (sessionStorage.getItem(\"user\")) {\n                id = sessionStorage.getItem(\"user\");\n              }\n\n              _context3.next = 4;\n              return fetch('/get_user/' + id);\n\n            case 4:\n              response = _context3.sent;\n              _context3.next = 7;\n              return response.json();\n\n            case 7:\n              body = _context3.sent;\n\n              if (!(response.status !== 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 10:\n              console.log(body);\n              console.log(body.assets);\n              return _context3.abrupt(\"return\", body);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this2.callGetAllAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch('/get_all_assets');\n\n            case 2:\n              response = _context4.sent;\n              _context4.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context4.sent;\n\n              if (!(response.status !== 200)) {\n                _context4.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context4.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this2.closeAssetPanel = function () {\n      _this2.setState({\n        isAssetPaneOpen: false,\n        nameValue: null,\n        discriptionValue: '',\n        assetType: null,\n        priceValue: '',\n        manufacDate: '',\n        expiryDate: '',\n        qtyValue: '',\n        assetFormErrors: {\n          nameVal: '',\n          discVal: '',\n          typeVal: '',\n          priceVal: '',\n          mgfVal: '',\n          expVal: '',\n          qtyVal: ''\n        },\n        assetFormValid: false,\n        nameValid: false,\n        discValid: false,\n        typeValid: false,\n        priceValid: false,\n        mgfValid: false,\n        expValid: false,\n        qtyValid: false\n      });\n    };\n\n    _this2.closeDistributorPanel = function () {\n      _this2.setState({\n        isDistributorPaneOpen: false,\n        distNameValue: '',\n        distOwnerValue: '',\n        distAddressValue: '' // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n        // nameValid:false,\n        // priceValid:false,\n        // qtyValid:false,\n        // typeValid:false,\n        // formValid:false\n\n      });\n    };\n\n    _this2.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(e) {\n        var id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp, response, body;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                id = \"\" + (_this2.state.user.assets.length + 1);\n                qr = \"abcdef\";\n                name = _this2.state.nameValue.label;\n                description = _this2.state.discriptionValue; /////////////////////////////////////////change owner as login\n\n                owner = _this2.state.userID;\n                type = _this2.state.assetType.label;\n                price = _this2.state.priceValue;\n                mgfDate = _this2.state.manufacDate;\n                expDate = _this2.state.expiryDate;\n                qty = _this2.state.qtyValue;\n                timestamp = Date.now();\n\n                _this2.handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp);\n\n                _this2.closeAssetPanel();\n\n                e.preventDefault();\n                _context5.next = 16;\n                return fetch('/add_asset', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', qr, '~', name, '~', description, '~', owner, '~', type, '~', price, '~', mgfDate, '~', expDate, '~', qty, '~', timestamp)\n                  })\n                });\n\n              case 16:\n                response = _context5.sent;\n                _context5.next = 19;\n                return response.text();\n\n              case 19:\n                body = _context5.sent;\n\n                _this2.setState({\n                  responseToPost: body\n                });\n\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this2.test = function () {\n      console.log(user);\n    };\n\n    _this2.state = {};\n    _this2.state.activeTab = \"1\";\n    _this2.state.isAssetPaneOpen = false;\n    _this2.state.isDistributorPaneOpen = false;\n    _this2.state.response = \"\";\n    _this2.state.responseToPost = \"\";\n    _this2.state.post = \"\";\n    _this2.state.userID = \"\"; //////////////////////////////USER//////////////////////\n\n    _this2.state.user = {\n      address: \"\",\n      id: \"\",\n      license: \"\",\n      name: \"\",\n      owneraddress: \"\",\n      ownercnic: \"\",\n      ownername: \"\",\n      password: \"\",\n      assets: [],\n      distributors: []\n    }; // this.state.user.address=\"\";\n    // this.state.user.id=\"\";\n    // this.state.user.license=\"\";\n    // this.state.user.name=\"\";\n    // this.state.user.owneraddress=\"\";\n    // this.state.user.ownercnic=\"\";\n    // this.state.user.ownername=\"\";\n    // this.state.user.password=\"\";\n    // this.state.user.assets=[];\n    // this.state.user.distributors=[];\n    /////////////////////////ASSET/////////////////////////\n\n    _this2.state.nameValue = null;\n    _this2.state.discriptionValue = \"\";\n    _this2.state.assetType = null;\n    _this2.state.priceValue = \"\";\n    _this2.state.manufacDate = \"\";\n    _this2.state.expiryDate = \"\";\n    _this2.state.qtyValue = \"\";\n    _this2.state.assetFormErrors = {\n      nameVal: '',\n      discVal: '',\n      typeVal: '',\n      priceVal: '',\n      mgfVal: '',\n      expVal: '',\n      qtyVal: ''\n    };\n    _this2.state.assetFormValid = false;\n    _this2.state.nameValid = false;\n    _this2.state.discValid = false;\n    _this2.state.typeValid = false;\n    _this2.state.priceValid = false;\n    _this2.state.mgfValid = false;\n    _this2.state.expValid = false;\n    _this2.state.qtyValid = false; ////////////////////////Distributor////////////////////\n\n    _this2.state.distId = \"\";\n    _this2.handleInputChange = _this2.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.toggle = _this2.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(ManufacturerPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var user = null;\n\n      if (sessionStorage.getItem(\"user\")) {\n        user = sessionStorage.getItem(\"user\");\n        this.setState({\n          userID: user\n        });\n      } // this.callGetAllAssets()\n      // .then(res => this.setState({ assets: this.flattenAssetData(res.express) }))\n      // .catch(err => console.log(err));\n\n\n      this.getUser().then(function (res) {\n        return _this3.setState({\n          user: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    } // updateOwner(id,name){\n    //     this.setState({\n    //         assets: update(this.state.assets, {id: {Owner: {$set: name}}})\n    //     })\n    // }\n    //() => this.setState({ isPaneOpenLeft: false })\n\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      //console.log(this.updateOwner);\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"flattenAssetData\",\n    //id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp\n    value: function flattenAssetData(assets_array) {\n      var temp_asset = [];\n\n      for (var i = 0; i < assets_array.length; i++) {\n        var temp = {};\n        temp['#'] = i + 1;\n        temp['Id'] = assets_array[i].Record.id;\n        temp['QRCode'] = assets_array[i].Record.qr;\n        temp['Name'] = assets_array[i].Record.name;\n        temp['Description'] = assets_array[i].Record.description;\n        temp['Owner'] = assets_array[i].Record.owner;\n        temp['AssetType'] = assets_array[i].Record.type;\n        temp['Price'] = assets_array[i].Record.price;\n        temp['ManufactureDate'] = assets_array[i].Record.manufactureDate;\n        temp['ExpiryDate'] = assets_array[i].Record.expiryDate;\n        temp['Quantity'] = assets_array[i].Record.quantity;\n        temp['Timestamp'] = assets_array[i].Record.timestamp;\n        temp_asset.push(temp);\n      }\n\n      return temp_asset;\n    } /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _this4 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value), function () {\n        _this4.validate(name, value);\n      });\n    }\n  }, {\n    key: \"isPositiveInteger\",\n    //disabled={!this.state.formValid}\n    value: function isPositiveInteger(n) {\n      return parseFloat(n) === n >>> 0;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(name, value) {\n      var fieldErrors = this.state.assetFormErrors;\n      var length = null;\n\n      switch (name) {\n        case 'discriptionValue':\n          fieldErrors.discVal = value.length > 10 ? true : false;\n          this.setState({\n            discValid: fieldErrors.discVal\n          });\n          break;\n\n        case 'priceValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.priceVal = length && this.isPositiveInteger(value);\n          this.setState({\n            priceValid: fieldErrors.priceVal\n          });\n          break;\n\n        case 'manufacDate':\n          fieldErrors.mgfVal = value.length > 0 ? true : false;\n          this.setState({\n            mgfValid: fieldErrors.mgfVal\n          });\n          break;\n\n        case 'expiryDate':\n          fieldErrors.expVal = value.length > 0 ? true : false;\n          this.setState({\n            expValid: fieldErrors.expVal\n          });\n          break;\n\n        case 'qtyValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.qtyVal = length && this.isPositiveInteger(value);\n          this.setState({\n            qtyValid: fieldErrors.qtyVal\n          });\n          break;\n      }\n\n      this.setState({\n        errors: fieldErrors,\n        discValid: fieldErrors.discVal,\n        priceValid: fieldErrors.priceVal,\n        mgfValid: fieldErrors.mgfVal,\n        expValid: fieldErrors.expVal,\n        qtyValid: fieldErrors.qtyVal\n      }, this.validateAssetForm());\n    }\n  }, {\n    key: \"validateAssetForm\",\n    value: function validateAssetForm() {\n      console.log(\"validate asset form\");\n      this.setState({\n        assetFormValid: this.state.nameValid && this.state.discValid && this.state.typeValid && this.state.priceValid && this.state.mgfValid && this.state.expValid && this.state.qtyValid\n      });\n    }\n  }, {\n    key: \"handleAddAsset\",\n    value: function handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp) {\n      var asset = {\n        '#': this.state.user.assets.length + 1,\n        'ID': id,\n        'QRCode': qr,\n        'Name': name,\n        'Description': description,\n        'Owner': owner,\n        'AssetType': type,\n        'Price': price,\n        'ManufactureDate': mgfDate,\n        'ExpiryDate': expDate,\n        'Quantity': qty,\n        'Timestamp': timestamp\n      };\n      this.state.user.assets.push(asset);\n      this.setState(this.state.user);\n    }\n  }, {\n    key: \"render\",\n    //height='240' scrollTop={ 'Top' }\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n    value: function render() {\n      var _this5 = this;\n\n      // const assetOptions = {\n      //     onlyOneExpanding: true,\n      //     page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.assets.length } ],\n      //     sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n      // }\n      //\n      // const distOptions = {\n      //     onlyOneExpanding: true,\n      //     page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.distributors.length } ],\n      //     sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n      // }\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Manufacturer Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.test,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"Test\"), React.createElement(SlidingPane, {\n        closeIcon: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, \"[ X ]\"),\n        isOpen: this.state.isAssetPaneOpen,\n        title: \"Add Asset\",\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeAssetPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Asset Name *\",\n        className: \"bMDBRowser-default\",\n        required: true,\n        value: this.state.nameValue,\n        onChange: this.handleChange,\n        options: assetNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        type: \"textarea\",\n        label: \"Description\",\n        rows: \"2\",\n        name: \"discriptionValue\",\n        value: this.state.discriptionValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }), React.createElement(Select, {\n        placeholder: \"Asset Type *\",\n        value: this.state.assetType,\n        onChange: this.handleTypeChange,\n        options: assetTypes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Price *\",\n        name: \"priceValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.priceValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Manufacture Date *\",\n        hint: \"mm/dd/yyyy\",\n        name: \"manufacDate\",\n        type: \"date\",\n        value: this.state.manufacDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Expiry Date *\",\n        hint: \"mm/dd/yyyy\",\n        name: \"expiryDate\",\n        type: \"date\",\n        value: this.state.expiryDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Quantity *\",\n        name: \"qtyValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.qtyValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(SlidingPane, {\n        isOpen: this.state.isDistributorPaneOpen,\n        title: \"Add Distributor\",\n        closeIcon: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }, \"[ X ]\"),\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeDistributorPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleDistributorSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Name *\",\n        name: \"distNameValue\",\n        type: \"text\",\n        value: this.state.distNameValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner Name *\",\n        name: \"distOwnerValue\",\n        type: \"text\",\n        value: this.state.distOwnerValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Address *\",\n        name: \"distAddressValue\",\n        type: \"text\",\n        value: this.state.distAddressValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Asset\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, \"Distributor\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            isAssetPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \"Add Asset\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            isDistributorPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"Add Distributor\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ManufacturerPanel;\n}(Component);\n\nexport default ManufacturerPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/ManufacturerPanel.js"],"names":["React","Component","MDBContainer","MDBDropdown","MDBDropdownMenu","MDBDropdownItem","MDBDropdownToggle","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","BSTable","props","test","closeTransactionPanel","setState","isTransactionPaneOpen","openTransactionPanel","getAllTransactions","then","res","transactions","express","catch","err","console","log","id","data","Id","fetch","response","json","body","status","Error","message","tranactionSubmit","e","assetId","distId","state","distID","preventDefault","method","headers","JSON","stringify","post","concat","text","responseToPost","handleInputChange","bind","event","target","value","name","map","transaction","width","txid","asset","owner","maxWidth","QRCode","Description","AssetType","ManufactureDate","ExpiryDate","Timestamp","Price","assetTypes","label","assetNames","ManufacturerPanel","handleChange","selectedOption","nameValue","nameValid","handleTypeChange","assetType","typeValid","getUser","sessionStorage","getItem","assets","callGetAllAssets","closeAssetPanel","isAssetPaneOpen","discriptionValue","priceValue","manufacDate","expiryDate","qtyValue","assetFormErrors","nameVal","discVal","typeVal","priceVal","mgfVal","expVal","qtyVal","assetFormValid","discValid","priceValid","mgfValid","expValid","qtyValid","closeDistributorPanel","isDistributorPaneOpen","distNameValue","distOwnerValue","distAddressValue","handleSubmit","user","length","qr","description","userID","type","price","mgfDate","expDate","qty","timestamp","Date","now","handleAddAsset","activeTab","address","license","owneraddress","ownercnic","ownername","password","distributors","toggle","tab","row","assets_array","temp_asset","i","temp","Record","manufactureDate","quantity","push","validate","n","parseFloat","fieldErrors","isPositiveInteger","errors","validateAssetForm","handleDistributorSubmit","active"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\n//import update from 'react-addons-update';\nimport Select from 'react-select';\n\nclass BSTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.isTransactionPaneOpen=false;\n        this.state.distID=\"\";\n        this.state.responseToPost=\"\";\n        this.state.transactions = [];\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n\n    test=()=>{\n        //this.props.onChangeOwner(1,\"ahmad\");\n        //console.log(user);\n    }\n\n    closeTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: false });\n    };\n\n    openTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: true });\n        this.getAllTransactions()\n        .then(res => this.setState({ transactions: res.express }))\n        .catch(err => console.log(err));\n    };\n\n    getAllTransactions = async () => {\n        var id=this.props.data.Id;\n        const response = await fetch('/get_asset_history/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    tranactionSubmit = async e => {\n        var assetId=this.props.data.Id;\n        var distId=this.state.distID;\n        e.preventDefault();\n        const response = await fetch('/change_owner', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: assetId.concat('~',distId) })\n        });\n\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    {/* Show Transactions side pane */}\n                    <MDBBtn size=\"sm\" color=\"primary\" onClick={this.test}>Test</MDBBtn>\n                    <SlidingPane isOpen={this.state.isTransactionPaneOpen} title='Transactions History' closeIcon={<div>[ X ]</div>} from='left' width='400px' onRequestClose={this.closeTransactionPanel}>\n\n                            {/* Iterates */}\n                            {this.state.transactions.map(function(transaction){\n                                return(\n                                    <MDBCard border=\"info\" className=\"m-3\" style={{ width: \"20rem\" }} key={ transaction.txid }>\n                                        <MDBCardHeader> Transaction Details</MDBCardHeader>\n                                        <MDBCardBody className=\"text-info\">\n                                            <MDBRow className=\"justify-content-center\">\n                                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"18rem\" }}>\n                                                    <MDBListGroupItem color=\"primary\">ID: {transaction.txid}</MDBListGroupItem>\n                                                    <MDBListGroupItem color=\"primary\">Asset ID: {transaction.asset.id}</MDBListGroupItem>\n                                                    <MDBListGroupItem color=\"primary\">Asset Owner: {transaction.asset.owner}</MDBListGroupItem>\n                                                </MDBListGroup>\n                                            </MDBRow>\n                                        </MDBCardBody>\n                                    </MDBCard>\n                                );\n                            })}\n                            {/* Iterates */}\n                    </SlidingPane>\n\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <MDBCardHeader> Asset Details</MDBCardHeader>\n                        <MDBCardBody className=\"text-info\">\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">ID: {this.props.data.Id}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">QRCode: {this.props.data.QRCode}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Description: {this.props.data.Description}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Type: {this.props.data.AssetType}</MDBListGroupItem>\n                                </MDBListGroup>\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">Mfg Date: {this.props.data.ManufactureDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">ExpiryDate: {this.props.data.ExpiryDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Timestamp: {this.props.data.Timestamp}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Price: {this.props.data.Price}</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBRow>\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={this.openTransactionPanel}>Show Details</MDBBtn>\n\n                                {/* <MDBBtn size=\"sm\" color=\"primary\">Transact Asset</MDBBtn> */}\n                                <MDBDropdown dropup size=\"sm\">\n                                    <MDBDropdownToggle caret color=\"primary\">Transact Asset</MDBDropdownToggle>\n                                    <MDBDropdownMenu basic>\n                                        <div>\n                                            <form onSubmit={this.tranactionSubmit}>\n                                                <MDBInput label=\"Distributor ID *\" name=\"distID\" type=\"text\" value={this.state.distID} onChange={this.handleInputChange}/>\n                                                <MDBBtn size=\"sm\" color=\"primary\" type=\"submit\">Transact</MDBBtn>\n                                            </form>\n                                        </div>\n                                    </MDBDropdownMenu>\n                                </MDBDropdown>\n                            </MDBRow>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>Asset Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\n///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\nconst assetTypes = [\n    { label: \"Medicine\", value: 1 },\n    { label: \"Surgical Instrument\", value: 2 },\n    { label: \"Hospital Equipment\", value: 3 },\n    { label: \"Saftey Equipment\", value: 4 },\n];\n\nconst assetNames = [\n    { label: \"Panadol\", value: 1 },\n    { label: \"Xyzal\", value: 2 },\n    { label: \"Castine\", value: 3 },\n    { label: \"Panadol Extra\", value: 4 },\n    { label: \"Calpol\", value: 5 },\n    { label: \"Brufen\", value: 6 },\n    { label: \"Paracetamol\", value: 7 },\n    { label: \"Castine\", value: 8 },\n    { label: \"Forceps\", value: 9 },\n    { label: \"Scissors\", value: 10 },\n    { label: \"Speculums\", value: 11 },\n    { label: \"Spatulas\", value: 12 },\n    { label: \"Needle Holders\", value: 13 },\n    { label: \"Nebulizers\", value: 14 },\n    { label: \"Syringe\", value: 15 },\n    { label: \"Catheter\", value: 16 },\n    { label: \"Medical Gloves\", value: 17 },\n    { label: \"Obstetrical Forceps\", value: 18 },\n    { label: \"Surgical Mask\", value: 19 },\n    { label: \"Gowns\", value: 20 },\n    { label: \"Head Covering\", value: 21 },\n    { label: \"Shoe Covering\", value: 22 },\n];\n\nclass ManufacturerPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.state.activeTab = \"1\";\n        this.state.isAssetPaneOpen = false;\n        this.state.isDistributorPaneOpen = false;\n        this.state.response = \"\";\n        this.state.responseToPost = \"\";\n        this.state.post = \"\";\n\n        this.state.userID = \"\";\n        //////////////////////////////USER//////////////////////\n        this.state.user = { address:\"\", id:\"\", license:\"\", name:\"\", owneraddress:\"\", ownercnic:\"\", ownername:\"\", password:\"\", assets:[], distributors:[] };\n        // this.state.user.address=\"\";\n        // this.state.user.id=\"\";\n        // this.state.user.license=\"\";\n        // this.state.user.name=\"\";\n        // this.state.user.owneraddress=\"\";\n        // this.state.user.ownercnic=\"\";\n        // this.state.user.ownername=\"\";\n        // this.state.user.password=\"\";\n        // this.state.user.assets=[];\n        // this.state.user.distributors=[];\n        /////////////////////////ASSET/////////////////////////\n        this.state.nameValue=null;\n        this.state.discriptionValue=\"\";\n        this.state.assetType=null;\n        this.state.priceValue=\"\";\n        this.state.manufacDate=\"\";\n        this.state.expiryDate=\"\";\n        this.state.qtyValue=\"\";\n        this.state.assetFormErrors={nameVal:'', discVal:'', typeVal:'', priceVal:'', mgfVal:'', expVal:'', qtyVal:''};\n        this.state.assetFormValid=false;\n        this.state.nameValid=false;\n        this.state.discValid=false;\n        this.state.typeValid=false;\n        this.state.priceValid=false;\n        this.state.mgfValid=false;\n        this.state.expValid=false;\n        this.state.qtyValid=false;\n\n        ////////////////////////Distributor////////////////////\n        this.state.distId = \"\";\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ nameValue: selectedOption, nameValid: true });\n    }\n\n    handleTypeChange = (selectedOption) => {\n        this.setState({ assetType: selectedOption, typeValid: true });\n    }\n\n    componentDidMount() {\n        var user = null;\n        if(sessionStorage.getItem(\"user\")){\n            user = sessionStorage.getItem(\"user\");\n            this.setState({userID:user});\n        }\n        // this.callGetAllAssets()\n        // .then(res => this.setState({ assets: this.flattenAssetData(res.express) }))\n        // .catch(err => console.log(err));\n        this.getUser()\n        .then(res => this.setState({ user: res.express }))\n        .catch(err => console.log(err));\n    }\n\n    getUser = async () => {\n        var id = null;\n        if(sessionStorage.getItem(\"user\")){\n            id = sessionStorage.getItem(\"user\");\n        }\n        const response = await fetch('/get_user/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        console.log(body);\n        console.log(body.assets);\n        return body;\n    };\n\n    callGetAllAssets = async () => {\n        const response = await fetch('/get_all_assets');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    // updateOwner(id,name){\n    //     this.setState({\n    //         assets: update(this.state.assets, {id: {Owner: {$set: name}}})\n    //     })\n    // }\n\n    //() => this.setState({ isPaneOpenLeft: false })\n    expandComponent(row) {\n        //console.log(this.updateOwner);\n        return (\n            <BSTable data={ row }/>\n        );\n    }\n\n    closeAssetPanel = () => {\n        this.setState({\n            isAssetPaneOpen: false,\n            nameValue:null,\n            discriptionValue:'',\n            assetType:null,\n            priceValue:'',\n            manufacDate:'',\n            expiryDate:'',\n            qtyValue:'',\n            assetFormErrors:{nameVal:'', discVal:'', typeVal:'', priceVal:'', mgfVal:'', expVal:'', qtyVal:''},\n            assetFormValid:false,\n            nameValid:false,\n            discValid:false,\n            typeValid:false,\n            priceValid:false,\n            mgfValid:false,\n            expValid:false,\n            qtyValid:false\n        });\n    };\n\n    closeDistributorPanel = () => {\n        this.setState({\n            isDistributorPaneOpen: false,\n            distNameValue:'',\n            distOwnerValue:'',\n            distAddressValue:'',\n            // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n            // nameValid:false,\n            // priceValid:false,\n            // qtyValid:false,\n            // typeValid:false,\n            // formValid:false\n        });\n    };\n\n//id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp\n    flattenAssetData (assets_array) {\n        var temp_asset=[];\n        for(let i=0;i<assets_array.length;i++){\n            var temp={};\n            temp['#'] = i+1;\n            temp['Id'] = assets_array[i].Record.id;\n            temp['QRCode'] = assets_array[i].Record.qr;\n            temp['Name'] = assets_array[i].Record.name;\n            temp['Description'] = assets_array[i].Record.description;\n            temp['Owner'] = assets_array[i].Record.owner;\n            temp['AssetType'] = assets_array[i].Record.type;\n            temp['Price'] = assets_array[i].Record.price;\n            temp['ManufactureDate'] = assets_array[i].Record.manufactureDate;\n            temp['ExpiryDate'] = assets_array[i].Record.expiryDate;\n            temp['Quantity'] = assets_array[i].Record.quantity;\n            temp['Timestamp'] = assets_array[i].Record.timestamp;\n            temp_asset.push(temp);\n        }\n        return temp_asset;\n    }\n    /////////////////////////////////////////////////////////////\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        },()=>{this.validate(name,value)});\n    };\n\n    //disabled={!this.state.formValid}\n\n    isPositiveInteger(n) {\n        return parseFloat(n) === n >>> 0;\n    }\n\n    validate(name,value){\n        var fieldErrors=this.state.assetFormErrors;\n        var length=null;\n        switch(name){\n            case 'discriptionValue':\n                fieldErrors.discVal = value.length > 10 ? true : false;\n                this.setState({ discValid:fieldErrors.discVal });\n                break;\n            case 'priceValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.priceVal = length && this.isPositiveInteger(value);\n                this.setState({ priceValid:fieldErrors.priceVal });\n                break;\n            case 'manufacDate':\n                fieldErrors.mgfVal = value.length > 0 ? true : false;\n                this.setState({ mgfValid:fieldErrors.mgfVal });\n                break;\n            case 'expiryDate':\n                fieldErrors.expVal = value.length > 0 ? true : false;\n                this.setState({ expValid:fieldErrors.expVal });\n                break;\n            case 'qtyValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.qtyVal = length && this.isPositiveInteger(value);\n                this.setState({ qtyValid:fieldErrors.qtyVal });\n                break;\n        }\n\n        this.setState({\n            errors: fieldErrors,\n            discValid:fieldErrors.discVal,\n            priceValid:fieldErrors.priceVal,\n            mgfValid:fieldErrors.mgfVal,\n            expValid:fieldErrors.expVal,\n            qtyValid:fieldErrors.qtyVal,\n        }, this.validateAssetForm());\n    }\n\n    validateAssetForm() {\n        console.log(\"validate asset form\");\n        this.setState({assetFormValid: this.state.nameValid && this.state.discValid && this.state.typeValid && this.state.priceValid && this.state.mgfValid && this.state.expValid && this.state.qtyValid });\n    }\n\n    handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp) {\n        var asset = {\n            '#': (this.state.user.assets.length+1),\n            'ID': id,\n            'QRCode':qr,\n            'Name': name,\n            'Description': description,\n            'Owner':owner,\n            'AssetType':type,\n            'Price': price,\n            'ManufactureDate': mgfDate,\n            'ExpiryDate':expDate,\n            'Quantity': qty,\n            'Timestamp': timestamp,\n        }\n        this.state.user.assets.push(asset);\n        this.setState(this.state.user);\n    };\n\n    //tasks.map((task) => task.name )\n\n    handleSubmit = async e => {\n        var id=\"\"+(this.state.user.assets.length+1);\n        var qr=\"abcdef\";\n        var name=this.state.nameValue.label;\n        var description=this.state.discriptionValue;\n        /////////////////////////////////////////change owner as login\n        var owner=this.state.userID;\n        var type=this.state.assetType.label;\n        var price=this.state.priceValue;\n        var mgfDate=this.state.manufacDate;\n        var expDate=this.state.expiryDate;\n        var qty=this.state.qtyValue;\n        var timestamp=Date.now();\n        this.handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp);\n        this.closeAssetPanel();\n        e.preventDefault();\n        const response = await fetch('/add_asset', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: id.concat('~',qr,'~',name,'~',description,'~',owner,'~',type,'~',price,'~',mgfDate,'~',expDate,'~',qty,'~',timestamp) })\n        });\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n    test=()=>{\n        console.log(user);\n    }\n\n    //height='240' scrollTop={ 'Top' }\n\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n\n    render() {\n        // const assetOptions = {\n        //     onlyOneExpanding: true,\n        //     page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.assets.length } ],\n        //     sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        // }\n        //\n        // const distOptions = {\n        //     onlyOneExpanding: true,\n        //     page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.distributors.length } ],\n        //     sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        // }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Manufacturer Panel\"/>\n                {/* Add asset side pane */}\n\n                <MDBBtn size=\"sm\" color=\"primary\" onClick={this.test} >Test</MDBBtn>\n                <SlidingPane closeIcon={<div>[ X ]</div>} isOpen={this.state.isAssetPaneOpen} title='Add Asset' from='right' width='400px' onRequestClose={this.closeAssetPanel}>\n                    <form onSubmit={this.handleSubmit}>\n                        <Select placeholder=\"Asset Name *\" className=\"bMDBRowser-default\" required value={this.state.nameValue} onChange={this.handleChange} options={assetNames}/>\n                        <MDBInput type=\"textarea\" label=\"Description\" rows=\"2\" name=\"discriptionValue\" value={this.state.discriptionValue} onChange={this.handleInputChange}/>\n                        <Select placeholder=\"Asset Type *\" value={this.state.assetType} onChange={this.handleTypeChange} options={assetTypes}/>\n                        <MDBInput label=\"Price *\" name=\"priceValue\" type=\"number\" min=\"1\" value={this.state.priceValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Manufacture Date *\" hint=\"mm/dd/yyyy\" name=\"manufacDate\" type=\"date\" value={this.state.manufacDate} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Expiry Date *\" hint=\"mm/dd/yyyy\" name=\"expiryDate\" type=\"date\" value={this.state.expiryDate} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Quantity *\" name=\"qtyValue\" type=\"number\" min=\"1\" value={this.state.qtyValue} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                {/* Add Distributor side pane */}\n                <SlidingPane isOpen={this.state.isDistributorPaneOpen} title='Add Distributor' closeIcon={<div>[ X ]</div>} from='right' width='400px' onRequestClose={this.closeDistributorPanel}>\n                    <form onSubmit={this.handleDistributorSubmit}>\n                        <MDBInput label=\"Name *\" name=\"distNameValue\" type=\"text\" value={this.state.distNameValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner Name *\" name=\"distOwnerValue\" type=\"text\" value={this.state.distOwnerValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Address *\" name=\"distAddressValue\" type=\"text\" value={this.state.distAddressValue} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Asset</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Distributor</NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm={12}>\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isAssetPaneOpen: true })} >Add Asset</MDBBtn>\n                                    {/*\n                                <BootstrapTable data={ this.state.user.assets } version='4' hover condensed pagination options={ assetOptions }  expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                    <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='owner' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='quantity' >Quantity</TableHeaderColumn>\n                                </BootstrapTable>\n                                */}\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm={12}>\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isDistributorPaneOpen: true })} >Add Distributor</MDBBtn>\n{/*\n                                <BootstrapTable data={ this.state.user.distributors } version='4' hover condensed pagination options={ distOptions }>\n                                    <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Name' filter={{ type: 'TextFilter', delay: 100 }}>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Owner' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='Quantity' >Quantity</TableHeaderColumn>\n                                </BootstrapTable>*/}\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n\n            </MDBContainer>\n        );\n    }\n}\n\nexport default ManufacturerPanel;\n"]},"metadata":{},"sourceType":"module"}