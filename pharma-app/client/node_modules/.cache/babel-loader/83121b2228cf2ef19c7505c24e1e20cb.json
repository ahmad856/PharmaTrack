{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/AdminPanel.js\";\nimport React, { Component } from 'react';\nimport { Animation, MDBContainer, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable() {\n    _classCallCheck(this, BSTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTable).apply(this, arguments));\n  }\n\n  _createClass(BSTable, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Animation, {\n          type: \"fadeIn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \" User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"License Number: \", this.props.data.license), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Owner Address:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), \" \", this.props.data.owneraddress)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Owner Name: \", this.props.data.ownername), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Owner CNIC: \", this.props.data.ownercnic)))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component);\n\nvar userTypes = [{\n  label: \"Manufacturer\",\n  value: 1\n}, {\n  label: \"Distributor\",\n  value: 2\n}, {\n  label: \"Chemist\",\n  value: 3\n}];\n\nvar AdminPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminPanel, _Component);\n\n  function AdminPanel(props) {\n    var _this;\n\n    _classCallCheck(this, AdminPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminPanel).call(this, props));\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        typeValue: selectedOption,\n        typeValid: true\n      });\n\n      console.log(selectedOption.value);\n\n      if (selectedOption.value === 1) {\n        _this.setState({\n          id: \"manuf\" + _this.state.count.manufacturercount\n        });\n\n        console.log(\"manuf\" + _this.state.count.manufacturercount);\n      } else if (selectedOption.value === 2) {\n        _this.setState({\n          id: \"manuf\" + _this.state.count.distributorcount\n        });\n\n        console.log(\"dist\" + _this.state.count.distributorcount);\n      } else if (selectedOption.value === 3) {\n        _this.setState({\n          id: \"manuf\" + _this.state.count.chemistcount\n        });\n\n        console.log(\"chem\" + _this.state.count.chemistcount);\n      }\n    };\n\n    _this.redirectUser = function (path) {\n      _this.props.history.push(path);\n    };\n\n    _this.callGetAllUsers =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/get_all_users');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.closeUserPanel = function () {\n      _this.setState({\n        isUserPaneOpen: false,\n        typeValue: null,\n        compNameValue: '',\n        addressValue: '',\n        licenseValue: '',\n        ownerName: '',\n        ownerCnic: '',\n        ownerAddress: '',\n        formErrors: {\n          typeVal: '',\n          nameVal: '',\n          addVal: '',\n          licVal: '',\n          ownerVal: '',\n          cnicVal: '',\n          ownerAddVal: ''\n        },\n        formValid: false,\n        typeValid: false,\n        nameValid: false,\n        addressValid: false,\n        licenseValid: false,\n        ownerNameValid: false,\n        ownerCnicValid: false,\n        ownerAddValid: false\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var type, comp, address, license, owner, cnic, ownerAddress, password, id, response, body, _response, _body, _response2, _body2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                /////////////////////////////////////ckeck if user is manuf/dist/chem\n                type = _this.state.typeValue.value;\n                comp = _this.state.compNameValue;\n                address = _this.state.addressValue;\n                license = _this.state.licenseValue;\n                owner = _this.state.ownerName;\n                cnic = _this.state.ownerCnic;\n                ownerAddress = _this.state.ownerAddress;\n                password = null;\n                id = null;\n\n                if (!(type === 1)) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                console.log('Manufac');\n                id = \"manuf\" + _this.state.users.manufacturers.length;\n                password = \"123\";\n\n                _this.closeUserPanel();\n\n                e.preventDefault();\n                _context2.next = 17;\n                return fetch('/add_manufacturer', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: comp.concat('~', address, '~', license, '~', owner, '~', cnic, '~', ownerAddress, '~', password)\n                  })\n                });\n\n              case 17:\n                response = _context2.sent;\n                _context2.next = 20;\n                return response.json();\n\n              case 20:\n                body = _context2.sent;\n\n                if (body.express.status === 1) {\n                  _this.handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress, password);\n\n                  _this.setState({\n                    responseToPost: body\n                  });\n\n                  document.getElementById(\"addError\").style.display = 'none';\n                } else {\n                  document.getElementById(\"addError\").style.display = 'block';\n                }\n\n                _context2.next = 52;\n                break;\n\n              case 24:\n                if (!(type === 2)) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                console.log('dist');\n                id = \"dist\" + _this.state.users.distributors.length;\n                password = \"456\";\n\n                _this.closeUserPanel();\n\n                e.preventDefault();\n                _context2.next = 32;\n                return fetch('/add_distributor', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: comp.concat('~', address, '~', license, '~', owner, '~', cnic, '~', ownerAddress, '~', password)\n                  })\n                });\n\n              case 32:\n                _response = _context2.sent;\n                _context2.next = 35;\n                return _response.json();\n\n              case 35:\n                _body = _context2.sent;\n\n                if (_body.express.status === 1) {\n                  _this.handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress, password);\n\n                  _this.setState({\n                    responseToPost: _body\n                  });\n\n                  document.getElementById(\"addError\").style.display = 'none';\n                } else {\n                  document.getElementById(\"addError\").style.display = 'block';\n                }\n\n                _context2.next = 52;\n                break;\n\n              case 39:\n                if (!(type === 3)) {\n                  _context2.next = 52;\n                  break;\n                }\n\n                console.log('chem');\n                id = \"chem\" + _this.state.users.chemists.length;\n                password = \"789\";\n\n                _this.closeUserPanel();\n\n                e.preventDefault();\n                _context2.next = 47;\n                return fetch('/add_chemist', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: comp.concat('~', address, '~', license, '~', owner, '~', cnic, '~', ownerAddress, '~', password)\n                  })\n                });\n\n              case 47:\n                _response2 = _context2.sent;\n                _context2.next = 50;\n                return _response2.json();\n\n              case 50:\n                _body2 = _context2.sent;\n\n                if (_body2.express.status === 1) {\n                  _this.handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress, password);\n\n                  _this.setState({\n                    responseToPost: _body2\n                  });\n\n                  document.getElementById(\"addError\").style.display = 'none';\n                } else {\n                  document.getElementById(\"addError\").style.display = 'block';\n                }\n\n              case 52:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onAddUser = function () {\n      _this.setState({\n        isUserPaneOpen: true\n      });\n\n      _this.getAllCounts().then(function (res) {\n        return _this.setState({\n          count: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllCounts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('/get_statics');\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context3.sent;\n\n              if (!(response.status !== 200)) {\n                _context3.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              console.log(body);\n              return _context3.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.state = {};\n    _this.state.activeTab = \"1\";\n    _this.state.isUserPaneOpen = false;\n    _this.state.response = \"\";\n    _this.state.responseToPost = {};\n    _this.state.post = \"\";\n    _this.state.count = \"\";\n    _this.state.id = \"\";\n    _this.state.users = {\n      manufacturers: [],\n      distributors: [],\n      chemists: []\n    }; ////////////////////////User////////////////////\n\n    _this.state.typeValue = \"\";\n    _this.state.compNameValue = \"\";\n    _this.state.addressValue = \"\";\n    _this.state.licenseValue = \"\";\n    _this.state.ownerName = \"\";\n    _this.state.ownerCnic = \"\";\n    _this.state.ownerAddress = \"\";\n    _this.state.formErrors = {\n      typeVal: '',\n      nameVal: '',\n      addVal: '',\n      licVal: '',\n      ownerVal: '',\n      cnicVal: '',\n      ownerAddVal: ''\n    };\n    _this.state.formValid = false;\n    _this.state.typeValid = false;\n    _this.state.nameValid = false;\n    _this.state.addressValid = false;\n    _this.state.licenseValid = false;\n    _this.state.ownerNameValid = false;\n    _this.state.ownerCnicValid = false;\n    _this.state.ownerAddValid = false;\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AdminPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var user = null;\n\n      if (sessionStorage.getItem(\"user\")) {\n        user = sessionStorage.getItem(\"user\");\n\n        if (user.substring(0, 4) === \"chem\") {\n          this.redirectUser('/login/chem');\n        } else if (user.substring(0, 4) === \"manu\") {\n          this.redirectUser('/login/manufac');\n        } else if (user.substring(0, 4) === \"dist\") {\n          this.redirectUser('/login/dist');\n        } else {\n          this.setState({\n            userID: user\n          });\n        }\n      } else {\n        this.redirectUser('/');\n      }\n\n      this.callGetAllUsers().then(function (res) {\n        return _this2.setState({\n          users: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    }\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"isPositiveInteger\",\n    value: function isPositiveInteger(n) {\n      return parseFloat(n) === n >>> 0;\n    } /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _this3 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value), function () {\n        _this3.validate(name, value);\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(name, value) {\n      var fieldErrors = this.state.formErrors;\n      var length = null;\n\n      switch (name) {\n        case 'compNameValue':\n          fieldErrors.nameVal = value.length > 0 ? true : false;\n          this.setState({\n            nameValid: fieldErrors.nameVal\n          });\n          break;\n\n        case 'addressValue':\n          fieldErrors.addVal = value.length > 0 ? true : false;\n          this.setState({\n            addressValid: fieldErrors.addVal\n          });\n          break;\n\n        case 'licenseValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.licVal = length && this.isPositiveInteger(value);\n          this.setState({\n            licenseValid: fieldErrors.licVal\n          });\n          break;\n\n        case 'ownerName':\n          fieldErrors.ownerVal = value.length > 0 ? true : false;\n          this.setState({\n            ownerNameValid: fieldErrors.ownerVal\n          });\n          break;\n\n        case 'ownerCnic':\n          fieldErrors.cnicVal = \"^\\d{5}-\\d{7}-\\d{1}$\".test(value) ? true : false;\n          this.setState({\n            ownerCnicValid: fieldErrors.cnicVal\n          });\n          break;\n\n        case 'ownerAddress':\n          fieldErrors.ownerAddVal = value.length > 0 ? true : false;\n          this.setState({\n            ownerAddValid: fieldErrors.ownerAddVal\n          });\n          break;\n\n        default:\n          console.log(\"Invalid Feild\");\n      }\n\n      this.setState({\n        formErrors: fieldErrors,\n        nameValid: fieldErrors.nameVal,\n        addressValid: fieldErrors.addVal,\n        licenseValid: fieldErrors.licVal,\n        ownerNameValid: fieldErrors.ownerVal,\n        ownerCnicValid: fieldErrors.cnicVal,\n        ownerAddValid: fieldErrors.ownerAddVal\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.nameValid && this.state.addressValid && this.state.licenseValid && this.state.ownerNameValid && this.state.ownerCnicValid && this.state.ownerAddValid && this.state.typeValid\n      });\n    } //tasks.map((task) => task.name )\n\n  }, {\n    key: \"handleAddManufacturer\",\n    value: function handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress, password) {\n      var asset = {\n        'id': id,\n        'name': comp,\n        'address': address,\n        'licence': license,\n        'ownername': owner,\n        'ownercnic': cnic,\n        'owneraddress': ownerAddress,\n        'password': password\n      };\n      this.state.users.manufacturers.push(asset);\n      this.setState(this.state.users);\n    }\n  }, {\n    key: \"handleAddDistributor\",\n    value: function handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress, password) {\n      var asset = {\n        'id': id,\n        'name': comp,\n        'address': address,\n        'licence': license,\n        'ownername': owner,\n        'ownercnic': cnic,\n        'owneraddress': ownerAddress,\n        'password': password\n      };\n      this.state.users.distributors.push(asset);\n      this.setState(this.state.users);\n    }\n  }, {\n    key: \"handleAddChemist\",\n    value: function handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress, password) {\n      var asset = {\n        'id': id,\n        'name': comp,\n        'address': address,\n        'licence': license,\n        'ownername': owner,\n        'ownercnic': cnic,\n        'owneraddress': ownerAddress,\n        'password': password\n      };\n      this.state.users.chemists.push(asset);\n      this.setState(this.state.users);\n    }\n  }, {\n    key: \"render\",\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n    //height='240' scrollTop={ 'Top' }\n    value: function render() {\n      var _this4 = this;\n\n      var manufOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.users.manufacturers.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      var distOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.users.distributors.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      var chemOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.users.chemists.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Super Admin Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        id: \"addError\",\n        style: {\n          display: \"none\",\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Error: Couldnot add user. Serverside Error!!!\"), React.createElement(SlidingPane, {\n        closeIcon: React.createElement(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, \"[ X ]\"),\n        isOpen: this.state.isUserPaneOpen,\n        title: \"Add User\",\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeUserPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(Select, {\n        required: true,\n        className: this.state.typeValid ? \"success\" : \"error\",\n        placeholder: \"User Type\",\n        options: userTypes,\n        value: this.state.typeValue,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.nameValid ? \"success\" : \"error\",\n        label: \"Company Name\",\n        name: \"compNameValue\",\n        value: this.state.compNameValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.addressValid ? \"success\" : \"error\",\n        type: \"textarea\",\n        rows: \"2\",\n        label: \"Company Address\",\n        name: \"addressValue\",\n        value: this.state.addressValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.licenseValid ? \"success\" : \"error\",\n        label: \"License Number\",\n        name: \"licenseValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.licenseValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.ownerNameValid ? \"success\" : \"error\",\n        label: \"Owner Name\",\n        name: \"ownerName\",\n        type: \"text\",\n        value: this.state.ownerName,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.ownerCnicValid ? \"success\" : \"error\",\n        label: \"Owner CNIC\",\n        name: \"ownerCnic\",\n        type: \"tel\",\n        value: this.state.ownerCnic,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.ownerAddValid ? \"success\" : \"error\",\n        type: \"textarea\",\n        rows: \"2\",\n        label: \"Owner Address\",\n        name: \"ownerAddress\",\n        value: this.state.ownerAddress,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Manufacturer\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Distributor\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"Chemist\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.onAddUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Create User\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.users.manufacturers,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: manufOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"address\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, \"Company Address\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.users.distributors,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: distOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"address\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, \"Company Address\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.users.chemists,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: chemOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"address\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"Company Address\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return AdminPanel;\n}(Component);\n\nexport default AdminPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/AdminPanel.js"],"names":["React","Component","Animation","MDBContainer","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","BSTable","props","data","maxWidth","width","wordwrap","license","owneraddress","ownername","ownercnic","userTypes","label","value","AdminPanel","handleChange","selectedOption","setState","typeValue","typeValid","console","log","id","state","count","manufacturercount","distributorcount","chemistcount","redirectUser","path","history","push","callGetAllUsers","fetch","response","json","body","status","Error","message","closeUserPanel","isUserPaneOpen","compNameValue","addressValue","licenseValue","ownerName","ownerCnic","ownerAddress","formErrors","typeVal","nameVal","addVal","licVal","ownerVal","cnicVal","ownerAddVal","formValid","nameValid","addressValid","licenseValid","ownerNameValid","ownerCnicValid","ownerAddValid","handleSubmit","e","type","comp","address","owner","cnic","password","users","manufacturers","length","preventDefault","method","headers","JSON","stringify","post","concat","express","handleAddManufacturer","responseToPost","document","getElementById","style","display","distributors","handleAddDistributor","chemists","handleAddChemist","onAddUser","getAllCounts","then","res","catch","err","activeTab","handleInputChange","bind","toggle","user","sessionStorage","getItem","substring","userID","tab","row","n","parseFloat","event","target","name","validate","fieldErrors","isPositiveInteger","test","validateForm","asset","manufOptions","onlyOneExpanding","page","sizePerPageList","text","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition","distOptions","chemOptions","color","active","isExpandableRow","expandComponent","delay"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,QAAlC,EAA4CC,MAA5C,EAAoDC,OAApD,EAA6DC,aAA7D,EAA4EC,WAA5E,EAAyFC,WAAzF,EAAsGC,YAAtG,EAAoHC,gBAApH,EAAsIC,MAAtI,QAAoJ,UAApJ;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;AACA,OAAO,iFAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,OAAnC,EAA4CC,OAA5C,QAA2D,YAA3D;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,gDAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,O;;;;;;;;;;;;;6BACO;AACL,UAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACjB,eACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,MAAM,EAAC,MAAhB;AAAuB,UAAA,SAAS,EAAC,KAAjC;AAAuC,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAY,UAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAc,UAAA,SAAS,EAAC,WAAxB;AAAoC,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAmD,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,OAAnE,CADJ,EAEI,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhD,OAAuD,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,YAAvE,CAFJ,CADJ,EAKI,oBAAC,YAAD;AAAc,UAAA,SAAS,EAAC,WAAxB;AAAoC,UAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAE,OAAT;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA+C,KAAKJ,KAAL,CAAWC,IAAX,CAAgBM,SAA/D,CADJ,EAEI,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA+C,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,SAA/D,CAFJ,CALJ,CADJ,CAFJ,CADJ,CADJ,CADJ;AAqBH,OAtBD,MAsBO;AACH,eACI,oBAAC,OAAD;AAAS,UAAA,MAAM,EAAC,MAAhB;AAAuB,UAAA,SAAS,EAAC,KAAjC;AAAuC,UAAA,KAAK,EAAE;AAAEN,YAAAA,QAAQ,EAAE;AAAZ,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAR,CADJ,CAFJ,CADJ;AAQH;AACJ;;;;EAlCiB7B,KAAK,CAACC,S;;AAqC5B,IAAMmC,SAAS,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHc,CAAlB;;IAMMC,U;;;;;AACF,sBAAYZ,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UAgCnBa,YAhCmB,GAgCJ,UAACC,cAAD,EAAoB;AAC/B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,cAAb;AAA6BG,QAAAA,SAAS,EAAC;AAAvC,OAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACH,KAA3B;;AACA,UAAGG,cAAc,CAACH,KAAf,KAAuB,CAA1B,EAA4B;AACxB,cAAKI,QAAL,CAAc;AAACK,UAAAA,EAAE,EAAC,UAAQ,MAAKC,KAAL,CAAWC,KAAX,CAAiBC;AAA7B,SAAd;;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAQ,MAAKE,KAAL,CAAWC,KAAX,CAAiBC,iBAArC;AACH,OAHD,MAGO,IAAGT,cAAc,CAACH,KAAf,KAAuB,CAA1B,EAA4B;AAC/B,cAAKI,QAAL,CAAc;AAACK,UAAAA,EAAE,EAAC,UAAQ,MAAKC,KAAL,CAAWC,KAAX,CAAiBE;AAA7B,SAAd;;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAO,MAAKE,KAAL,CAAWC,KAAX,CAAiBE,gBAApC;AACH,OAHM,MAGA,IAAGV,cAAc,CAACH,KAAf,KAAuB,CAA1B,EAA4B;AAC/B,cAAKI,QAAL,CAAc;AAACK,UAAAA,EAAE,EAAC,UAAQ,MAAKC,KAAL,CAAWC,KAAX,CAAiBG;AAA7B,SAAd;;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAO,MAAKE,KAAL,CAAWC,KAAX,CAAiBG,YAApC;AACH;AACJ,KA7CkB;;AAAA,UA+CnBC,YA/CmB,GA+CJ,UAACC,IAAD,EAAU;AACrB,YAAK3B,KAAL,CAAW4B,OAAX,CAAmBC,IAAnB,CAAwBF,IAAxB;AACH,KAjDkB;;AAAA,UAwEnBG,eAxEmB;AAAA;AAAA;AAAA;AAAA,6BAwED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSC,KAAK,CAAC,gBAAD,CADd;;AAAA;AACRC,cAAAA,QADQ;AAAA;AAAA,qBAEKA,QAAQ,CAACC,IAAT,EAFL;;AAAA;AAERC,cAAAA,IAFQ;;AAAA,oBAGVF,QAAQ,CAACG,MAAT,KAAoB,GAHV;AAAA;AAAA;AAAA;;AAAA,oBAGqBC,KAAK,CAACF,IAAI,CAACG,OAAN,CAH1B;;AAAA;AAAA,+CAIPH,IAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxEC;;AAAA,UAiGnBI,cAjGmB,GAiGF,YAAM;AACnB,YAAKvB,QAAL,CAAc;AACVwB,QAAAA,cAAc,EAAE,KADN;AAEVvB,QAAAA,SAAS,EAAC,IAFA;AAGVwB,QAAAA,aAAa,EAAC,EAHJ;AAIVC,QAAAA,YAAY,EAAC,EAJH;AAKVC,QAAAA,YAAY,EAAC,EALH;AAMVC,QAAAA,SAAS,EAAC,EANA;AAOVC,QAAAA,SAAS,EAAC,EAPA;AAQVC,QAAAA,YAAY,EAAC,EARH;AASVC,QAAAA,UAAU,EAAC;AAACC,UAAAA,OAAO,EAAC,EAAT;AAAaC,UAAAA,OAAO,EAAC,EAArB;AAAyBC,UAAAA,MAAM,EAAC,EAAhC;AAAoCC,UAAAA,MAAM,EAAC,EAA3C;AAA+CC,UAAAA,QAAQ,EAAC,EAAxD;AAA4DC,UAAAA,OAAO,EAAC,EAApE;AAAwEC,UAAAA,WAAW,EAAC;AAApF,SATD;AAUVC,QAAAA,SAAS,EAAC,KAVA;AAWVrC,QAAAA,SAAS,EAAC,KAXA;AAYVsC,QAAAA,SAAS,EAAC,KAZA;AAaVC,QAAAA,YAAY,EAAC,KAbH;AAcVC,QAAAA,YAAY,EAAC,KAdH;AAeVC,QAAAA,cAAc,EAAC,KAfL;AAgBVC,QAAAA,cAAc,EAAC,KAhBL;AAiBVC,QAAAA,aAAa,EAAC;AAjBJ,OAAd;AAmBH,KArHkB;;AAAA,UAsLnBC,YAtLmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAsLJ,kBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACX;AACIC,gBAAAA,IAFO,GAEF,MAAK1C,KAAL,CAAWL,SAAX,CAAqBL,KAFnB;AAGPqD,gBAAAA,IAHO,GAGF,MAAK3C,KAAL,CAAWmB,aAHT;AAIPyB,gBAAAA,OAJO,GAIC,MAAK5C,KAAL,CAAWoB,YAJZ;AAKPpC,gBAAAA,OALO,GAKC,MAAKgB,KAAL,CAAWqB,YALZ;AAMPwB,gBAAAA,KANO,GAMD,MAAK7C,KAAL,CAAWsB,SANV;AAOPwB,gBAAAA,IAPO,GAOF,MAAK9C,KAAL,CAAWuB,SAPT;AAQPC,gBAAAA,YARO,GAQM,MAAKxB,KAAL,CAAWwB,YARjB;AASPuB,gBAAAA,QATO,GASE,IATF;AAUPhD,gBAAAA,EAVO,GAUF,IAVE;;AAAA,sBAWR2C,IAAI,KAAG,CAXC;AAAA;AAAA;AAAA;;AAYP7C,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,gBAAAA,EAAE,GAAC,UAAS,MAAKC,KAAL,CAAWgD,KAAX,CAAiBC,aAAjB,CAA+BC,MAA3C;AACAH,gBAAAA,QAAQ,GAAC,KAAT;;AACA,sBAAK9B,cAAL;;AACAwB,gBAAAA,CAAC,CAACU,cAAF;AAhBO;AAAA,uBAiBgBzC,KAAK,CAAC,mBAAD,EAAsB;AAC9C0C,kBAAAA,MAAM,EAAE,MADsC;AAE9CC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAFqC;AAK9CxC,kBAAAA,IAAI,EAAEyC,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,IAAI,EAAEb,IAAI,CAACc,MAAL,CAAY,GAAZ,EAAgBb,OAAhB,EAAwB,GAAxB,EAA4B5D,OAA5B,EAAoC,GAApC,EAAwC6D,KAAxC,EAA8C,GAA9C,EAAkDC,IAAlD,EAAuD,GAAvD,EAA2DtB,YAA3D,EAAwE,GAAxE,EAA4EuB,QAA5E;AAAR,mBAAf;AALwC,iBAAtB,CAjBrB;;AAAA;AAiBDpC,gBAAAA,QAjBC;AAAA;AAAA,uBAwBYA,QAAQ,CAACC,IAAT,EAxBZ;;AAAA;AAwBDC,gBAAAA,IAxBC;;AAyBP,oBAAGA,IAAI,CAAC6C,OAAL,CAAa5C,MAAb,KAAsB,CAAzB,EAA2B;AACvB,wBAAK6C,qBAAL,CAA2B5D,EAA3B,EAA+B4C,IAA/B,EAAqCC,OAArC,EAA8C5D,OAA9C,EAAuD6D,KAAvD,EAA8DC,IAA9D,EAAoEtB,YAApE,EAAkFuB,QAAlF;;AACA,wBAAKrD,QAAL,CAAc;AAAEkE,oBAAAA,cAAc,EAAE/C;AAAlB,mBAAd;;AACAgD,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,MAApD;AACH,iBAJD,MAIK;AACDH,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,OAApD;AACH;;AA/BM;AAAA;;AAAA;AAAA,sBAiCHtB,IAAI,KAAG,CAjCJ;AAAA;AAAA;AAAA;;AAkCP7C,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,gBAAAA,EAAE,GAAC,SAAQ,MAAKC,KAAL,CAAWgD,KAAX,CAAiBiB,YAAjB,CAA8Bf,MAAzC;AACAH,gBAAAA,QAAQ,GAAC,KAAT;;AACA,sBAAK9B,cAAL;;AACAwB,gBAAAA,CAAC,CAACU,cAAF;AAtCO;AAAA,uBAuCgBzC,KAAK,CAAC,kBAAD,EAAqB;AAC7C0C,kBAAAA,MAAM,EAAE,MADqC;AAE7CC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAFoC;AAK7CxC,kBAAAA,IAAI,EAAEyC,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,IAAI,EAAEb,IAAI,CAACc,MAAL,CAAY,GAAZ,EAAgBb,OAAhB,EAAwB,GAAxB,EAA4B5D,OAA5B,EAAoC,GAApC,EAAwC6D,KAAxC,EAA8C,GAA9C,EAAkDC,IAAlD,EAAuD,GAAvD,EAA2DtB,YAA3D,EAAwE,GAAxE,EAA4EuB,QAA5E;AAAR,mBAAf;AALuC,iBAArB,CAvCrB;;AAAA;AAuCDpC,gBAAAA,SAvCC;AAAA;AAAA,uBA8CYA,SAAQ,CAACC,IAAT,EA9CZ;;AAAA;AA8CDC,gBAAAA,KA9CC;;AA+CP,oBAAGA,KAAI,CAAC6C,OAAL,CAAa5C,MAAb,KAAsB,CAAzB,EAA2B;AACvB,wBAAKoD,oBAAL,CAA0BnE,EAA1B,EAA8B4C,IAA9B,EAAoCC,OAApC,EAA6C5D,OAA7C,EAAsD6D,KAAtD,EAA6DC,IAA7D,EAAmEtB,YAAnE,EAAiFuB,QAAjF;;AACA,wBAAKrD,QAAL,CAAc;AAAEkE,oBAAAA,cAAc,EAAE/C;AAAlB,mBAAd;;AACAgD,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,MAApD;AACH,iBAJD,MAIK;AACDH,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,OAApD;AACH;;AArDM;AAAA;;AAAA;AAAA,sBAuDHtB,IAAI,KAAG,CAvDJ;AAAA;AAAA;AAAA;;AAwDP7C,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,gBAAAA,EAAE,GAAC,SAAQ,MAAKC,KAAL,CAAWgD,KAAX,CAAiBmB,QAAjB,CAA0BjB,MAArC;AACAH,gBAAAA,QAAQ,GAAC,KAAT;;AACA,sBAAK9B,cAAL;;AACAwB,gBAAAA,CAAC,CAACU,cAAF;AA5DO;AAAA,uBA6DgBzC,KAAK,CAAC,cAAD,EAAiB;AACzC0C,kBAAAA,MAAM,EAAE,MADiC;AAEzCC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAFgC;AAKzCxC,kBAAAA,IAAI,EAAEyC,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,IAAI,EAAEb,IAAI,CAACc,MAAL,CAAY,GAAZ,EAAgBb,OAAhB,EAAwB,GAAxB,EAA4B5D,OAA5B,EAAoC,GAApC,EAAwC6D,KAAxC,EAA8C,GAA9C,EAAkDC,IAAlD,EAAuD,GAAvD,EAA2DtB,YAA3D,EAAwE,GAAxE,EAA4EuB,QAA5E;AAAR,mBAAf;AALmC,iBAAjB,CA7DrB;;AAAA;AA6DDpC,gBAAAA,UA7DC;AAAA;AAAA,uBAoEYA,UAAQ,CAACC,IAAT,EApEZ;;AAAA;AAoEDC,gBAAAA,MApEC;;AAqEP,oBAAGA,MAAI,CAAC6C,OAAL,CAAa5C,MAAb,KAAsB,CAAzB,EAA2B;AACvB,wBAAKsD,gBAAL,CAAsBrE,EAAtB,EAA0B4C,IAA1B,EAAgCC,OAAhC,EAAyC5D,OAAzC,EAAkD6D,KAAlD,EAAyDC,IAAzD,EAA+DtB,YAA/D,EAA6EuB,QAA7E;;AACA,wBAAKrD,QAAL,CAAc;AAAEkE,oBAAAA,cAAc,EAAE/C;AAAlB,mBAAd;;AACAgD,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,MAApD;AACH,iBAJD,MAIK;AACDH,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,OAApD;AACH;;AA3EM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtLI;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAmSnBK,SAnSmB,GAmST,YAAI;AACV,YAAK3E,QAAL,CAAc;AAAEwB,QAAAA,cAAc,EAAE;AAAlB,OAAd;;AACA,YAAKoD,YAAL,GACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAI,MAAK9E,QAAL,CAAc;AAAEO,UAAAA,KAAK,EAAEuE,GAAG,CAACd;AAAb,SAAd,CAAJ;AAAA,OADT,EAECe,KAFD,CAEO,UAAAC,GAAG;AAAA,eAAI7E,OAAO,CAACC,GAAR,CAAY4E,GAAZ,CAAJ;AAAA,OAFV;AAGH,KAxSkB;;AAAA,UA0SnBJ,YA1SmB;AAAA;AAAA;AAAA;AAAA,6BA0SJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY5D,KAAK,CAAC,cAAD,CADjB;;AAAA;AACLC,cAAAA,QADK;AAAA;AAAA,qBAEQA,QAAQ,CAACC,IAAT,EAFR;;AAAA;AAELC,cAAAA,IAFK;;AAAA,oBAGPF,QAAQ,CAACG,MAAT,KAAoB,GAHb;AAAA;AAAA;AAAA;;AAAA,oBAGwBC,KAAK,CAACF,IAAI,CAACG,OAAN,CAH7B;;AAAA;AAIXnB,cAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AAJW,gDAKJA,IALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1SI;AAEf,UAAKb,KAAL,GAAW,EAAX;AACA,UAAKA,KAAL,CAAW2E,SAAX,GAAqB,GAArB;AACA,UAAK3E,KAAL,CAAWkB,cAAX,GAA0B,KAA1B;AACA,UAAKlB,KAAL,CAAWW,QAAX,GAAoB,EAApB;AACA,UAAKX,KAAL,CAAW4D,cAAX,GAA0B,EAA1B;AACA,UAAK5D,KAAL,CAAWwD,IAAX,GAAgB,EAAhB;AACA,UAAKxD,KAAL,CAAWC,KAAX,GAAiB,EAAjB;AACA,UAAKD,KAAL,CAAWD,EAAX,GAAc,EAAd;AACA,UAAKC,KAAL,CAAWgD,KAAX,GAAmB;AAAEC,MAAAA,aAAa,EAAC,EAAhB;AAAoBgB,MAAAA,YAAY,EAAC,EAAjC;AAAqCE,MAAAA,QAAQ,EAAC;AAA9C,KAAnB,CAVe,CAWf;;AACA,UAAKnE,KAAL,CAAWL,SAAX,GAAqB,EAArB;AACA,UAAKK,KAAL,CAAWmB,aAAX,GAAyB,EAAzB;AACA,UAAKnB,KAAL,CAAWoB,YAAX,GAAwB,EAAxB;AACA,UAAKpB,KAAL,CAAWqB,YAAX,GAAwB,EAAxB;AACA,UAAKrB,KAAL,CAAWsB,SAAX,GAAqB,EAArB;AACA,UAAKtB,KAAL,CAAWuB,SAAX,GAAqB,EAArB;AACA,UAAKvB,KAAL,CAAWwB,YAAX,GAAwB,EAAxB;AACA,UAAKxB,KAAL,CAAWyB,UAAX,GAAsB;AAACC,MAAAA,OAAO,EAAC,EAAT;AAAaC,MAAAA,OAAO,EAAC,EAArB;AAAyBC,MAAAA,MAAM,EAAC,EAAhC;AAAoCC,MAAAA,MAAM,EAAC,EAA3C;AAA+CC,MAAAA,QAAQ,EAAC,EAAxD;AAA4DC,MAAAA,OAAO,EAAC,EAApE;AAAwEC,MAAAA,WAAW,EAAC;AAApF,KAAtB;AACA,UAAKhC,KAAL,CAAWiC,SAAX,GAAqB,KAArB;AACA,UAAKjC,KAAL,CAAWJ,SAAX,GAAqB,KAArB;AACA,UAAKI,KAAL,CAAWkC,SAAX,GAAqB,KAArB;AACA,UAAKlC,KAAL,CAAWmC,YAAX,GAAwB,KAAxB;AACA,UAAKnC,KAAL,CAAWoC,YAAX,GAAwB,KAAxB;AACA,UAAKpC,KAAL,CAAWqC,cAAX,GAA0B,KAA1B;AACA,UAAKrC,KAAL,CAAWsC,cAAX,GAA0B,KAA1B;AACA,UAAKtC,KAAL,CAAWuC,aAAX,GAAyB,KAAzB;AACA,UAAKqC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,uDAAd;AA7Be;AA8BlB;;;;wCAqBmB;AAAA;;AAChB,UAAIE,IAAI,GAAG,IAAX;;AACA,UAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAH,EAAkC;AAC9BF,QAAAA,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAP;;AACA,YAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAiB,CAAjB,MAAsB,MAAzB,EAAgC;AAC5B,eAAK7E,YAAL,CAAkB,aAAlB;AACH,SAFD,MAEM,IAAG0E,IAAI,CAACG,SAAL,CAAe,CAAf,EAAiB,CAAjB,MAAsB,MAAzB,EAAgC;AAClC,eAAK7E,YAAL,CAAkB,gBAAlB;AACH,SAFK,MAEA,IAAG0E,IAAI,CAACG,SAAL,CAAe,CAAf,EAAiB,CAAjB,MAAsB,MAAzB,EAAgC;AAClC,eAAK7E,YAAL,CAAkB,aAAlB;AACH,SAFK,MAED;AACD,eAAKX,QAAL,CAAc;AAACyF,YAAAA,MAAM,EAACJ;AAAR,WAAd;AACH;AACJ,OAXD,MAWK;AACD,aAAK1E,YAAL,CAAkB,GAAlB;AACH;;AACD,WAAKI,eAAL,GACC8D,IADD,CACM,UAAAC,GAAG;AAAA,eAAI,MAAI,CAAC9E,QAAL,CAAc;AAAEsD,UAAAA,KAAK,EAAEwB,GAAG,CAACd;AAAb,SAAd,CAAJ;AAAA,OADT,EAECe,KAFD,CAEO,UAAAC,GAAG;AAAA,eAAI7E,OAAO,CAACC,GAAR,CAAY4E,GAAZ,CAAJ;AAAA,OAFV;AAGH;;;2BASMU,G,EAAK;AACR,UAAI,KAAKpF,KAAL,CAAW2E,SAAX,KAAyBS,GAA7B,EAAkC;AAC9B,aAAK1F,QAAL,CAAc;AACViF,UAAAA,SAAS,EAAES;AADD,SAAd;AAGH;AACJ;;;oCAEeC,G,EAAK;AACjB,aAAO,IAAP;AACH;;;oCAEeA,G,EAAK;AACjB,aACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAGA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;sCAwBiBC,C,EAAG;AACjB,aAAOC,UAAU,CAACD,CAAD,CAAV,KAAkBA,CAAC,KAAK,CAA/B;AACH,K,CAED;;;;sCACkBE,K,EAAO;AAAA;;AACrB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMnG,KAAK,GAAGmG,MAAM,CAACnG,KAArB;AACA,UAAMoG,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,WAAKhG,QAAL,qBACKgG,IADL,EACYpG,KADZ,GAEE,YAAI;AAAC,QAAA,MAAI,CAACqG,QAAL,CAAcD,IAAd,EAAmBpG,KAAnB;AAA0B,OAFjC;AAGH;;;6BAEQoG,I,EAAKpG,K,EAAM;AAChB,UAAIsG,WAAW,GAAC,KAAK5F,KAAL,CAAWyB,UAA3B;AACA,UAAIyB,MAAM,GAAC,IAAX;;AACA,cAAOwC,IAAP;AACI,aAAK,eAAL;AACIE,UAAAA,WAAW,CAACjE,OAAZ,GAAsBrC,KAAK,CAAC4D,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAAhD;AACA,eAAKxD,QAAL,CAAc;AAAEwC,YAAAA,SAAS,EAAC0D,WAAW,CAACjE;AAAxB,WAAd;AACA;;AACJ,aAAK,cAAL;AACIiE,UAAAA,WAAW,CAAChE,MAAZ,GAAqBtC,KAAK,CAAC4D,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAA/C;AACA,eAAKxD,QAAL,CAAc;AAAEyC,YAAAA,YAAY,EAACyD,WAAW,CAAChE;AAA3B,WAAd;AACA;;AACJ,aAAK,cAAL;AACIsB,UAAAA,MAAM,GAAG5D,KAAK,CAAC4D,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAAnC;AACA0C,UAAAA,WAAW,CAAC/D,MAAZ,GAAqBqB,MAAM,IAAI,KAAK2C,iBAAL,CAAuBvG,KAAvB,CAA/B;AACA,eAAKI,QAAL,CAAc;AAAE0C,YAAAA,YAAY,EAACwD,WAAW,CAAC/D;AAA3B,WAAd;AACA;;AACJ,aAAK,WAAL;AACI+D,UAAAA,WAAW,CAAC9D,QAAZ,GAAuBxC,KAAK,CAAC4D,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAAjD;AACA,eAAKxD,QAAL,CAAc;AAAE2C,YAAAA,cAAc,EAACuD,WAAW,CAAC9D;AAA7B,WAAd;AACA;;AACJ,aAAK,WAAL;AACI8D,UAAAA,WAAW,CAAC7D,OAAZ,GAAsB,sBAAsB+D,IAAtB,CAA2BxG,KAA3B,IAAoC,IAApC,GAA2C,KAAjE;AACA,eAAKI,QAAL,CAAc;AAAE4C,YAAAA,cAAc,EAACsD,WAAW,CAAC7D;AAA7B,WAAd;AACA;;AACJ,aAAK,cAAL;AACI6D,UAAAA,WAAW,CAAC5D,WAAZ,GAA0B1C,KAAK,CAAC4D,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAApD;AACA,eAAKxD,QAAL,CAAc;AAAE6C,YAAAA,aAAa,EAACqD,WAAW,CAAC5D;AAA5B,WAAd;AACA;;AACJ;AACInC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AA3BR;;AA8BA,WAAKJ,QAAL,CAAc;AACV+B,QAAAA,UAAU,EAAEmE,WADF;AAEV1D,QAAAA,SAAS,EAAC0D,WAAW,CAACjE,OAFZ;AAGVQ,QAAAA,YAAY,EAACyD,WAAW,CAAChE,MAHf;AAIVQ,QAAAA,YAAY,EAACwD,WAAW,CAAC/D,MAJf;AAKVQ,QAAAA,cAAc,EAACuD,WAAW,CAAC9D,QALjB;AAMVQ,QAAAA,cAAc,EAACsD,WAAW,CAAC7D,OANjB;AAOVQ,QAAAA,aAAa,EAACqD,WAAW,CAAC5D;AAPhB,OAAd,EAQG,KAAK+D,YARR;AASH;;;mCAEc;AACX,WAAKrG,QAAL,CAAc;AAACuC,QAAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWkC,SAAX,IAAwB,KAAKlC,KAAL,CAAWmC,YAAnC,IAAmD,KAAKnC,KAAL,CAAWoC,YAA9D,IAA8E,KAAKpC,KAAL,CAAWqC,cAAzF,IAA2G,KAAKrC,KAAL,CAAWsC,cAAtH,IAAwI,KAAKtC,KAAL,CAAWuC,aAAnJ,IAAoK,KAAKvC,KAAL,CAAWJ;AAA3L,OAAd;AACH,K,CACD;;;;0CAiFsBG,E,EAAI4C,I,EAAMC,O,EAAS5D,O,EAAS6D,K,EAAOC,I,EAAMtB,Y,EAAauB,Q,EAAU;AAClF,UAAIiD,KAAK,GAAG;AACR,cAAMjG,EADE;AAER,gBAAO4C,IAFC;AAGR,mBAAWC,OAHH;AAIR,mBAAW5D,OAJH;AAKR,qBAAY6D,KALJ;AAMR,qBAAYC,IANJ;AAOR,wBAAgBtB,YAPR;AAQR,oBAAWuB;AARH,OAAZ;AAUA,WAAK/C,KAAL,CAAWgD,KAAX,CAAiBC,aAAjB,CAA+BzC,IAA/B,CAAoCwF,KAApC;AACA,WAAKtG,QAAL,CAAc,KAAKM,KAAL,CAAWgD,KAAzB;AACH;;;yCAEoBjD,E,EAAI4C,I,EAAMC,O,EAAS5D,O,EAAS6D,K,EAAOC,I,EAAMtB,Y,EAAauB,Q,EAAU;AACjF,UAAIiD,KAAK,GAAG;AACR,cAAMjG,EADE;AAER,gBAAO4C,IAFC;AAGR,mBAAWC,OAHH;AAIR,mBAAW5D,OAJH;AAKR,qBAAY6D,KALJ;AAMR,qBAAYC,IANJ;AAOR,wBAAgBtB,YAPR;AAQR,oBAAWuB;AARH,OAAZ;AAUA,WAAK/C,KAAL,CAAWgD,KAAX,CAAiBiB,YAAjB,CAA8BzD,IAA9B,CAAmCwF,KAAnC;AACA,WAAKtG,QAAL,CAAc,KAAKM,KAAL,CAAWgD,KAAzB;AACH;;;qCAiBgBjD,E,EAAI4C,I,EAAMC,O,EAAS5D,O,EAAS6D,K,EAAOC,I,EAAMtB,Y,EAAauB,Q,EAAU;AAC7E,UAAIiD,KAAK,GAAG;AACR,cAAMjG,EADE;AAER,gBAAO4C,IAFC;AAGR,mBAAWC,OAHH;AAIR,mBAAW5D,OAJH;AAKR,qBAAY6D,KALJ;AAMR,qBAAYC,IANJ;AAOR,wBAAgBtB,YAPR;AAQR,oBAAWuB;AARH,OAAZ;AAUA,WAAK/C,KAAL,CAAWgD,KAAX,CAAiBmB,QAAjB,CAA0B3D,IAA1B,CAA+BwF,KAA/B;AACA,WAAKtG,QAAL,CAAc,KAAKM,KAAL,CAAWgD,KAAzB;AACH;;;AAED;AACA;AACA;AAEA;6BAES;AAAA;;AACL,UAAMiD,YAAY,GAAG;AACjBC,QAAAA,gBAAgB,EAAE,IADD;AAEjBC,QAAAA,IAAI,EAAC,CAFY;AAETC,QAAAA,eAAe,EAAE,CAAE;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAAF,EAA6B;AAAE+G,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAA7B,EAAwD;AAAE+G,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAAxD,EAAmF;AAAE+G,UAAAA,IAAI,EAAE,KAAR;AAAe/G,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWgD,KAAX,CAAiBC,aAAjB,CAA+BC;AAArD,SAAnF,CAFR;AAGjBoD,QAAAA,WAAW,EAAE,EAHI;AAGAC,QAAAA,cAAc,EAAE,CAHhB;AAGmBC,QAAAA,cAAc,EAAE,CAHnC;AAGsCC,QAAAA,OAAO,EAAE,MAH/C;AAGuDC,QAAAA,QAAQ,EAAE,MAHjE;AAGyEC,QAAAA,SAAS,EAAE,OAHpF;AAG6FC,QAAAA,QAAQ,EAAE,MAHvG;AAG+GC,QAAAA,kBAAkB,EAAE;AAHnI,OAArB;AAKA,UAAMC,WAAW,GAAG;AAChBZ,QAAAA,gBAAgB,EAAE,IADF;AAEhBC,QAAAA,IAAI,EAAC,CAFW;AAERC,QAAAA,eAAe,EAAE,CAAE;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAAF,EAA6B;AAAE+G,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAA7B,EAAwD;AAAE+G,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAAxD,EAAmF;AAAE+G,UAAAA,IAAI,EAAE,KAAR;AAAe/G,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWgD,KAAX,CAAiBiB,YAAjB,CAA8Bf;AAApD,SAAnF,CAFT;AAGhBoD,QAAAA,WAAW,EAAE,EAHG;AAGCC,QAAAA,cAAc,EAAE,CAHjB;AAGoBC,QAAAA,cAAc,EAAE,CAHpC;AAGuCC,QAAAA,OAAO,EAAE,MAHhD;AAGwDC,QAAAA,QAAQ,EAAE,MAHlE;AAG0EC,QAAAA,SAAS,EAAE,OAHrF;AAG8FC,QAAAA,QAAQ,EAAE,MAHxG;AAGgHC,QAAAA,kBAAkB,EAAE;AAHpI,OAApB;AAKA,UAAME,WAAW,GAAG;AAChBb,QAAAA,gBAAgB,EAAE,IADF;AAEhBC,QAAAA,IAAI,EAAC,CAFW;AAERC,QAAAA,eAAe,EAAE,CAAE;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAAF,EAA6B;AAAE+G,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAA7B,EAAwD;AAAE+G,UAAAA,IAAI,EAAE,IAAR;AAAc/G,UAAAA,KAAK,EAAE;AAArB,SAAxD,EAAmF;AAAE+G,UAAAA,IAAI,EAAE,KAAR;AAAe/G,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWgD,KAAX,CAAiBmB,QAAjB,CAA0BjB;AAAhD,SAAnF,CAFT;AAGhBoD,QAAAA,WAAW,EAAE,EAHG;AAGCC,QAAAA,cAAc,EAAE,CAHjB;AAGoBC,QAAAA,cAAc,EAAE,CAHpC;AAGuCC,QAAAA,OAAO,EAAE,MAHhD;AAGwDC,QAAAA,QAAQ,EAAE,MAHlE;AAG0EC,QAAAA,SAAS,EAAE,OAHrF;AAG8FC,QAAAA,QAAQ,EAAE,MAHxG;AAGgHC,QAAAA,kBAAkB,EAAE;AAHpI,OAApB;AAMA,aACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,KAAK,EAAE;AAAC7C,UAAAA,OAAO,EAAC,MAAT;AAAiBgD,UAAAA,KAAK,EAAC;AAAvB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,EAII,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE;AAAK,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAC;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAxB;AAAgE,QAAA,MAAM,EAAE,KAAKhH,KAAL,CAAWkB,cAAnF;AAAmG,QAAA,KAAK,EAAC,UAAzG;AAAoH,QAAA,IAAI,EAAC,OAAzH;AAAiI,QAAA,KAAK,EAAC,OAAvI;AAA+I,QAAA,cAAc,EAAE,KAAKD,cAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKuB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,SAAS,EAAE,KAAKxC,KAAL,CAAWJ,SAAX,GAAuB,SAAvB,GAAmC,OAA/D;AAAwE,QAAA,WAAW,EAAC,WAApF;AAAgG,QAAA,OAAO,EAAER,SAAzG;AAAoH,QAAA,KAAK,EAAE,KAAKY,KAAL,CAAWL,SAAtI;AAAiJ,QAAA,QAAQ,EAAE,KAAKH,YAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,EAAE,EAAE,KAAKQ,KAAL,CAAWkC,SAAX,GAAuB,SAAvB,GAAmC,OAA1D;AAAmE,QAAA,KAAK,EAAC,cAAzE;AAAwF,QAAA,IAAI,EAAC,eAA7F;AAA6G,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWmB,aAA/H;AAA8I,QAAA,QAAQ,EAAE,KAAKyD,iBAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,EAAE,EAAE,KAAK5E,KAAL,CAAWmC,YAAX,GAA0B,SAA1B,GAAsC,OAA7D;AAAsE,QAAA,IAAI,EAAC,UAA3E;AAAsF,QAAA,IAAI,EAAC,GAA3F;AAA+F,QAAA,KAAK,EAAC,iBAArG;AAAuH,QAAA,IAAI,EAAC,cAA5H;AAA2I,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWoB,YAA7J;AAA2K,QAAA,QAAQ,EAAE,KAAKwD,iBAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,EAAE,EAAE,KAAK5E,KAAL,CAAWoC,YAAX,GAA0B,SAA1B,GAAsC,OAA7D;AAAsE,QAAA,KAAK,EAAC,gBAA5E;AAA6F,QAAA,IAAI,EAAC,cAAlG;AAAiH,QAAA,IAAI,EAAC,QAAtH;AAA+H,QAAA,GAAG,EAAC,GAAnI;AAAuI,QAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWqB,YAAzJ;AAAuK,QAAA,QAAQ,EAAE,KAAKuD,iBAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,EAAE,EAAE,KAAK5E,KAAL,CAAWqC,cAAX,GAA4B,SAA5B,GAAwC,OAA/D;AAAwE,QAAA,KAAK,EAAC,YAA9E;AAA4F,QAAA,IAAI,EAAC,WAAjG;AAA6G,QAAA,IAAI,EAAC,MAAlH;AAAyH,QAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWsB,SAA3I;AAAsJ,QAAA,QAAQ,EAAE,KAAKsD,iBAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,EAAE,EAAE,KAAK5E,KAAL,CAAWsC,cAAX,GAA4B,SAA5B,GAAwC,OAA/D;AAAwE,QAAA,KAAK,EAAC,YAA9E;AAA4F,QAAA,IAAI,EAAC,WAAjG;AAA6G,QAAA,IAAI,EAAC,KAAlH;AAAwH,QAAA,KAAK,EAAE,KAAKtC,KAAL,CAAWuB,SAA1I;AAAqJ,QAAA,QAAQ,EAAE,KAAKqD,iBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,EAAE,EAAE,KAAK5E,KAAL,CAAWuC,aAAX,GAA2B,SAA3B,GAAuC,OAA9D;AAAuE,QAAA,IAAI,EAAC,UAA5E;AAAuF,QAAA,IAAI,EAAC,GAA5F;AAAgG,QAAA,KAAK,EAAC,eAAtG;AAAsH,QAAA,IAAI,EAAC,cAA3H;AAA0I,QAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWwB,YAA5J;AAA0K,QAAA,QAAQ,EAAE,KAAKoD,iBAAzL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAgD,QAAA,QAAQ,EAAE,CAAC,KAAK5E,KAAL,CAAWiC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAR,CARJ,CADJ,CAJJ,EAkBI,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAU,QAAA,KAAK,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAElE,UAAU,CAAC;AAAEkJ,UAAAA,MAAM,EAAE,KAAKjH,KAAL,CAAW2E,SAAX,KAAyB;AAAnC,SAAD,CAA9B;AAA0E,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACG,MAAL,CAAY,GAAZ;AAAmB,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE/G,UAAU,CAAC;AAAEkJ,UAAAA,MAAM,EAAE,KAAKjH,KAAL,CAAW2E,SAAX,KAAyB;AAAnC,SAAD,CAA9B;AAA0E,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACG,MAAL,CAAY,GAAZ;AAAmB,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAJJ,EAOI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE/G,UAAU,CAAC;AAAEkJ,UAAAA,MAAM,EAAE,KAAKjH,KAAL,CAAW2E,SAAX,KAAyB;AAAnC,SAAD,CAA9B;AAA0E,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACG,MAAL,CAAY,GAAZ;AAAmB,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAPJ,EAUI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,woBAVJ,EAaI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,OAAO,EAAE,KAAKT,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAbJ,CAlBJ,EAmCI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKrE,KAAL,CAAW2E,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAG,KAAK3E,KAAL,CAAWgD,KAAX,CAAiBC,aAAxC;AAAwD,QAAA,OAAO,EAAC,GAAhE;AAAoE,QAAA,KAAK,MAAzE;AAA0E,QAAA,SAAS,MAAnF;AAAoF,QAAA,UAAU,MAA9F;AAA+F,QAAA,OAAO,EAAGgD,YAAzG;AAAwH,QAAA,aAAa,EAAG,KAAKiB,eAA7I;AAA+J,QAAA,eAAe,EAAG,KAAKC,eAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,MAAM,EAAE;AAAEzE,UAAAA,IAAI,EAAE,YAAR;AAAsB0E,UAAAA,KAAK,EAAE;AAA7B,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAuC,QAAA,MAAM,EAAE;AAAE1E,UAAAA,IAAI,EAAE,YAAR;AAAsB0E,UAAAA,KAAK,EAAE;AAA7B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAMS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANT,CADJ,CADJ,CADJ,CADJ,EAeI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAG,KAAKpH,KAAL,CAAWgD,KAAX,CAAiBiB,YAAxC;AAAuD,QAAA,OAAO,EAAC,GAA/D;AAAmE,QAAA,KAAK,MAAxE;AAAyE,QAAA,SAAS,MAAlF;AAAmF,QAAA,UAAU,MAA7F;AAA8F,QAAA,OAAO,EAAG6C,WAAxG;AAAsH,QAAA,aAAa,EAAG,KAAKI,eAA3I;AAA6J,QAAA,eAAe,EAAG,KAAKC,eAApL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,MAAM,EAAE;AAAEzE,UAAAA,IAAI,EAAE,YAAR;AAAsB0E,UAAAA,KAAK,EAAE;AAA7B,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAuC,QAAA,MAAM,EAAE;AAAE1E,UAAAA,IAAI,EAAE,YAAR;AAAsB0E,UAAAA,KAAK,EAAE;AAA7B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAMS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANT,CADJ,CADJ,CADJ,CAfJ,EA6BI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAG,KAAKpH,KAAL,CAAWgD,KAAX,CAAiBmB,QAAxC;AAAmD,QAAA,OAAO,EAAC,GAA3D;AAA+D,QAAA,KAAK,MAApE;AAAqE,QAAA,SAAS,MAA9E;AAA+E,QAAA,UAAU,MAAzF;AAA0F,QAAA,OAAO,EAAG4C,WAApG;AAAkH,QAAA,aAAa,EAAG,KAAKG,eAAvI;AAAyJ,QAAA,eAAe,EAAG,KAAKC,eAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,MAAM,EAAE;AAAEzE,UAAAA,IAAI,EAAE,YAAR;AAAsB0E,UAAAA,KAAK,EAAE;AAA7B,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAuC,QAAA,MAAM,EAAE;AAAE1E,UAAAA,IAAI,EAAE,YAAR;AAAsB0E,UAAAA,KAAK,EAAE;AAA7B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAMS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANT,CADJ,CADJ,CADJ,CA7BJ,CAnCJ,CADJ;AAkFH;;;;EA3aoBnK,S;;AA8azB,eAAesC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Animation, MDBContainer, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nclass BSTable extends React.Component {\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <Animation  type=\"fadeIn\">\n                            <MDBCardHeader> User Details</MDBCardHeader>\n                            <MDBCardBody className=\"text-info\">\n                                <MDBRow className=\"justify-content-center\">\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\",wordwrap: \"break-word\"  }}>\n                                        <MDBListGroupItem color=\"primary\">License Number: {this.props.data.license}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Owner Address:<br/> {this.props.data.owneraddress}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\",wordwrap: \"break-word\" }}>\n                                        <MDBListGroupItem color=\"primary\">Owner Name: {this.props.data.ownername}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Owner CNIC: {this.props.data.ownercnic}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </Animation>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>User Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\nconst userTypes = [\n    { label: \"Manufacturer\", value: 1 },\n    { label: \"Distributor\", value: 2 },\n    { label: \"Chemist\", value: 3 },\n];\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.activeTab=\"1\";\n        this.state.isUserPaneOpen=false;\n        this.state.response=\"\";\n        this.state.responseToPost={};\n        this.state.post=\"\";\n        this.state.count=\"\";\n        this.state.id=\"\";\n        this.state.users = { manufacturers:[], distributors:[], chemists:[]};\n        ////////////////////////User////////////////////\n        this.state.typeValue=\"\";\n        this.state.compNameValue=\"\";\n        this.state.addressValue=\"\";\n        this.state.licenseValue=\"\";\n        this.state.ownerName=\"\";\n        this.state.ownerCnic=\"\";\n        this.state.ownerAddress=\"\";\n        this.state.formErrors={typeVal:'', nameVal:'', addVal:'', licVal:'', ownerVal:'', cnicVal:'', ownerAddVal:''};\n        this.state.formValid=false;\n        this.state.typeValid=false;\n        this.state.nameValid=false;\n        this.state.addressValid=false;\n        this.state.licenseValid=false;\n        this.state.ownerNameValid=false;\n        this.state.ownerCnicValid=false;\n        this.state.ownerAddValid=false;\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ typeValue: selectedOption, typeValid:true });\n        console.log(selectedOption.value);\n        if(selectedOption.value===1){\n            this.setState({id:\"manuf\"+this.state.count.manufacturercount});\n            console.log(\"manuf\"+this.state.count.manufacturercount);\n        } else if(selectedOption.value===2){\n            this.setState({id:\"manuf\"+this.state.count.distributorcount});\n            console.log(\"dist\"+this.state.count.distributorcount);\n        } else if(selectedOption.value===3){\n            this.setState({id:\"manuf\"+this.state.count.chemistcount});\n            console.log(\"chem\"+this.state.count.chemistcount);\n        }\n    }\n\n    redirectUser = (path) => {\n        this.props.history.push(path);\n    }\n\n    componentDidMount() {\n        var user = null;\n        if(sessionStorage.getItem(\"user\")){\n            user = sessionStorage.getItem(\"user\");\n            if(user.substring(0,4)===\"chem\"){\n                this.redirectUser('/login/chem');\n            }else if(user.substring(0,4)===\"manu\"){\n                this.redirectUser('/login/manufac');\n            }else if(user.substring(0,4)===\"dist\"){\n                this.redirectUser('/login/dist');\n            }else{\n                this.setState({userID:user});\n            }\n        }else{\n            this.redirectUser('/');\n        }\n        this.callGetAllUsers()\n        .then(res => this.setState({ users: res.express }))\n        .catch(err => console.log(err));\n    }\n\n    callGetAllUsers = async () => {\n        const response = await fetch('/get_all_users');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    expandComponent(row) {\n        return (\n            <BSTable data={ row } />\n        );\n    }\n\n    closeUserPanel = () => {\n        this.setState({\n            isUserPaneOpen: false,\n            typeValue:null,\n            compNameValue:'',\n            addressValue:'',\n            licenseValue:'',\n            ownerName:'',\n            ownerCnic:'',\n            ownerAddress:'',\n            formErrors:{typeVal:'', nameVal:'', addVal:'', licVal:'', ownerVal:'', cnicVal:'', ownerAddVal:''},\n            formValid:false,\n            typeValid:false,\n            nameValid:false,\n            addressValid:false,\n            licenseValid:false,\n            ownerNameValid:false,\n            ownerCnicValid:false,\n            ownerAddValid:false,\n        });\n    };\n\n    isPositiveInteger(n) {\n        return parseFloat(n) === n >>> 0;\n    }\n\n    /////////////////////////////////////////////////////////////\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        },()=>{this.validate(name,value)});\n    };\n\n    validate(name,value){\n        var fieldErrors=this.state.formErrors;\n        var length=null;\n        switch(name){\n            case 'compNameValue':\n                fieldErrors.nameVal = value.length > 0 ? true : false;\n                this.setState({ nameValid:fieldErrors.nameVal });\n                break;\n            case 'addressValue':\n                fieldErrors.addVal = value.length > 0 ? true : false;\n                this.setState({ addressValid:fieldErrors.addVal });\n                break;\n            case 'licenseValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.licVal = length && this.isPositiveInteger(value);\n                this.setState({ licenseValid:fieldErrors.licVal });\n                break;\n            case 'ownerName':\n                fieldErrors.ownerVal = value.length > 0 ? true : false;\n                this.setState({ ownerNameValid:fieldErrors.ownerVal });\n                break;\n            case 'ownerCnic':\n                fieldErrors.cnicVal = \"^\\d{5}-\\d{7}-\\d{1}$\".test(value) ? true : false;\n                this.setState({ ownerCnicValid:fieldErrors.cnicVal });\n                break;\n            case 'ownerAddress':\n                fieldErrors.ownerAddVal = value.length > 0 ? true : false;\n                this.setState({ ownerAddValid:fieldErrors.ownerAddVal });\n                break;\n            default:\n                console.log(\"Invalid Feild\");\n        }\n\n        this.setState({\n            formErrors: fieldErrors,\n            nameValid:fieldErrors.nameVal,\n            addressValid:fieldErrors.addVal,\n            licenseValid:fieldErrors.licVal,\n            ownerNameValid:fieldErrors.ownerVal,\n            ownerCnicValid:fieldErrors.cnicVal,\n            ownerAddValid:fieldErrors.ownerAddVal,\n        }, this.validateForm );\n    }\n\n    validateForm() {\n        this.setState({formValid: this.state.nameValid && this.state.addressValid && this.state.licenseValid && this.state.ownerNameValid && this.state.ownerCnicValid && this.state.ownerAddValid && this.state.typeValid });\n    }\n    //tasks.map((task) => task.name )\n\n    handleSubmit = async e => {\n        /////////////////////////////////////ckeck if user is manuf/dist/chem\n        var type=this.state.typeValue.value;\n        var comp=this.state.compNameValue;\n        var address=this.state.addressValue;\n        var license=this.state.licenseValue;\n        var owner=this.state.ownerName;\n        var cnic=this.state.ownerCnic;\n        var ownerAddress=this.state.ownerAddress;\n        var password=null;\n        var id = null;\n        if(type===1){\n            console.log('Manufac');\n            id=\"manuf\"+(this.state.users.manufacturers.length);\n            password=\"123\";\n            this.closeUserPanel();\n            e.preventDefault();\n            const response = await fetch('/add_manufacturer', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: comp.concat('~',address,'~',license,'~',owner,'~',cnic,'~',ownerAddress,'~',password) })\n            });\n            const body = await response.json();\n            if(body.express.status===1){\n                this.handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress, password);\n                this.setState({ responseToPost: body });\n                document.getElementById(\"addError\").style.display = 'none';\n            }else{\n                document.getElementById(\"addError\").style.display = 'block';\n            }\n        }\n        else if(type===2){\n            console.log('dist');\n            id=\"dist\"+(this.state.users.distributors.length);\n            password=\"456\";\n            this.closeUserPanel();\n            e.preventDefault();\n            const response = await fetch('/add_distributor', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: comp.concat('~',address,'~',license,'~',owner,'~',cnic,'~',ownerAddress,'~',password) })\n            });\n            const body = await response.json();\n            if(body.express.status===1){\n                this.handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress, password);\n                this.setState({ responseToPost: body });\n                document.getElementById(\"addError\").style.display = 'none';\n            }else{\n                document.getElementById(\"addError\").style.display = 'block';\n            }\n        }\n        else if(type===3){\n            console.log('chem');\n            id=\"chem\"+(this.state.users.chemists.length);\n            password=\"789\";\n            this.closeUserPanel();\n            e.preventDefault();\n            const response = await fetch('/add_chemist', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: comp.concat('~',address,'~',license,'~',owner,'~',cnic,'~',ownerAddress,'~',password) })\n            });\n            const body = await response.json();\n            if(body.express.status===1){\n                this.handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress, password);\n                this.setState({ responseToPost: body });\n                document.getElementById(\"addError\").style.display = 'none';\n            }else{\n                document.getElementById(\"addError\").style.display = 'block';\n            }\n        }\n    };\n\n    handleAddManufacturer(id, comp, address, license, owner, cnic, ownerAddress,password) {\n        var asset = {\n            'id': id,\n            'name':comp,\n            'address': address,\n            'licence': license,\n            'ownername':owner,\n            'ownercnic':cnic,\n            'owneraddress': ownerAddress,\n            'password':password\n        }\n        this.state.users.manufacturers.push(asset);\n        this.setState(this.state.users);\n    };\n\n    handleAddDistributor(id, comp, address, license, owner, cnic, ownerAddress,password) {\n        var asset = {\n            'id': id,\n            'name':comp,\n            'address': address,\n            'licence': license,\n            'ownername':owner,\n            'ownercnic':cnic,\n            'owneraddress': ownerAddress,\n            'password':password\n        }\n        this.state.users.distributors.push(asset);\n        this.setState(this.state.users);\n    };\n\n    onAddUser=()=>{\n        this.setState({ isUserPaneOpen: true });\n        this.getAllCounts()\n        .then(res => this.setState({ count: res.express }))\n        .catch(err => console.log(err));\n    }\n\n    getAllCounts = async () => {\n        const response = await fetch('/get_statics');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        console.log(body);\n        return body;\n    };\n\n    handleAddChemist(id, comp, address, license, owner, cnic, ownerAddress,password) {\n        var asset = {\n            'id': id,\n            'name':comp,\n            'address': address,\n            'licence': license,\n            'ownername':owner,\n            'ownercnic':cnic,\n            'owneraddress': ownerAddress,\n            'password':password\n        }\n        this.state.users.chemists.push(asset);\n        this.setState(this.state.users);\n    };\n\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n\n    //height='240' scrollTop={ 'Top' }\n\n    render() {\n        const manufOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.users.manufacturers.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n        const distOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.users.distributors.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n        const chemOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.users.chemists.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Super Admin Panel\"/>\n                <label id=\"addError\" style={{display:\"none\", color:\"red\"}}>Error: Couldnot add user. Serverside Error!!!</label>\n                {/* Add UuserTSer side pane */}\n                <SlidingPane closeIcon={<div style={{color:\"red\"}}>[ X ]</div>} isOpen={this.state.isUserPaneOpen} title='Add User' from='right' width='400px' onRequestClose={this.closeUserPanel}>\n                    <form onSubmit={this.handleSubmit}>\n                        <Select required className={this.state.typeValid ? \"success\" : \"error\"} placeholder=\"User Type\" options={userTypes} value={this.state.typeValue} onChange={this.handleChange}></Select>\n                        <MDBInput required id={this.state.nameValid ? \"success\" : \"error\"} label=\"Company Name\" name=\"compNameValue\" value={this.state.compNameValue} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.addressValid ? \"success\" : \"error\"} type=\"textarea\" rows=\"2\" label=\"Company Address\" name=\"addressValue\" value={this.state.addressValue} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.licenseValid ? \"success\" : \"error\"} label=\"License Number\" name=\"licenseValue\" type=\"number\" min=\"1\" value={this.state.licenseValue} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.ownerNameValid ? \"success\" : \"error\"} label=\"Owner Name\"  name=\"ownerName\" type=\"text\" value={this.state.ownerName} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.ownerCnicValid ? \"success\" : \"error\"} label=\"Owner CNIC\"  name=\"ownerCnic\" type=\"tel\" value={this.state.ownerCnic} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.ownerAddValid ? \"success\" : \"error\"} type=\"textarea\" rows=\"2\" label=\"Owner Address\" name=\"ownerAddress\" value={this.state.ownerAddress} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" disabled={!this.state.formValid} >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                {/* Add Distributor side pane */}\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Manufacturer</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Distributor</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>Chemist</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </NavItem>\n                    <NavItem>\n                        <MDBBtn size=\"sm\" color=\"primary\" onClick={this.onAddUser} >Create User</MDBBtn>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.users.manufacturers } version='4' hover condensed pagination options={ manufOptions } expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                        <TableHeaderColumn isKey dataField='id'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='address' filter={{ type: 'TextFilter', delay: 100 }}>Company Address</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.users.distributors } version='4' hover condensed pagination options={ distOptions } expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                        <TableHeaderColumn isKey dataField='id'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='address' filter={{ type: 'TextFilter', delay: 100 }}>Company Address</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                    <TabPane tabId=\"3\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.users.chemists } version='4' hover condensed pagination options={ chemOptions } expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent }>\n                                        <TableHeaderColumn isKey dataField='id'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='address' filter={{ type: 'TextFilter', delay: 100 }}>Company Address</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                </TabContent>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}