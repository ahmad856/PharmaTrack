{"ast":null,"code":"import _classCallCheck from \"/home/ahmad/Desktop/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ahmad/Desktop/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ahmad/Desktop/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ahmad/Desktop/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ahmad/Desktop/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ahmad/Desktop/final/src/pages/ManufacturerPanel.js\";\nimport React, { Component } from 'react';\nimport { MDBNav, MDBNavItem, MDBCol, MDBNavLink, MDBTabContent, MDBTabPane, MDBRow, MDBContainer, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable() {\n    _classCallCheck(this, BSTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTable).apply(this, arguments));\n  }\n\n  _createClass(BSTable, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"60rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \" Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Description:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Panadol Tablet\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Price:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"45\"))), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Timestamp:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"1234343\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Type:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Tablets\"))), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Salt:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"paracetamol\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Quantity:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"3452\"))), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Mfg Date:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Jan. 1, 2018\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Expiry Date:\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Jan. 1, 2020\")))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"18rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Details not found!!!\")));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component); // class ManufacturerPanel extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.toggle = this.toggle.bind(this);\n//         this.state={};\n//         this.state.activeTab=\"1\";\n//         this.state.isPaneOpen=false;\n//         this.state.assetTypes=['Medicines', 'Surgical Instruments'];\n//         this.state.nameValue=\"\";\n//         this.state.priceValue=\"\";\n//         this.state.typeValue=\"\";\n//         this.state.qtyValue=\"\";\n//         this.state.errors={nameVal:'',priceVal:'',typeVal:'',qtyVal:''};\n//         this.state.nameValid=false;\n//         this.state.priceValid=false;\n//         this.state.qtyValid=false;\n//         this.state.typeValid=false;\n//         this.state.formValid=false;\n//         this.state.response=\"\";\n//         this.state.responseToPost=\"\";\n//         this.state.post=\"\";\n//         this.state.test=[{\"Key\":\"4\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"5\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"6\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"7\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}},{\"Key\":\"8\", \"Record\":{\"name\":\"panadol\",\"owner\":\"Miriam\",\"timestamp\":\"1504054225\"}},{\"Key\":\"9\", \"Record\":{\"name\":\"xyzal\",\"owner\":\"Dave\",\"timestamp\":\"1504057825\"}},{\"Key\":\"10\", \"Record\":{\"name\":\"castine\",\"owner\":\"Igor\",\"timestamp\":\"1493517025\"}},{\"Key\":\"11\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"12\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"13\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"14\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}}];\n//         this.state.assets = [{\n//                                 \"Key\":\"1\",\n//                                 \"Record\":{\n//                                     \"name\":\"panadol\",\n//                                     \"owner\":\"Miriam\",\n//                                     \"timestamp\":\"1504054225\"\n//                                 },\n//                                 expand: [ {\n//           fieldA: 'test1',\n//           fieldB: 'abc',\n//           fieldC: 'def',\n//           fieldD: '123eedd'\n//         } ]\n//                             },{\n//                                 \"Key\":\"2\",\n//                                 \"Record\":{\n//                                     \"name\":\"xyzal\",\n//                                     \"owner\":\"Ahmad\",\n//                                     \"timestamp\":\"1504057825\"\n//                                 },\n//                                 expand: [ {\n//           fieldA: 'test1',\n//           fieldB: 'abc',\n//           fieldC: 'def',\n//           fieldD: '123eedd'\n//       } ]\n//                             },{\n//                                 \"Key\":\"3\",\n//                                 \"Record\":{\n//                                     \"name\":\"castine\",\"owner\":\"Igor\",\"timestamp\":\"1493517025\"\n//                                 }\n//                             },{\"Key\":\"4\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"5\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"6\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"7\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}},{\"Key\":\"8\", \"Record\":{\"name\":\"panadol\",\"owner\":\"Miriam\",\"timestamp\":\"1504054225\"}},{\"Key\":\"9\", \"Record\":{\"name\":\"xyzal\",\"owner\":\"Dave\",\"timestamp\":\"1504057825\"}},{\"Key\":\"10\", \"Record\":{\"name\":\"castine\",\"owner\":\"Igor\",\"timestamp\":\"1493517025\"}},{\"Key\":\"11\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"12\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"13\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"14\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}}];\n//         this.handleInputChange = this.handleInputChange.bind(this);\n//     }\n//\n//     handleInputChange(event) {\n//         const target = event.target;\n//         const value = target.value;\n//         const name = target.name;\n//         this.setState({\n//             [name]: value\n//         },()=>{this.validate(name,value)});\n//     };\n//\n//     isExpandableRow(row) {\n//         if (row.Key < 3) return true;\n//         else return false;\n//     }\n//\n//     expandComponent(row) {\n//         return (\n//             <BSTable data={ row.expand } />\n//         );\n//     }\n//\n//     validate(name,value){\n//         var fieldErrors=this.state.errors;\n//         var nameValid=this.state.nameValid;\n//         var priceValid=this.state.priceValid;\n//         var qtyValid=this.state.qtyValid;\n//         var typeValid=this.state.typeValid;\n//         switch(name){\n//             case 'nameValue':\n//                 nameValid = value.length > 0;\n//                 fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n//                 break;\n//             case 'priceValue':\n//                 priceValid = value.length > 0;\n//                 fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n//                 break;\n//             case 'typeValue':\n//                 typeValid = value.length > 0;\n//                 fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n//                 break;\n//             case 'qtyValue':\n//                 qtyValid = value.length > 0;\n//                 fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n//                 break;\n//         }\n//\n//         this.setState({\n//             errors: fieldErrors,\n//             nameValid: nameValid,\n//             priceValid: priceValid,\n//             typeValid: typeValid,\n//             qtyValid: qtyValid,\n//             }, this.validateF);\n//     }\n//\n//     validateF() {\n//         this.setState({formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid});\n//     }\n//\n//     assetNameValidator(value, row) {\n//         const response = { isValid: true, notification: { type: 'success', msg: '', title: '' } };\n//         if (!value) {\n//             response.isValid = false;\n//             response.notification.type = 'error';\n//             response.notification.msg = 'Value must be inserted';\n//             response.notification.title = 'Requested Value';\n//         } else if (value.length < 4) {\n//             response.isValid = false;\n//             response.notification.type = 'error';\n//             response.notification.msg = 'Value must have 4+ characters';\n//             response.notification.title = 'Invalid Value';\n//         }\n//         return response;\n//     }\n//\n//     assetStatusValidator(value, row) {\n//         const nan = isNaN(parseInt(value, 10));\n//         if (nan) {\n//             return 'Asset Status must be a integer!';\n//         }\n//         return true;\n//     }\n//\n//     closePanel = () => {\n//         this.setState({ isPaneOpen: false,\n//             nameValue:'',\n//             priceValue:'',\n//             typeValue:'',\n//             qtyValue:'',\n//             errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n//             nameValid:false,\n//             priceValid:false,\n//             qtyValid:false,\n//             typeValid:false,\n//             formValid:false\n//         });\n//     };\n//\n//     handleAddAsset(name,price,type,quantity) {\n//         var asset = {\n//             Key: name,\n//             Record:{\n//                 name: price,\n//                 owner: type,\n//                 timestamp: quantity\n//             }\n//         }\n//         this.state.assets.push(asset);\n//         this.setState(this.state.assets);\n//     };\n//\n//     flattenData=()=>{\n//         var assets = this.state.test.slice();\n//         var newAssets = assets.map(function(row) {\n//             return {\n//                 Key:row.Key,\n//                 name: row.Record.name,\n//                 owner: row.Record.owner,\n//                 price: row.Record.timestamp\n//             };\n//         });\n//         this.setState({test:newAssets});\n//         console.log(newAssets);\n//     }\n//\n//     handleSubmit = async e => {\n//         this.handleAddAsset(this.state.nameValue,this.state.priceValue,this.state.typeValue,this.state.qtyValue);\n//         e.preventDefault();\n//         const response = await fetch('/api/world', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//\n//             body: JSON.stringify({ post: this.state.nameValue.concat('-',this.state.priceValue,'-',this.state.typeValue,'-',this.state.qtyValue) }),\n//\n//         });\n//         this.closePanel();\n//         console.log(\"Assets\");\n//         console.log(this.state.assets);\n//         console.log(response.text())\n//         const body = await response.text();\n//\n//         this.setState({ responseToPost: body });\n//     };\n//\n//     // componentDidMount() {\n//     //     this.callApi()\n//     //     .then(res => this.setState({ assets: res.express }))\n//     //     .catch(err => console.log(err));\n//     //     console.log(\"Assets\");\n//     //     console.log(this.state.assets);\n//     // }\n//\n//     callApi = async () => {\n//         const response = await fetch('/api/hello');\n//         const body = await response.json();\n//         if (response.status !== 200) throw Error(body.message);\n//         console.log(body);\n//         return body;\n//     };\n//\n//     toggle(tab) {\n//         if (this.state.activeTab !== tab) {\n//             this.setState({\n//                 activeTab: tab\n//             });\n//         }\n//     }\n//\n//     filterName (cell,row){\n//         return cell.name;\n//     }\n//\n//     filterOwner (cell,row){\n//         return cell.owner;\n//     }\n//\n//     showName (cell){\n//         return cell.name;\n//     }\n//\n//     showOwner(cell){\n//         return cell.owner;\n//     }\n//     showTimeStamp(cell){\n//         return cell.timestamp;\n//     }\n//\n//     openAlert(){\n//         alert(\"oka\");\n//     }\n//     //  multiColumnSearch={true}\n//     // <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n//     // <TableHeaderColumn dataField='Record' dataFormat={this.showTimeStamp}>Time Stamp</TableHeaderColumn>\n//     render() {\n//         const options = {\n//            onlyOneExpanding: true,\n//          //  expandRowBgColor: 'rgb(66, 134, 244)'\n//          expandRowBgColor: 'white'\n//       }\n//\n//         return (\n//             <MDBContainer>\n//                 <PanelHeading title=\"Manufacturer Panel\"/>\n//\n//                 <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n//                     <Row>\n//                         <Col sm={2}>\n//                             <Nav tabs pills className=\"flex-column\">\n//                                 <NavItem>\n//                                     <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>\n//                                         Asset\n//                                     </NavLink>\n//                                 </NavItem>\n//                                 <NavItem>\n//                                     <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>\n//                                         Distributor\n//                                     </NavLink>\n//                                 </NavItem>\n//                                 <NavItem>\n//                                     <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>\n//                                         Transaction\n//                                     </NavLink>\n//                                 </NavItem>\n//                             </Nav>\n//                         </Col>\n//                         <Col sm={10}>\n//                             <TabContent activeTab={this.state.activeTab}>\n//                                 <TabPane tabId=\"1\">\n//                                     <Row>\n//                                         <Col sm={12}>\n//                                             <MDBBtn size=\"sm\" color=\"primary\" onClick={this.flattenData} >Add Asset</MDBBtn>\n//                                             <BootstrapTable data={ this.state.assets } version='4' striped hover condensed pagination search={true}\n//                                             expandableRow={ this.isExpandableRow }\n//                                             expandComponent={ this.expandComponent }\n//                                             options={ options }>\n//                                                 <TableHeaderColumn isKey dataField='Key'>Asset ID</TableHeaderColumn>\n//                                                 <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n//                                                 <TableHeaderColumn dataField='Record' filterValue={ this.filterName } dataFormat={this.showName}>Asset Name</TableHeaderColumn>\n//                                             </BootstrapTable>\n//\n//                                         </Col>\n//                                     </Row>\n//                                 </TabPane>\n//                                 <TabPane tabId=\"2\">\n//                                     <Row>\n//                                         <Col sm={12}>\n//                                             <h4>Tab 2 Contents</h4>\n//                                         </Col>\n//                                     </Row>\n//                                 </TabPane>\n//                                 <TabPane tabId=\"3\">\n//                                     <Row>\n//                                         <Col sm={12}>\n//                                             <h4>Tab 3 Contents</h4>\n//                                         </Col>\n//                                     </Row>\n//                                 </TabPane>\n//                             </TabContent>\n//                         </Col>\n//                     </Row>\n//                 </Tab.Container>\n//             </MDBContainer>\n//         );\n//     }\n// }\n\n\nvar ManufacturerPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManufacturerPanel, _Component);\n\n  function ManufacturerPanel(props) {\n    var _this;\n\n    _classCallCheck(this, ManufacturerPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManufacturerPanel).call(this, props));\n\n    _this.toggle = function (tab) {\n      return function () {\n        if (_this.state.activeItem !== tab) {\n          _this.setState({\n            activeItem: tab\n          });\n        }\n      };\n    };\n\n    _this.state = {\n      activeItem: \"1\"\n    };\n    return _this;\n  }\n\n  _createClass(ManufacturerPanel, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MDBContainer, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Basic\"), React.createElement(MDBNav, {\n        tabs: true,\n        className: \"nav-justified\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"#\",\n        className: this.state.activeItem === \"1\" ? \"active\" : \"\",\n        onClick: this.toggle(\"1\"),\n        role: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Asset\")), React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"#\",\n        className: this.state.activeItem === \"2\" ? \"active\" : \"\",\n        onClick: this.toggle(\"2\"),\n        role: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"Manufacturer\")), React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"#\",\n        className: this.state.activeItem === \"3\" ? \"active\" : \"\",\n        onClick: this.toggle(\"3\"),\n        role: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"Transaction\"))), React.createElement(MDBTabContent, {\n        className: \"card\",\n        activeItem: this.state.activeItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(MDBTabPane, {\n        tabId: \"1\",\n        role: \"tabpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.flattenData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Add Asset\"), React.createElement(BootstrapTable, {\n        data: this.state.assets,\n        version: \"4\",\n        striped: true,\n        hover: true,\n        condensed: true,\n        pagination: true,\n        search: true,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"Key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Asset ID\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Record\",\n        dataFormat: this.showOwner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Asset Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Record\",\n        filterValue: this.filterName,\n        dataFormat: this.showName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"Asset Name\"))))), React.createElement(MDBTabPane, {\n        tabId: \"2\",\n        role: \"tabpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Tab 2 Contents\")))), React.createElement(MDBTabPane, {\n        tabId: \"3\",\n        role: \"tabpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"Tab 2 Contents\"))))))));\n    }\n  }]);\n\n  return ManufacturerPanel;\n}(Component); // <MDBContainer>\n//     <MDBNav tabs className=\"nav-justified\" color=\"indigo\">\n//         <MDBNavItem>\n//             <MDBNavLink to=\"#\" className={this.state.activeItemOuterTabs===\"1\" ? \"active\" : \"\" } onClick={this.toggleOuterTabs(\"1\")} role=\"tab\">Asset</MDBNavLink>\n//         </MDBNavItem>\n//         <MDBNavItem>\n//             <MDBNavLink to=\"#\" className={this.state.activeItemOuterTabs===\"2\" ? \"active\" : \"\" } onClick={this.toggleOuterTabs(\"2\")} role=\"tab\">Manufacturer</MDBNavLink>\n//         </MDBNavItem>\n//         <MDBNavItem>\n//             <MDBNavLink to=\"#\" className={this.state.activeItemOuterTabs===\"3\" ? \"active\" : \"\" } onClick={this.toggleOuterTabs(\"3\")} role=\"tab\">Transaction</MDBNavLink>\n//         </MDBNavItem>\n//     </MDBNav>\n//     <MDBTabContent className=\"card\" activeItem={this.state.activeItemOuterTabs}>\n//         <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n//             <MDBRow>\n//                 <Col sm={12}>\n//                     <MDBBtn size=\"sm\" color=\"primary\" onClick={this.flattenData} >Add Asset</MDBBtn>\n//                     <BootstrapTable data={ this.state.assets } version='4' striped hover condensed pagination search={true}\n//                         expandableRow={ this.isExpandableRow }\n//                         expandComponent={ this.expandComponent }>\n//                             <TableHeaderColumn isKey dataField='Key'>Asset ID</TableHeaderColumn>\n//                             <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n//                             <TableHeaderColumn dataField='Record' filterValue={ this.filterName } dataFormat={this.showName}>Asset Name</TableHeaderColumn>\n//                     </BootstrapTable>\n//                 </Col>\n//             </MDBRow>\n//         </MDBTabPane>\n//         <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n//             <MDBRow>\n//                 <Col sm={12}>\n//                     <h4>Tab 2 Contents</h4>\n//                 </Col>\n//             </MDBRow>\n//         </MDBTabPane>\n//         <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n//         <MDBRow>\n//             <Col sm={12}>\n//                 <h4>Tab 3 Contents</h4>\n//             </Col>\n//         </MDBRow>\n//         </MDBTabPane>\n//     </MDBTabContent>\n// </MDBContainer>\n\n\nexport default ManufacturerPanel;","map":{"version":3,"sources":["/home/ahmad/Desktop/final/src/pages/ManufacturerPanel.js"],"names":["React","Component","MDBNav","MDBNavItem","MDBCol","MDBNavLink","MDBTabContent","MDBTabPane","MDBRow","MDBContainer","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","BootstrapTable","TableHeaderColumn","TabContent","TabPane","Nav","NavItem","NavLink","classnames","PanelHeading","BSTable","props","data","maxWidth","ManufacturerPanel","toggle","tab","state","activeItem","setState","flattenData","assets","isExpandableRow","expandComponent","showOwner","filterName","showName"],"mappings":"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M,EAAC,MAAhB;AAAuB,UAAA,SAAS,EAAC,KAAjC;AAAuC,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAFJ,CADJ;AAUH;AACJ;;;;EA3CiB3B,KAAK,CAACC,S,GA8C5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAGM2B,iB;;;;;AACF,6BAAYH,KAAZ,EAAkB;AAAA;;AAAA;;AACd,2FAAMA,KAAN;;AADc,UAOlBI,MAPkB,GAOT,UAAAC,GAAG;AAAA,aAAI,YAAM;AAClB,YAAI,MAAKC,KAAL,CAAWC,UAAX,KAA0BF,GAA9B,EAAmC;AAC/B,gBAAKG,QAAL,CAAc;AACVD,YAAAA,UAAU,EAAEF;AADF,WAAd;AAGH;AACJ,OANW;AAAA,KAPM;;AAEd,UAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAE;AADL,KAAX;AAFc;AAKjB;;;;6BAUQ;AACL,aACI,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBNav, MDBNavItem, MDBCol, MDBNavLink, MDBTabContent, MDBTabPane, MDBRow, MDBContainer, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\n\nclass BSTable extends React.Component {\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"60rem\" }}>\n                    <MDBCardHeader> Asset Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <MDBCardText>\n                            <table>\n                                <tr>\n                                    <td><label>Description:</label></td><td><label>Panadol Tablet</label></td>\n                                    <td><label>Price:</label></td><td><label>45</label></td>\n                                </tr>\n                                <tr>\n                                    <td><label>Timestamp:</label></td><td><label>1234343</label></td>\n                                    <td><label>Type:</label></td><td><label>Tablets</label></td>\n                                </tr>\n                                <tr>\n                                    <td><label>Salt:</label></td><td><label>paracetamol</label></td>\n                                    <td><label>Quantity:</label></td><td><label>3452</label></td>\n                                </tr>\n                                <tr>\n                                   <td><label>Mfg Date:</label></td><td><label>Jan. 1, 2018</label></td>\n                                   <td><label>Expiry Date:</label></td><td><label>Jan. 1, 2020</label></td>\n\n                                </tr>\n                            </table>\n                        </MDBCardText>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"18rem\" }}>\n                    <MDBCardHeader>Asset Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <MDBCardText>\n                            Details not found!!!\n                        </MDBCardText>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\n// class ManufacturerPanel extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.toggle = this.toggle.bind(this);\n//         this.state={};\n//         this.state.activeTab=\"1\";\n//         this.state.isPaneOpen=false;\n//         this.state.assetTypes=['Medicines', 'Surgical Instruments'];\n//         this.state.nameValue=\"\";\n//         this.state.priceValue=\"\";\n//         this.state.typeValue=\"\";\n//         this.state.qtyValue=\"\";\n//         this.state.errors={nameVal:'',priceVal:'',typeVal:'',qtyVal:''};\n//         this.state.nameValid=false;\n//         this.state.priceValid=false;\n//         this.state.qtyValid=false;\n//         this.state.typeValid=false;\n//         this.state.formValid=false;\n//         this.state.response=\"\";\n//         this.state.responseToPost=\"\";\n//         this.state.post=\"\";\n//         this.state.test=[{\"Key\":\"4\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"5\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"6\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"7\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}},{\"Key\":\"8\", \"Record\":{\"name\":\"panadol\",\"owner\":\"Miriam\",\"timestamp\":\"1504054225\"}},{\"Key\":\"9\", \"Record\":{\"name\":\"xyzal\",\"owner\":\"Dave\",\"timestamp\":\"1504057825\"}},{\"Key\":\"10\", \"Record\":{\"name\":\"castine\",\"owner\":\"Igor\",\"timestamp\":\"1493517025\"}},{\"Key\":\"11\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"12\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"13\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"14\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}}];\n//         this.state.assets = [{\n//                                 \"Key\":\"1\",\n//                                 \"Record\":{\n//                                     \"name\":\"panadol\",\n//                                     \"owner\":\"Miriam\",\n//                                     \"timestamp\":\"1504054225\"\n//                                 },\n//                                 expand: [ {\n//           fieldA: 'test1',\n//           fieldB: 'abc',\n//           fieldC: 'def',\n//           fieldD: '123eedd'\n//         } ]\n//                             },{\n//                                 \"Key\":\"2\",\n//                                 \"Record\":{\n//                                     \"name\":\"xyzal\",\n//                                     \"owner\":\"Ahmad\",\n//                                     \"timestamp\":\"1504057825\"\n//                                 },\n//                                 expand: [ {\n//           fieldA: 'test1',\n//           fieldB: 'abc',\n//           fieldC: 'def',\n//           fieldD: '123eedd'\n//       } ]\n//                             },{\n//                                 \"Key\":\"3\",\n//                                 \"Record\":{\n//                                     \"name\":\"castine\",\"owner\":\"Igor\",\"timestamp\":\"1493517025\"\n//                                 }\n//                             },{\"Key\":\"4\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"5\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"6\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"7\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}},{\"Key\":\"8\", \"Record\":{\"name\":\"panadol\",\"owner\":\"Miriam\",\"timestamp\":\"1504054225\"}},{\"Key\":\"9\", \"Record\":{\"name\":\"xyzal\",\"owner\":\"Dave\",\"timestamp\":\"1504057825\"}},{\"Key\":\"10\", \"Record\":{\"name\":\"castine\",\"owner\":\"Igor\",\"timestamp\":\"1493517025\"}},{\"Key\":\"11\", \"Record\":{\"name\":\"panadol extra\",\"owner\":\"Amalea\",\"timestamp\":\"1496105425\"}},{\"Key\":\"12\", \"Record\":{\"name\":\"calpol\",\"owner\":\"Rafa\",\"timestamp\":\"1493512301\"}},{\"Key\":\"13\", \"Record\":{\"name\":\"brufen\",\"owner\":\"Shen\",\"timestamp\":\"1494117101\"}},{\"Key\":\"14\", \"Record\":{\"name\":\"paracetamol\",\"owner\":\"Leila\",\"timestamp\":\"1496104301\"}}];\n//         this.handleInputChange = this.handleInputChange.bind(this);\n//     }\n//\n//     handleInputChange(event) {\n//         const target = event.target;\n//         const value = target.value;\n//         const name = target.name;\n//         this.setState({\n//             [name]: value\n//         },()=>{this.validate(name,value)});\n//     };\n//\n//     isExpandableRow(row) {\n//         if (row.Key < 3) return true;\n//         else return false;\n//     }\n//\n//     expandComponent(row) {\n//         return (\n//             <BSTable data={ row.expand } />\n//         );\n//     }\n//\n//     validate(name,value){\n//         var fieldErrors=this.state.errors;\n//         var nameValid=this.state.nameValid;\n//         var priceValid=this.state.priceValid;\n//         var qtyValid=this.state.qtyValid;\n//         var typeValid=this.state.typeValid;\n//         switch(name){\n//             case 'nameValue':\n//                 nameValid = value.length > 0;\n//                 fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n//                 break;\n//             case 'priceValue':\n//                 priceValid = value.length > 0;\n//                 fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n//                 break;\n//             case 'typeValue':\n//                 typeValid = value.length > 0;\n//                 fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n//                 break;\n//             case 'qtyValue':\n//                 qtyValid = value.length > 0;\n//                 fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n//                 break;\n//         }\n//\n//         this.setState({\n//             errors: fieldErrors,\n//             nameValid: nameValid,\n//             priceValid: priceValid,\n//             typeValid: typeValid,\n//             qtyValid: qtyValid,\n//             }, this.validateF);\n//     }\n//\n//     validateF() {\n//         this.setState({formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid});\n//     }\n//\n//     assetNameValidator(value, row) {\n//         const response = { isValid: true, notification: { type: 'success', msg: '', title: '' } };\n//         if (!value) {\n//             response.isValid = false;\n//             response.notification.type = 'error';\n//             response.notification.msg = 'Value must be inserted';\n//             response.notification.title = 'Requested Value';\n//         } else if (value.length < 4) {\n//             response.isValid = false;\n//             response.notification.type = 'error';\n//             response.notification.msg = 'Value must have 4+ characters';\n//             response.notification.title = 'Invalid Value';\n//         }\n//         return response;\n//     }\n//\n//     assetStatusValidator(value, row) {\n//         const nan = isNaN(parseInt(value, 10));\n//         if (nan) {\n//             return 'Asset Status must be a integer!';\n//         }\n//         return true;\n//     }\n//\n//     closePanel = () => {\n//         this.setState({ isPaneOpen: false,\n//             nameValue:'',\n//             priceValue:'',\n//             typeValue:'',\n//             qtyValue:'',\n//             errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n//             nameValid:false,\n//             priceValid:false,\n//             qtyValid:false,\n//             typeValid:false,\n//             formValid:false\n//         });\n//     };\n//\n//     handleAddAsset(name,price,type,quantity) {\n//         var asset = {\n//             Key: name,\n//             Record:{\n//                 name: price,\n//                 owner: type,\n//                 timestamp: quantity\n//             }\n//         }\n//         this.state.assets.push(asset);\n//         this.setState(this.state.assets);\n//     };\n//\n//     flattenData=()=>{\n//         var assets = this.state.test.slice();\n//         var newAssets = assets.map(function(row) {\n//             return {\n//                 Key:row.Key,\n//                 name: row.Record.name,\n//                 owner: row.Record.owner,\n//                 price: row.Record.timestamp\n//             };\n//         });\n//         this.setState({test:newAssets});\n//         console.log(newAssets);\n//     }\n//\n//     handleSubmit = async e => {\n//         this.handleAddAsset(this.state.nameValue,this.state.priceValue,this.state.typeValue,this.state.qtyValue);\n//         e.preventDefault();\n//         const response = await fetch('/api/world', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//\n//             body: JSON.stringify({ post: this.state.nameValue.concat('-',this.state.priceValue,'-',this.state.typeValue,'-',this.state.qtyValue) }),\n//\n//         });\n//         this.closePanel();\n//         console.log(\"Assets\");\n//         console.log(this.state.assets);\n//         console.log(response.text())\n//         const body = await response.text();\n//\n//         this.setState({ responseToPost: body });\n//     };\n//\n//     // componentDidMount() {\n//     //     this.callApi()\n//     //     .then(res => this.setState({ assets: res.express }))\n//     //     .catch(err => console.log(err));\n//     //     console.log(\"Assets\");\n//     //     console.log(this.state.assets);\n//     // }\n//\n//     callApi = async () => {\n//         const response = await fetch('/api/hello');\n//         const body = await response.json();\n//         if (response.status !== 200) throw Error(body.message);\n//         console.log(body);\n//         return body;\n//     };\n//\n//     toggle(tab) {\n//         if (this.state.activeTab !== tab) {\n//             this.setState({\n//                 activeTab: tab\n//             });\n//         }\n//     }\n//\n//     filterName (cell,row){\n//         return cell.name;\n//     }\n//\n//     filterOwner (cell,row){\n//         return cell.owner;\n//     }\n//\n//     showName (cell){\n//         return cell.name;\n//     }\n//\n//     showOwner(cell){\n//         return cell.owner;\n//     }\n//     showTimeStamp(cell){\n//         return cell.timestamp;\n//     }\n//\n//     openAlert(){\n//         alert(\"oka\");\n//     }\n//     //  multiColumnSearch={true}\n//     // <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n//     // <TableHeaderColumn dataField='Record' dataFormat={this.showTimeStamp}>Time Stamp</TableHeaderColumn>\n//     render() {\n//         const options = {\n//            onlyOneExpanding: true,\n//          //  expandRowBgColor: 'rgb(66, 134, 244)'\n//          expandRowBgColor: 'white'\n//       }\n//\n//         return (\n//             <MDBContainer>\n//                 <PanelHeading title=\"Manufacturer Panel\"/>\n//\n//                 <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n//                     <Row>\n//                         <Col sm={2}>\n//                             <Nav tabs pills className=\"flex-column\">\n//                                 <NavItem>\n//                                     <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>\n//                                         Asset\n//                                     </NavLink>\n//                                 </NavItem>\n//                                 <NavItem>\n//                                     <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>\n//                                         Distributor\n//                                     </NavLink>\n//                                 </NavItem>\n//                                 <NavItem>\n//                                     <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>\n//                                         Transaction\n//                                     </NavLink>\n//                                 </NavItem>\n//                             </Nav>\n//                         </Col>\n//                         <Col sm={10}>\n//                             <TabContent activeTab={this.state.activeTab}>\n//                                 <TabPane tabId=\"1\">\n//                                     <Row>\n//                                         <Col sm={12}>\n//                                             <MDBBtn size=\"sm\" color=\"primary\" onClick={this.flattenData} >Add Asset</MDBBtn>\n//                                             <BootstrapTable data={ this.state.assets } version='4' striped hover condensed pagination search={true}\n//                                             expandableRow={ this.isExpandableRow }\n//                                             expandComponent={ this.expandComponent }\n//                                             options={ options }>\n//                                                 <TableHeaderColumn isKey dataField='Key'>Asset ID</TableHeaderColumn>\n//                                                 <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n//                                                 <TableHeaderColumn dataField='Record' filterValue={ this.filterName } dataFormat={this.showName}>Asset Name</TableHeaderColumn>\n//                                             </BootstrapTable>\n//\n//                                         </Col>\n//                                     </Row>\n//                                 </TabPane>\n//                                 <TabPane tabId=\"2\">\n//                                     <Row>\n//                                         <Col sm={12}>\n//                                             <h4>Tab 2 Contents</h4>\n//                                         </Col>\n//                                     </Row>\n//                                 </TabPane>\n//                                 <TabPane tabId=\"3\">\n//                                     <Row>\n//                                         <Col sm={12}>\n//                                             <h4>Tab 3 Contents</h4>\n//                                         </Col>\n//                                     </Row>\n//                                 </TabPane>\n//                             </TabContent>\n//                         </Col>\n//                     </Row>\n//                 </Tab.Container>\n//             </MDBContainer>\n//         );\n//     }\n// }\n\n\nclass ManufacturerPanel extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            activeItem: \"1\"\n        }\n    }\n\n    toggle = tab => () => {\n        if (this.state.activeItem !== tab) {\n            this.setState({\n                activeItem: tab\n            });\n        }\n    }\n\n    render() {\n        return (\n            <MDBContainer className=\"mt-4\">\n                <MDBRow>\n                    <MDBCol md=\"12\">\n                        <h2>Basic</h2>\n                        <MDBNav tabs className=\"nav-justified\">\n                            <MDBNavItem>\n                                <MDBNavLink to=\"#\" className={this.state.activeItem===\"1\" ? \"active\" : \"\" } onClick={this.toggle(\"1\")} role=\"tab\">Asset</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink to=\"#\" className={this.state.activeItem===\"2\" ? \"active\" : \"\" } onClick={this.toggle(\"2\")} role=\"tab\">Manufacturer</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink to=\"#\" className={this.state.activeItem===\"3\" ? \"active\" : \"\" } onClick={this.toggle(\"3\")} role=\"tab\">Transaction</MDBNavLink>\n                            </MDBNavItem>\n                        </MDBNav>\n                        <MDBTabContent className=\"card\" activeItem={this.state.activeItem}>\n                            <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                                <MDBRow>\n                                    <Col sm={12}>\n                                        <MDBBtn size=\"sm\" color=\"primary\" onClick={this.flattenData} >Add Asset</MDBBtn>\n                                        <BootstrapTable data={ this.state.assets } version='4' striped hover condensed pagination search={true}\n                                            expandableRow={ this.isExpandableRow }\n                                            expandComponent={ this.expandComponent }>\n                                                <TableHeaderColumn isKey dataField='Key'>Asset ID</TableHeaderColumn>\n                                                <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n                                                <TableHeaderColumn dataField='Record' filterValue={ this.filterName } dataFormat={this.showName}>Asset Name</TableHeaderColumn>\n                                        </BootstrapTable>\n                                    </Col>\n                                </MDBRow>\n                            </MDBTabPane>\n                            <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                                <MDBRow>\n                                    <MDBCol sm={12}>\n                                        <h4>Tab 2 Contents</h4>\n                                    </MDBCol>\n                                </MDBRow>\n                            </MDBTabPane>\n                            <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                                <MDBRow>\n                                    <MDBCol sm={12}>\n                                        <h4>Tab 2 Contents</h4>\n                                    </MDBCol>\n                                </MDBRow>\n                            </MDBTabPane>\n                        </MDBTabContent>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\n// <MDBContainer>\n//     <MDBNav tabs className=\"nav-justified\" color=\"indigo\">\n//         <MDBNavItem>\n//             <MDBNavLink to=\"#\" className={this.state.activeItemOuterTabs===\"1\" ? \"active\" : \"\" } onClick={this.toggleOuterTabs(\"1\")} role=\"tab\">Asset</MDBNavLink>\n//         </MDBNavItem>\n//         <MDBNavItem>\n//             <MDBNavLink to=\"#\" className={this.state.activeItemOuterTabs===\"2\" ? \"active\" : \"\" } onClick={this.toggleOuterTabs(\"2\")} role=\"tab\">Manufacturer</MDBNavLink>\n//         </MDBNavItem>\n//         <MDBNavItem>\n//             <MDBNavLink to=\"#\" className={this.state.activeItemOuterTabs===\"3\" ? \"active\" : \"\" } onClick={this.toggleOuterTabs(\"3\")} role=\"tab\">Transaction</MDBNavLink>\n//         </MDBNavItem>\n//     </MDBNav>\n//     <MDBTabContent className=\"card\" activeItem={this.state.activeItemOuterTabs}>\n//         <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n//             <MDBRow>\n//                 <Col sm={12}>\n//                     <MDBBtn size=\"sm\" color=\"primary\" onClick={this.flattenData} >Add Asset</MDBBtn>\n//                     <BootstrapTable data={ this.state.assets } version='4' striped hover condensed pagination search={true}\n//                         expandableRow={ this.isExpandableRow }\n//                         expandComponent={ this.expandComponent }>\n//                             <TableHeaderColumn isKey dataField='Key'>Asset ID</TableHeaderColumn>\n//                             <TableHeaderColumn dataField='Record' dataFormat={this.showOwner}>Asset Owner</TableHeaderColumn>\n//                             <TableHeaderColumn dataField='Record' filterValue={ this.filterName } dataFormat={this.showName}>Asset Name</TableHeaderColumn>\n//                     </BootstrapTable>\n//                 </Col>\n//             </MDBRow>\n//         </MDBTabPane>\n//         <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n//             <MDBRow>\n//                 <Col sm={12}>\n//                     <h4>Tab 2 Contents</h4>\n//                 </Col>\n//             </MDBRow>\n//         </MDBTabPane>\n//         <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n//         <MDBRow>\n//             <Col sm={12}>\n//                 <h4>Tab 3 Contents</h4>\n//             </Col>\n//         </MDBRow>\n//         </MDBTabPane>\n//     </MDBTabContent>\n// </MDBContainer>\n\nexport default ManufacturerPanel;\n"]},"metadata":{},"sourceType":"module"}