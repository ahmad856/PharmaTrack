{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/ManufacturerPanel.js\";\nimport React, { Component } from 'react';\nimport { MDBIcon, MDBInputSelect, MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css'; //import update from 'react-addons-update';\n\nimport Select from 'react-select';\nimport QrReader from \"react-qr-scanner\";\nimport QRCode from 'qrcode.react';\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BSTable, _Component);\n\n  function BSTable(props) {\n    var _this;\n\n    _classCallCheck(this, BSTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BSTable).call(this, props));\n\n    _this.closeTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: false\n      });\n    };\n\n    _this.openTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: true\n      });\n\n      _this.getAllTransactions().then(function (res) {\n        return _this.setState({\n          transactions: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllTransactions =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _this.props.data.id;\n              _context.next = 3;\n              return fetch('/get_asset_history/' + id);\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {};\n    _this.state.isTransactionPaneOpen = false;\n    _this.state.responseToPost = \"\";\n    _this.state.transactions = [];\n    return _this;\n  }\n\n  _createClass(BSTable, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(SlidingPane, {\n          isOpen: this.state.isTransactionPaneOpen,\n          title: \"Transactions History\",\n          closeIcon: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"[ X ]\"),\n          from: \"left\",\n          width: \"400px\",\n          onRequestClose: this.closeTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, this.state.transactions.map(function (transaction) {\n          return React.createElement(MDBCard, {\n            border: \"info\",\n            className: \"m-3\",\n            style: {\n              width: \"20rem\"\n            },\n            key: transaction.txid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(MDBCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \" Transaction Details\"), React.createElement(MDBCardBody, {\n            className: \"text-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(MDBRow, {\n            className: \"justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(MDBListGroup, {\n            className: \"my-4 mx-4\",\n            style: {\n              width: \"18rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \"ID: \", transaction.txid), React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Asset ID: \", transaction.asset.id), React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Asset Owner: \", transaction.asset.owner)))));\n        })), React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \" Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"ID: \", this.props.data.id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"QRCode: \", this.props.data.qr), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Description: \", this.props.data.description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Type: \", this.props.data.type)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Mfg Date: \", this.props.data.manufactureDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"ExpiryDate: \", this.props.data.expiryDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Timestamp: \", this.props.data.timestamp), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Price: \", this.props.data.price))), React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          onClick: this.openTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Show Details\")))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(Component);\n\nvar BSTableDist =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(BSTableDist, _Component2);\n\n  function BSTableDist() {\n    _classCallCheck(this, BSTableDist);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTableDist).apply(this, arguments));\n  }\n\n  _createClass(BSTableDist, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \" User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"ID: \", this.props.data.id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Company Address: \", this.props.data.address)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Owner Name: \", this.props.data.ownername), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"License Number: \", this.props.data.license))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTableDist;\n}(Component); ///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\n\nvar assetTypes = [{\n  label: \"Medicine\",\n  value: 1\n}, {\n  label: \"Surgical Instrument\",\n  value: 2\n}, {\n  label: \"Hospital Equipment\",\n  value: 3\n}, {\n  label: \"Saftey Equipment\",\n  value: 4\n}];\nvar assetNames = [{\n  label: \"Panadol\",\n  value: 1\n}, {\n  label: \"Xyzal\",\n  value: 2\n}, {\n  label: \"Castine\",\n  value: 3\n}, {\n  label: \"Panadol Extra\",\n  value: 4\n}, {\n  label: \"Calpol\",\n  value: 5\n}, {\n  label: \"Brufen\",\n  value: 6\n}, {\n  label: \"Paracetamol\",\n  value: 7\n}, {\n  label: \"Castine\",\n  value: 8\n}, {\n  label: \"Forceps\",\n  value: 9\n}, {\n  label: \"Scissors\",\n  value: 10\n}, {\n  label: \"Speculums\",\n  value: 11\n}, {\n  label: \"Spatulas\",\n  value: 12\n}, {\n  label: \"Needle Holders\",\n  value: 13\n}, {\n  label: \"Nebulizers\",\n  value: 14\n}, {\n  label: \"Syringe\",\n  value: 15\n}, {\n  label: \"Catheter\",\n  value: 16\n}, {\n  label: \"Medical Gloves\",\n  value: 17\n}, {\n  label: \"Obstetrical Forceps\",\n  value: 18\n}, {\n  label: \"Surgical Mask\",\n  value: 19\n}, {\n  label: \"Gowns\",\n  value: 20\n}, {\n  label: \"Head Covering\",\n  value: 21\n}, {\n  label: \"Shoe Covering\",\n  value: 22\n}];\n\nvar ManufacturerPanel =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(ManufacturerPanel, _Component3);\n\n  function ManufacturerPanel(props) {\n    var _this2;\n\n    _classCallCheck(this, ManufacturerPanel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ManufacturerPanel).call(this, props));\n\n    _this2.handleScan = function (data) {\n      console.log(data);\n      var found = false;\n\n      if (data) {\n        for (var i = 0; i < _this2.state.user.assets.length; i++) {\n          if (data == _this2.state.user.assets[i].id) {\n            for (var k = 0; k < _this2.state.QrResultArray.length; k++) {\n              if (data == _this2.state.QrResultArray[k].id) {\n                document.getElementById(\"itemAlreadyExist\").style.display = 'block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                return;\n              }\n            }\n\n            found = true;\n            document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n\n            _this2.setState({\n              QrResult: data\n            });\n\n            var temp = JSON.parse(JSON.stringify(_this2.state.user.assets[i]));\n            temp.index = _this2.state.QrResultArray.length + 1;\n\n            _this2.state.QrResultArray.push(temp);\n\n            _this2.setState(_this2.state.QrResultArray);\n\n            document.getElementById(\"itemNotFound\").style.display = 'none';\n\n            _this2.setState({\n              totalPrice: _this2.state.totalPrice + temp.price\n            });\n\n            return;\n          }\n        }\n\n        if (found == false) {\n          document.getElementById(\"itemNotFound\").style.display = 'block';\n          document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n        }\n      }\n    };\n\n    _this2.tranactionSubmitAll =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var distId, i, assetId, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                distId = _this2.state.distId2.value;\n                console.log(distId);\n                i = 0;\n\n              case 3:\n                if (!(i < _this2.state.QrResultArray.length)) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                assetId = _this2.state.QrResultArray[i].id;\n                e.preventDefault();\n                _context2.next = 8;\n                return fetch('/change_owner', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: assetId.concat('~', distId)\n                  })\n                });\n\n              case 8:\n                response = _context2.sent;\n                _context2.next = 11;\n                return response.json();\n\n              case 11:\n                body = _context2.sent;\n\n                if (!(body.express.status === -1)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                document.getElementById(\"transactionSuccess\").style.display = 'block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n                return _context2.abrupt(\"break\", 26);\n\n              case 19:\n                _this2.setState({\n                  responseToPost2: body\n                });\n\n                document.getElementById(\"transactionFailure\").style.display = 'block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n\n              case 23:\n                i++;\n                _context2.next = 3;\n                break;\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this2.handleError = function (err) {\n      console.error(err);\n    };\n\n    _this2.handleChange = function (selectedOption) {\n      _this2.setState({\n        nameValue: selectedOption,\n        nameValid: true\n      });\n    };\n\n    _this2.handleDistChange = function (selectedOption) {\n      console.log(\"handleDistChange\");\n      console.log(selectedOption);\n\n      _this2.setState({\n        distId2: selectedOption,\n        distId2Valid: true\n      });\n    };\n\n    _this2.handleAllDistChange = function (selectedOption) {\n      _this2.setState({\n        distId: selectedOption,\n        distIdValid: true\n      });\n    };\n\n    _this2.handleTypeChange = function (selectedOption) {\n      _this2.setState({\n        assetType: selectedOption,\n        typeValid: true\n      });\n    };\n\n    _this2.redirectUser = function (path) {\n      _this2.props.history.push(path);\n    };\n\n    _this2.callGetAllDist =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('/get_all_distributors');\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context3.sent;\n\n              if (!(response.status !== 200)) {\n                _context3.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context3.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this2.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var id, response, body, distList;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = null;\n\n              if (sessionStorage.getItem(\"user\")) {\n                id = sessionStorage.getItem(\"user\");\n              }\n\n              _context4.next = 4;\n              return fetch('/get_user/' + id);\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 7;\n              return response.json();\n\n            case 7:\n              body = _context4.sent;\n              distList = body.express.distributors.map(function (distributor) {\n                return {\n                  label: distributor.name + \", \" + distributor.address,\n                  value: distributor.id\n                };\n              });\n\n              _this2.setState({\n                distList: distList\n              });\n\n              if (!(response.status !== 200)) {\n                _context4.next = 12;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 12:\n              return _context4.abrupt(\"return\", body);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this2.closeAssetPanel = function () {\n      _this2.setState({\n        isAssetPaneOpen: false,\n        nameValue: null,\n        discriptionValue: '',\n        assetType: null,\n        priceValue: '',\n        manufacDate: '',\n        expiryDate: '',\n        qtyValue: '',\n        assetFormErrors: {\n          nameVal: '',\n          discVal: '',\n          typeVal: '',\n          priceVal: '',\n          mgfVal: '',\n          expVal: '',\n          qtyVal: ''\n        },\n        assetFormValid: false,\n        nameValid: false,\n        discValid: false,\n        typeValid: false,\n        priceValid: false,\n        mgfValid: false,\n        expValid: false,\n        qtyValid: false\n      });\n    };\n\n    _this2.enrollDistributor =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(e) {\n        var distId, manufId, response, body;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                distId = _this2.state.distId.value;\n                manufId = _this2.state.userID;\n                e.preventDefault();\n                _context5.next = 5;\n                return fetch('/enroll_distributor', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: manufId.concat('~', distId)\n                  })\n                });\n\n              case 5:\n                response = _context5.sent;\n                _context5.next = 8;\n                return response.json();\n\n              case 8:\n                body = _context5.sent;\n\n                if (body.express.status === 1) {\n                  _this2.getDist().then(function (res) {\n                    return _this2.setState({\n                      dist: res.express\n                    });\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n\n                  _this2.setState({\n                    distId: \"\",\n                    distIdValid: false\n                  });\n                } else {\n                  console.log(\"cannot enroll user\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this2.getDist =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var id, response, body, dist, tempDist;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              id = _this2.state.distId.value;\n              _context6.next = 3;\n              return fetch('/get_user/' + id);\n\n            case 3:\n              response = _context6.sent;\n              _context6.next = 6;\n              return response.json();\n\n            case 6:\n              body = _context6.sent;\n\n              if (!(response.status !== 200)) {\n                _context6.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              //var express = body.express;\n              // this.state.user.distributors.push(express);\n              // this.setState(this.state.user);\n              if (body.express !== -1) {\n                dist = {\n                  index: _this2.state.user.distributors.length + 1,\n                  address: body.express.address,\n                  id: body.express.id,\n                  license: body.express.license,\n                  name: body.express.name,\n                  owneraddress: body.express.owneraddress,\n                  ownercnic: body.express.ownercnic,\n                  ownername: body.express.ownername\n                };\n                tempDist = {\n                  label: body.express.name + \", \" + body.express.address,\n                  value: body.express.id\n                };\n\n                _this2.state.user.distributors.push(dist);\n\n                _this2.state.distList.push(tempDist);\n\n                _this2.setState(_this2.state.user);\n\n                _this2.setState(_this2.state.distList);\n              } else {////////////////display error\n              }\n\n              return _context6.abrupt(\"return\", body);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    _this2.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(e) {\n        var id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp, response, body;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                id = \"asset\" + (_this2.state.user.assets.length + 1);\n                qr = \"abcdef\";\n                name = _this2.state.nameValue.label;\n                description = _this2.state.discriptionValue; /////////////////////////////////////////change owner as login\n\n                owner = _this2.state.userID;\n                type = _this2.state.assetType.label;\n                price = _this2.state.priceValue;\n                mgfDate = _this2.state.manufacDate;\n                expDate = _this2.state.expiryDate;\n                qty = _this2.state.qtyValue;\n                timestamp = Date.now();\n\n                _this2.closeAssetPanel();\n\n                e.preventDefault();\n                _context7.next = 15;\n                return fetch('/add_asset', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', qr, '~', name, '~', description, '~', owner, '~', type, '~', price, '~', mgfDate, '~', expDate, '~', qty, '~', timestamp)\n                  })\n                });\n\n              case 15:\n                response = _context7.sent;\n                _context7.next = 18;\n                return response.json();\n\n              case 18:\n                body = _context7.sent;\n\n                _this2.setState({\n                  responseToPost: body\n                });\n\n                if (body.express.status === 1) {\n                  _this2.handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp);\n                } else {\n                  console.log(\"error in creating asset\");\n                }\n\n              case 21:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x3) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this2.test = function () {\n      console.log(_this2.state.distList);\n    };\n\n    _this2.state = {};\n    _this2.state.activeTab = \"1\";\n    _this2.state.isAssetPaneOpen = false;\n    _this2.state.isDistributorPaneOpen = false;\n    _this2.state.response = \"\";\n    _this2.state.responseToPost = \"\";\n    _this2.state.responseToPost2 = {};\n    _this2.state.post = \"\";\n    _this2.state.userID = \"\";\n    _this2.state.distList = [];\n    _this2.state.allDistList = []; //////////////////////////////USER/////////////////////\n\n    _this2.state.user = {};\n    _this2.state.user.address = \"\";\n    _this2.state.user.id = \"\";\n    _this2.state.user.license = \"\";\n    _this2.state.user.name = \"\";\n    _this2.state.user.owneraddress = \"\";\n    _this2.state.user.ownercnic = \"\";\n    _this2.state.user.ownername = \"\";\n    _this2.state.user.password = \"\";\n    _this2.state.user.assets = [];\n    _this2.state.user.distributors = []; /////////////////////////ASSET/////////////////////////\n\n    _this2.state.nameValue = null;\n    _this2.state.discriptionValue = \"\";\n    _this2.state.assetType = null;\n    _this2.state.priceValue = \"\";\n    _this2.state.manufacDate = \"\";\n    _this2.state.expiryDate = \"\";\n    _this2.state.qtyValue = \"\";\n    _this2.state.assetFormErrors = {\n      nameVal: '',\n      discVal: '',\n      typeVal: '',\n      priceVal: '',\n      mgfVal: '',\n      expVal: '',\n      qtyVal: ''\n    };\n    _this2.state.assetFormValid = false;\n    _this2.state.nameValid = false;\n    _this2.state.discValid = false;\n    _this2.state.typeValid = false;\n    _this2.state.priceValid = false;\n    _this2.state.mgfValid = false;\n    _this2.state.expValid = false;\n    _this2.state.qtyValid = false; ////////////////////////Distributor////////////////////\n\n    _this2.state.distId = \"\";\n    _this2.state.distIdValid = false;\n    _this2.state.dist = {};\n    _this2.state.dist.address = \"\";\n    _this2.state.dist.assets = [];\n    _this2.state.dist.chemists = [];\n    _this2.state.dist.id = \"\";\n    _this2.state.dist.license = \"\";\n    _this2.state.dist.name = \"\";\n    _this2.state.dist.owneraddress = \"\";\n    _this2.state.dist.ownercnic = \"\";\n    _this2.state.dist.ownername = \"\";\n    _this2.state.dist.password = \"\"; /////////////////////////QR//////////////////////\n\n    _this2.state.QrResultArray = [];\n    _this2.state.qrbatch = '';\n    _this2.state.qrcarton = '';\n    _this2.state.qrnop = '';\n    _this2.state.qrqip = '';\n    _this2.state.distId2 = '';\n    _this2.state.distId2Valid = false;\n    _this2.state.QrResult = '';\n    _this2.state.qrlist = [];\n    _this2.state.totalPrice = 0; /////////////////////////Bind Functions////////////////\n\n    _this2.handleInputChange = _this2.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.toggle = _this2.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this2))); ////////////////////////////////////////////////////tab 4\n\n    _this2.generateQRCode = _this2.generateQRCode.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  } /////////////////////////////////////////tab4\n\n\n  _createClass(ManufacturerPanel, [{\n    key: \"generateQRCode\",\n    value: function generateQRCode(props) {\n      document.getElementById(\"qrdiv\").style.display = \"inline\";\n      var qstr = \"GlaxoSmithKline-\" + this.state.nameValue.label + \"-\" + this.state.qrbatch;\n\n      if (this.state.qrcarton == 0) {\n        this.state.qrlist.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(QRCode, {\n          value: qstr + \"-0-0-0\",\n          level: \"M\",\n          size: \"56\",\n          renderAs: \"svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        })));\n        this.setState(this.state.qrlist);\n      } else {\n        for (var c = 0; c < this.state.qrcarton; c++) {\n          if (this.state.qrnop == 0) {\n            this.state.qrlist.push(React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 284\n              },\n              __self: this\n            }, React.createElement(QRCode, {\n              value: qstr + \"-\" + Number(c + 1) + \"-0-0\",\n              level: \"M\",\n              size: \"56\",\n              renderAs: \"svg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 285\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 286\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 286\n              },\n              __self: this\n            })));\n            this.setState(this.state.qrlist);\n          } else {\n            for (var i = 0; i < this.state.qrnop; i++) {\n              if (this.state.qrqip == 0) {\n                this.state.qrlist.push(React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 295\n                  },\n                  __self: this\n                }, React.createElement(QRCode, {\n                  value: qstr + \"-\" + Number(c + 1) + \"-\" + Number(i + 1) + \"-0\",\n                  level: \"M\",\n                  size: \"56\",\n                  renderAs: \"svg\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 296\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 297\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 297\n                  },\n                  __self: this\n                })));\n                this.setState(this.state.qrlist);\n              } else {\n                for (var j = 0; j < this.state.qrqip; j++) {\n                  this.state.qrlist.push(React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 305\n                    },\n                    __self: this\n                  }, React.createElement(QRCode, {\n                    value: qstr + \"-\" + Number(c + 1) + \"-\" + Number(i + 1) + \"-\" + Number(j + 1),\n                    level: \"M\",\n                    size: \"56\",\n                    renderAs: \"svg\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 306\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 307\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 307\n                    },\n                    __self: this\n                  })));\n                  this.setState(this.state.qrlist);\n                }\n              }\n            }\n          }\n        }\n      }\n    } /////////////////////////////////////////tab4\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      ///////////////////////////////////////////////session\n      var user = null;\n\n      if (sessionStorage.getItem(\"user\")) {\n        user = sessionStorage.getItem(\"user\");\n\n        if (user.substring(0, 5) === \"admin\") {\n          this.redirectUser('/login/admin');\n        } else if (user.substring(0, 4) === \"chem\") {\n          this.redirectUser('/login/chem');\n        } else if (user.substring(0, 4) === \"dist\") {\n          this.redirectUser('/login/dist');\n        } else {\n          this.setState({\n            userID: user\n          });\n        }\n      } else {\n        this.redirectUser('/');\n      }\n\n      this.getUser().then(function (res) {\n        return _this3.setState({\n          user: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      this.callGetAllDist().then(function (res) {\n        return _this3.setState({\n          allDistList: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    } // updateOwner(id,name){\n    //     this.setState({\n    //         assets: update(this.state.assets, {id: {Owner: {$set: name}}})\n    //     })\n    // }\n    //() => this.setState({ isPaneOpenLeft: false })\n\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"expandComponentDist\",\n    value: function expandComponentDist(row) {\n      return React.createElement(BSTableDist, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _this4 = this;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value), function () {\n        _this4.validate(name, value);\n      });\n    }\n  }, {\n    key: \"isPositiveInteger\",\n    //disabled={!this.state.formValid}\n    value: function isPositiveInteger(n) {\n      return parseFloat(n) === n >>> 0;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(name, value) {\n      var fieldErrors = this.state.assetFormErrors;\n      var length = null;\n\n      switch (name) {\n        case 'discriptionValue':\n          fieldErrors.discVal = value.length > 10 ? true : false;\n          this.setState({\n            discValid: fieldErrors.discVal\n          });\n          break;\n\n        case 'priceValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.priceVal = length && this.isPositiveInteger(value);\n          this.setState({\n            priceValid: fieldErrors.priceVal\n          });\n          break;\n\n        case 'manufacDate':\n          fieldErrors.mgfVal = value.length > 0 ? true : false;\n          this.setState({\n            mgfValid: fieldErrors.mgfVal\n          });\n          break;\n\n        case 'expiryDate':\n          fieldErrors.expVal = value > this.state.manufacDate ? true : false;\n          this.setState({\n            expValid: fieldErrors.expVal\n          });\n          break;\n\n        case 'qtyValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.qtyVal = length && this.isPositiveInteger(value);\n          this.setState({\n            qtyValid: fieldErrors.qtyVal\n          });\n          break;\n\n        default:\n          console.log(\"Invalid Feild\");\n      }\n\n      this.setState({\n        errors: fieldErrors,\n        discValid: fieldErrors.discVal,\n        priceValid: fieldErrors.priceVal,\n        mgfValid: fieldErrors.mgfVal,\n        expValid: fieldErrors.expVal,\n        qtyValid: fieldErrors.qtyVal\n      }, this.validateAssetForm);\n    }\n  }, {\n    key: \"validateAssetForm\",\n    value: function validateAssetForm() {\n      this.setState({\n        assetFormValid: this.state.nameValid && this.state.discValid && this.state.typeValid && this.state.priceValid && this.state.mgfValid && this.state.expValid && this.state.qtyValid\n      });\n    }\n  }, {\n    key: \"handleAddAsset\",\n    value: function handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp) {\n      var asset = {\n        index: this.state.user.assets.length + 1,\n        description: description,\n        expiryDate: expDate,\n        id: id,\n        manufactureDate: mgfDate,\n        name: name,\n        owner: owner,\n        price: price,\n        qr: qr,\n        quantity: qty,\n        timestamp: timestamp,\n        type: type\n      };\n      this.state.user.assets.push(asset);\n      this.setState(this.state.user);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var assetOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.user.assets.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      var distOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.user.distributors.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Manufacturer Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }), React.createElement(SlidingPane, {\n        closeIcon: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705\n          },\n          __self: this\n        }, \"[ X ]\"),\n        isOpen: this.state.isAssetPaneOpen,\n        title: \"Add Asset\",\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeAssetPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }, React.createElement(Select, {\n        required: true,\n        className: this.state.nameValid ? \"success\" : \"error\",\n        placeholder: \"Asset Name *\",\n        value: this.state.nameValue,\n        onChange: this.handleChange,\n        options: assetNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.discValid ? \"success\" : \"error\",\n        type: \"textarea\",\n        label: \"Description\",\n        rows: \"2\",\n        name: \"discriptionValue\",\n        value: this.state.discriptionValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }), React.createElement(Select, {\n        required: true,\n        className: this.state.typeValid ? \"success\" : \"error\",\n        placeholder: \"Asset Type *\",\n        value: this.state.assetType,\n        onChange: this.handleTypeChange,\n        options: assetTypes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.priceValid ? \"success\" : \"error\",\n        label: \"Price *\",\n        name: \"priceValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.priceValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.mgfValid ? \"success\" : \"error\",\n        label: \"Manufacture Date *\",\n        hint: \"mm/dd/yyyy\",\n        name: \"manufacDate\",\n        type: \"date\",\n        value: this.state.manufacDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.expValid ? \"success\" : \"error\",\n        label: \"Expiry Date *\",\n        hint: \"mm/dd/yyyy\",\n        name: \"expiryDate\",\n        type: \"date\",\n        value: this.state.expiryDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        id: this.state.qtyValid ? \"success\" : \"error\",\n        label: \"Quantity *\",\n        name: \"qtyValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.qtyValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: !this.state.assetFormValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, \"Asset\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, \"Distributor\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, \"Transaction\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '4'\n        }),\n        onClick: function onClick() {\n          _this5.toggle('4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, \"QR Codes\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            isAssetPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, \"Add Asset\"), React.createElement(BootstrapTable, {\n        data: this.state.user.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: assetOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }, \"Asset Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, \"Quantity\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.enrollDistributor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, React.createElement(Select, {\n        required: true,\n        className: this.state.distIdValid ? \"success\" : \"error\",\n        placeholder: \"Distributor *\",\n        value: this.state.distId,\n        onChange: this.handleAllDistChange,\n        options: this.state.allDistList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: !this.state.distIdValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, \"Enroll\")), React.createElement(BootstrapTable, {\n        data: this.state.user.distributors,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: distOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponentDist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, \"Distributor Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"owneraddress\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ownercnic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, \"Owner CNIC\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"blue\",\n        size: \"sm\",\n        onClick: this.test,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"form\", {\n        onSubmit: this.tranactionSubmitAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }), React.createElement(MDBIcon, {\n        far: true,\n        icon: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        required: true,\n        className: this.state.distId2Valid ? \"browser-default custom-select success\" : \"browser-default custom-select error\",\n        value: this.state.distId2,\n        onChange: this.handleDistChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, \"Distributor *\"), this.state.distList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          value: item.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791\n          },\n          __self: this\n        }, item.label);\n      }))), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, \"Scanner:\"), React.createElement(QrReader, {\n        delay: 500,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"220px\",\n          border: \"2px solid red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, \"Scanned code:   \", this.state.QrResult), React.createElement(\"label\", {\n        id: \"itemNotFound\",\n        style: {\n          color: \"red\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, \"Item not found\"), React.createElement(\"label\", {\n        id: \"itemAlreadyExist\",\n        style: {\n          color: \"red\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, \"Item already scanned\"), React.createElement(\"label\", {\n        id: \"transactionSuccess\",\n        style: {\n          color: \"green\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, \"Asset(s) Transacted Successfully\"), React.createElement(\"label\", {\n        id: \"transactionFailure\",\n        style: {\n          color: \"red\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      }, \"Transaction Failed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.QrResultArray,\n        version: \"4\",\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      }, \"#\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        },\n        __self: this\n      }, \"Asset Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, \"Price\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"blue\",\n        size: \"sm\",\n        type: \"submit\",\n        disabled: !(this.state.distId2Valid && this.state.QrResultArray.length > 0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }, \"Transact\")), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827\n        },\n        __self: this\n      }, \"Total Price: \", this.state.totalPrice))))), React.createElement(TabPane, {\n        tabId: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }), React.createElement(Select, {\n        placeholder: \"Asset Name *\",\n        className: \"bMDBRowser-default\",\n        value: this.state.nameValue,\n        onChange: this.handleChange,\n        options: assetNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        label: \"Batch\",\n        type: \"number\",\n        onChange: this.handleInputChange,\n        name: \"qrbatch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        label: \"Number of cartons\",\n        type: \"number\",\n        onChange: this.handleInputChange,\n        name: \"qrcarton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        label: \"Number of packs\",\n        type: \"number\",\n        onChange: this.handleInputChange,\n        name: \"qrnop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        required: true,\n        label: \"Quantity in pack\",\n        type: \"number\",\n        onChange: this.handleInputChange,\n        name: \"qrqip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }), React.createElement(MDBBtn, {\n        label: \"Genetate Codes\",\n        onClick: this.generateQRCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      }, \"Generate\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"qrdiv\",\n        style: {\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, \"Gernerated QR Codes\"), this.state.qrlist)))))));\n    }\n  }]);\n\n  return ManufacturerPanel;\n}(Component);\n\nexport default ManufacturerPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/ManufacturerPanel.js"],"names":["React","Component","MDBIcon","MDBInputSelect","MDBContainer","MDBDropdown","MDBDropdownMenu","MDBDropdownItem","MDBDropdownToggle","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","QrReader","QRCode","BSTable","props","closeTransactionPanel","setState","isTransactionPaneOpen","openTransactionPanel","getAllTransactions","then","res","transactions","express","catch","err","console","log","id","data","fetch","response","json","body","status","Error","message","state","responseToPost","map","transaction","width","txid","asset","owner","maxWidth","qr","description","type","manufactureDate","expiryDate","timestamp","price","BSTableDist","wordwrap","address","ownername","license","assetTypes","label","value","assetNames","ManufacturerPanel","handleScan","found","i","user","assets","length","k","QrResultArray","document","getElementById","style","display","QrResult","temp","JSON","parse","stringify","index","push","totalPrice","tranactionSubmitAll","e","distId","distId2","assetId","preventDefault","method","headers","post","concat","responseToPost2","handleError","error","handleChange","selectedOption","nameValue","nameValid","handleDistChange","distId2Valid","handleAllDistChange","distIdValid","handleTypeChange","assetType","typeValid","redirectUser","path","history","callGetAllDist","getUser","sessionStorage","getItem","distList","distributors","distributor","name","closeAssetPanel","isAssetPaneOpen","discriptionValue","priceValue","manufacDate","qtyValue","assetFormErrors","nameVal","discVal","typeVal","priceVal","mgfVal","expVal","qtyVal","assetFormValid","discValid","priceValid","mgfValid","expValid","qtyValid","enrollDistributor","manufId","userID","getDist","dist","owneraddress","ownercnic","tempDist","handleSubmit","mgfDate","expDate","qty","Date","now","handleAddAsset","test","activeTab","isDistributorPaneOpen","allDistList","password","chemists","qrbatch","qrcarton","qrnop","qrqip","qrlist","handleInputChange","bind","toggle","generateQRCode","qstr","c","Number","j","substring","tab","row","event","target","validate","n","parseFloat","fieldErrors","isPositiveInteger","errors","validateAssetForm","quantity","assetOptions","onlyOneExpanding","page","sizePerPageList","text","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition","distOptions","active","isExpandableRow","expandComponent","delay","expandComponentDist","item","border","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBIcon, MDBInputSelect,  MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\n//import update from 'react-addons-update';\nimport Select from 'react-select';\nimport QrReader from \"react-qr-scanner\";\nimport QRCode from 'qrcode.react'\n\nclass BSTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.isTransactionPaneOpen=false;\n        this.state.responseToPost=\"\";\n        this.state.transactions = [];\n    }\n\n    closeTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: false });\n    };\n\n    openTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: true });\n        this.getAllTransactions()\n        .then(res => this.setState({ transactions: res.express }))\n        .catch(err => console.log(err));\n    };\n\n    getAllTransactions = async () => {\n        var id=this.props.data.id;\n        const response = await fetch('/get_asset_history/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    {/* Show Transactions side pane */}\n                    <SlidingPane isOpen={this.state.isTransactionPaneOpen} title='Transactions History' closeIcon={<div>[ X ]</div>} from='left' width='400px' onRequestClose={this.closeTransactionPanel}>\n                        {/* Iterates */}\n                        {this.state.transactions.map(function(transaction){\n                            return(\n                                <MDBCard border=\"info\" className=\"m-3\" style={{ width: \"20rem\" }} key={ transaction.txid }>\n                                    <MDBCardHeader> Transaction Details</MDBCardHeader>\n                                    <MDBCardBody className=\"text-info\">\n                                        <MDBRow className=\"justify-content-center\">\n                                            <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"18rem\" }}>\n                                                <MDBListGroupItem color=\"primary\">ID: {transaction.txid}</MDBListGroupItem>\n                                                <MDBListGroupItem color=\"primary\">Asset ID: {transaction.asset.id}</MDBListGroupItem>\n                                                <MDBListGroupItem color=\"primary\">Asset Owner: {transaction.asset.owner}</MDBListGroupItem>\n                                            </MDBListGroup>\n                                        </MDBRow>\n                                    </MDBCardBody>\n                                </MDBCard>\n                            );\n                        })}\n                        {/* Iterates */}\n                    </SlidingPane>\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <MDBCardHeader> Asset Details</MDBCardHeader>\n                        <MDBCardBody className=\"text-info\">\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">ID: {this.props.data.id}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">QRCode: {this.props.data.qr}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Description: {this.props.data.description}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Type: {this.props.data.type}</MDBListGroupItem>\n                                </MDBListGroup>\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">Mfg Date: {this.props.data.manufactureDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">ExpiryDate: {this.props.data.expiryDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Timestamp: {this.props.data.timestamp}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Price: {this.props.data.price}</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBRow>\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={this.openTransactionPanel}>Show Details</MDBBtn>\n                            </MDBRow>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>Asset Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\nclass BSTableDist extends Component {\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n\n                            <MDBCardHeader> User Details</MDBCardHeader>\n                            <MDBCardBody className=\"text-info\">\n                                <MDBRow className=\"justify-content-center\">\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\",wordwrap: \"break-word\"  }}>\n                                        <MDBListGroupItem color=\"primary\">ID: {this.props.data.id}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Company Address: {this.props.data.address}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\",wordwrap: \"break-word\" }}>\n                                        <MDBListGroupItem color=\"primary\">Owner Name: {this.props.data.ownername}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">License Number: {this.props.data.license}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                </MDBRow>\n                            </MDBCardBody>\n\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>User Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\n///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\nconst assetTypes = [\n    { label: \"Medicine\", value: 1 },\n    { label: \"Surgical Instrument\", value: 2 },\n    { label: \"Hospital Equipment\", value: 3 },\n    { label: \"Saftey Equipment\", value: 4 },\n];\n\nconst assetNames = [\n    { label: \"Panadol\", value: 1 },\n    { label: \"Xyzal\", value: 2 },\n    { label: \"Castine\", value: 3 },\n    { label: \"Panadol Extra\", value: 4 },\n    { label: \"Calpol\", value: 5 },\n    { label: \"Brufen\", value: 6 },\n    { label: \"Paracetamol\", value: 7 },\n    { label: \"Castine\", value: 8 },\n    { label: \"Forceps\", value: 9 },\n    { label: \"Scissors\", value: 10 },\n    { label: \"Speculums\", value: 11 },\n    { label: \"Spatulas\", value: 12 },\n    { label: \"Needle Holders\", value: 13 },\n    { label: \"Nebulizers\", value: 14 },\n    { label: \"Syringe\", value: 15 },\n    { label: \"Catheter\", value: 16 },\n    { label: \"Medical Gloves\", value: 17 },\n    { label: \"Obstetrical Forceps\", value: 18 },\n    { label: \"Surgical Mask\", value: 19 },\n    { label: \"Gowns\", value: 20 },\n    { label: \"Head Covering\", value: 21 },\n    { label: \"Shoe Covering\", value: 22 },\n];\n\nclass ManufacturerPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.state.activeTab = \"1\";\n        this.state.isAssetPaneOpen = false;\n        this.state.isDistributorPaneOpen = false;\n        this.state.response = \"\";\n        this.state.responseToPost = \"\";\n        this.state.responseToPost2={};\n        this.state.post = \"\";\n\n        this.state.userID = \"\";\n\n        this.state.distList=[];\n        this.state.allDistList=[];\n        //////////////////////////////USER/////////////////////\n        this.state.user = {};\n        this.state.user.address=\"\";\n        this.state.user.id=\"\";\n        this.state.user.license=\"\";\n        this.state.user.name=\"\";\n        this.state.user.owneraddress=\"\";\n        this.state.user.ownercnic=\"\";\n        this.state.user.ownername=\"\";\n        this.state.user.password=\"\";\n        this.state.user.assets=[];\n        this.state.user.distributors=[];\n        /////////////////////////ASSET/////////////////////////\n        this.state.nameValue=null;\n        this.state.discriptionValue=\"\";\n        this.state.assetType=null;\n        this.state.priceValue=\"\";\n        this.state.manufacDate=\"\";\n        this.state.expiryDate=\"\";\n        this.state.qtyValue=\"\";\n        this.state.assetFormErrors={nameVal:'', discVal:'', typeVal:'', priceVal:'', mgfVal:'', expVal:'', qtyVal:''};\n        this.state.assetFormValid=false;\n        this.state.nameValid=false;\n        this.state.discValid=false;\n        this.state.typeValid=false;\n        this.state.priceValid=false;\n        this.state.mgfValid=false;\n        this.state.expValid=false;\n        this.state.qtyValid=false;\n\n        ////////////////////////Distributor////////////////////\n        this.state.distId = \"\";\n        this.state.distIdValid=false;\n        this.state.dist = {};\n        this.state.dist.address=\"\";\n        this.state.dist.assets=[];\n        this.state.dist.chemists=[];\n        this.state.dist.id=\"\";\n        this.state.dist.license=\"\";\n        this.state.dist.name=\"\";\n        this.state.dist.owneraddress=\"\";\n        this.state.dist.ownercnic=\"\";\n        this.state.dist.ownername=\"\";\n        this.state.dist.password=\"\";\n        /////////////////////////QR//////////////////////\n        this.state.QrResultArray=[];\n        this.state.qrbatch='';\n        this.state.qrcarton='';\n        this.state.qrnop='';\n        this.state.qrqip='';\n        this.state.distId2='';\n        this.state.distId2Valid=false;\n        this.state.QrResult='';\n        this.state.qrlist=[];\n        this.state.totalPrice=0;\n        /////////////////////////Bind Functions////////////////\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n\n        ////////////////////////////////////////////////////tab 4\n        this.generateQRCode=this.generateQRCode.bind(this);\n    }\n\n    /////////////////////////////////////////tab4\n    generateQRCode (props) {\n        document.getElementById(\"qrdiv\").style.display = \"inline\";\n        var qstr = \"GlaxoSmithKline-\" + this.state.nameValue.label + \"-\" + this.state.qrbatch;\n        if (this.state.qrcarton == 0) {\n            this.state.qrlist.push(\n                <div>\n                    <QRCode value={qstr + \"-0-0-0\"} level=\"M\" size=\"56\" renderAs=\"svg\" />\n                    <br /><br />\n                </div>\n            )\n            this.setState(this.state.qrlist);\n        }\n        else {\n            for (var c = 0; c < this.state.qrcarton; c++) {\n                if(this.state.qrnop==0){\n                    this.state.qrlist.push(\n                        <div>\n                            <QRCode value={qstr +\"-\"+Number(c+1)+ \"-0-0\"} level=\"M\" size=\"56\" renderAs=\"svg\" />\n                            <br /><br />\n                        </div>\n                    )\n                    this.setState(this.state.qrlist);\n                }\n                else{\n                    for (var i = 0; i < this.state.qrnop; i++) {\n                        if(this.state.qrqip==0){\n                            this.state.qrlist.push(\n                                <div>\n                                    <QRCode value={qstr+\"-\"+Number(c+1)+\"-\"+Number(i+1)+ \"-0\"} level=\"M\" size=\"56\" renderAs=\"svg\" />\n                                    <br /><br />\n                                </div>\n                            )\n                            this.setState(this.state.qrlist);\n                        }\n                        else{\n                            for (var j = 0; j < this.state.qrqip; j++) {\n                                this.state.qrlist.push(\n                                    <div>\n                                        <QRCode value={qstr + \"-\" + Number(c + 1) + \"-\" + Number(i + 1) + \"-\" + Number(j + 1)} level=\"M\" size=\"56\" renderAs=\"svg\" />\n                                        <br /><br />\n                                    </div>\n                                )\n                                this.setState(this.state.qrlist);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /////////////////////////////////////////tab4\n\n    handleScan = (data) => {\n        console.log(data);\n        var found = false;\n        if (data) {\n            for (var i = 0; i < this.state.user.assets.length; i++) {\n                if (data == this.state.user.assets[i].id) {\n                    for (var k = 0; k < this.state.QrResultArray.length; k++) {\n                        if (data == this.state.QrResultArray[k].id) {\n                            document.getElementById(\"itemAlreadyExist\").style.display = 'block';\n                            document.getElementById(\"itemNotFound\").style.display = 'none';\n                            return;\n                        }\n                    }\n                    found = true;\n                    document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n                    this.setState({ QrResult: data });\n                    var temp = JSON.parse(JSON.stringify(this.state.user.assets[i]));\n                    temp.index = this.state.QrResultArray.length + 1;\n                    this.state.QrResultArray.push(temp);\n                    this.setState(this.state.QrResultArray);\n                    document.getElementById(\"itemNotFound\").style.display = 'none';\n                    this.setState({ totalPrice: this.state.totalPrice + temp.price });\n                    return;\n                }\n            }\n            if (found == false) {\n                document.getElementById(\"itemNotFound\").style.display = 'block';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n            }\n        }\n    }\n\n    tranactionSubmitAll = async e => {\n        var distId=this.state.distId2.value;\n        console.log(distId);\n        for(var i=0;i<this.state.QrResultArray.length;i++){\n            var assetId=this.state.QrResultArray[i].id;\n            e.preventDefault();\n            const response = await fetch('/change_owner', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: assetId.concat('~',distId) })\n            });\n\n            const body = await response.json();\n            if(body.express.status===-1){\n                document.getElementById(\"transactionSuccess\").style.display='block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n                break;\n            }else{\n                this.setState({ responseToPost2: body });\n                document.getElementById(\"transactionFailure\").style.display='block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n            }\n        }\n    };\n\n    handleError=(err)=> {\n        console.error(err);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ nameValue: selectedOption, nameValid: true });\n    }\n\n    handleDistChange = (selectedOption) => {\n        console.log(\"handleDistChange\");\n        console.log(selectedOption);\n        this.setState({ distId2: selectedOption, distId2Valid: true });\n    }\n\n    handleAllDistChange = (selectedOption) => {\n        this.setState({ distId: selectedOption, distIdValid: true });\n    }\n\n    handleTypeChange = (selectedOption) => {\n        this.setState({ assetType: selectedOption, typeValid: true });\n    }\n\n    redirectUser = (path) => {\n        this.props.history.push(path);\n    }\n\n    componentDidMount() {\n        ///////////////////////////////////////////////session\n        var user = null;\n        if(sessionStorage.getItem(\"user\")){\n            user = sessionStorage.getItem(\"user\");\n            if(user.substring(0,5)===\"admin\"){\n                this.redirectUser('/login/admin');\n            }else if(user.substring(0,4)===\"chem\"){\n                this.redirectUser('/login/chem');\n            }else if(user.substring(0,4)===\"dist\"){\n                this.redirectUser('/login/dist');\n            }else{\n                this.setState({userID:user});\n            }\n        }else{\n            this.redirectUser('/');\n        }\n        this.getUser()\n        .then(res => this.setState({ user: res.express }))\n        .catch(err => console.log(err));\n        this.callGetAllDist()\n        .then(res => this.setState({ allDistList: res.express }))\n        .catch(err => console.log(err));\n    }\n\n    callGetAllDist = async () => {\n        const response = await fetch('/get_all_distributors');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    getUser = async () => {\n        var id = null;\n        if(sessionStorage.getItem(\"user\")){\n            id = sessionStorage.getItem(\"user\");\n        }\n        const response = await fetch('/get_user/'+id);\n        const body = await response.json();\n\n        var distList=body.express.distributors.map( (distributor) => ({\n            label: distributor.name+\", \"+distributor.address,\n            value: distributor.id,\n        }));\n\n        this.setState({distList:distList});\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    // updateOwner(id,name){\n    //     this.setState({\n    //         assets: update(this.state.assets, {id: {Owner: {$set: name}}})\n    //     })\n    // }\n    //() => this.setState({ isPaneOpenLeft: false })\n    expandComponent(row) {\n        return (\n            <BSTable data={ row }/>\n        );\n    }\n\n    expandComponentDist(row) {\n        return (\n            <BSTableDist data={ row }/>\n        );\n    }\n\n    closeAssetPanel = () => {\n        this.setState({\n            isAssetPaneOpen: false,\n            nameValue:null,\n            discriptionValue:'',\n            assetType:null,\n            priceValue:'',\n            manufacDate:'',\n            expiryDate:'',\n            qtyValue:'',\n            assetFormErrors:{nameVal:'', discVal:'', typeVal:'', priceVal:'', mgfVal:'', expVal:'', qtyVal:''},\n            assetFormValid:false,\n            nameValid:false,\n            discValid:false,\n            typeValid:false,\n            priceValid:false,\n            mgfValid:false,\n            expValid:false,\n            qtyValid:false,\n        });\n    };\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        },()=>{this.validate(name,value)});\n    };\n\n    //disabled={!this.state.formValid}\n\n    isPositiveInteger(n) {\n        return parseFloat(n) === n >>> 0;\n    }\n\n    validate(name,value){\n        var fieldErrors=this.state.assetFormErrors;\n        var length=null;\n        switch(name){\n            case 'discriptionValue':\n                fieldErrors.discVal = value.length > 10 ? true : false;\n                this.setState({ discValid:fieldErrors.discVal });\n                break;\n            case 'priceValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.priceVal = length && this.isPositiveInteger(value);\n                this.setState({ priceValid:fieldErrors.priceVal });\n                break;\n            case 'manufacDate':\n                fieldErrors.mgfVal = value.length > 0 ? true : false;\n                this.setState({ mgfValid:fieldErrors.mgfVal });\n                break;\n            case 'expiryDate':\n                fieldErrors.expVal = value > this.state.manufacDate ? true : false;\n                this.setState({ expValid:fieldErrors.expVal });\n                break;\n            case 'qtyValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.qtyVal = length && this.isPositiveInteger(value);\n                this.setState({ qtyValid:fieldErrors.qtyVal });\n                break;\n            default:\n                console.log(\"Invalid Feild\");\n        }\n\n        this.setState({\n            errors: fieldErrors,\n            discValid:fieldErrors.discVal,\n            priceValid:fieldErrors.priceVal,\n            mgfValid:fieldErrors.mgfVal,\n            expValid:fieldErrors.expVal,\n            qtyValid:fieldErrors.qtyVal,\n        }, this.validateAssetForm );\n    }\n\n    validateAssetForm() {\n        this.setState({assetFormValid: this.state.nameValid && this.state.discValid && this.state.typeValid && this.state.priceValid && this.state.mgfValid && this.state.expValid && this.state.qtyValid });\n    }\n\n    handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp) {\n        var asset = {\n            index: (this.state.user.assets.length+1),\n            description: description,\n            expiryDate:expDate,\n            id: id,\n            manufactureDate: mgfDate,\n            name: name,\n            owner:owner,\n            price: price,\n            qr:qr,\n            quantity: qty,\n            timestamp: timestamp,\n            type:type,\n        }\n        this.state.user.assets.push(asset);\n        this.setState(this.state.user);\n    };\n\n    //tasks.map((task) => task.name )\n\n    enrollDistributor = async e => {\n        var distId=this.state.distId.value;\n        var manufId=this.state.userID;\n        e.preventDefault();\n\n        const response = await fetch('/enroll_distributor', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: manufId.concat('~',distId) })\n        });\n        const body = await response.json();\n        if(body.express.status===1){\n            this.getDist()\n            .then(res => this.setState({ dist: res.express }))\n            .catch(err => console.log(err));\n            this.setState({distId:\"\",distIdValid:false});\n        }else{\n            console.log(\"cannot enroll user\");\n        }\n    }\n\n    getDist = async () => {\n        var id = this.state.distId.value;\n        const response = await fetch('/get_user/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        //var express = body.express;\n        // this.state.user.distributors.push(express);\n        // this.setState(this.state.user);\n        if(body.express!==-1){\n            var dist = {\n                index: (this.state.user.distributors.length+1),\n                address: body.express.address,\n                id: body.express.id,\n                license: body.express.license,\n                name: body.express.name,\n                owneraddress: body.express.owneraddress,\n                ownercnic: body.express.ownercnic,\n                ownername: body.express.ownername,\n            }\n            var tempDist={\n                label: body.express.name+\", \"+body.express.address,\n                value: body.express.id,\n            }\n            this.state.user.distributors.push(dist);\n            this.state.distList.push(tempDist);\n            this.setState(this.state.user);\n            this.setState(this.state.distList);\n        }else{\n            ////////////////display error\n        }\n\n        return body;\n    };\n\n    handleSubmit = async e => {\n        var id=\"asset\"+(this.state.user.assets.length+1);\n        var qr=\"abcdef\";\n        var name=this.state.nameValue.label;\n        var description=this.state.discriptionValue;\n        /////////////////////////////////////////change owner as login\n        var owner=this.state.userID;\n        var type=this.state.assetType.label;\n        var price=this.state.priceValue;\n        var mgfDate=this.state.manufacDate;\n        var expDate=this.state.expiryDate;\n        var qty=this.state.qtyValue;\n        var timestamp=Date.now();\n\n        this.closeAssetPanel();\n        e.preventDefault();\n        const response = await fetch('/add_asset', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: id.concat('~',qr,'~',name,'~',description,'~',owner,'~',type,'~',price,'~',mgfDate,'~',expDate,'~',qty,'~',timestamp) })\n        });\n        const body = await response.json();\n\n        this.setState({ responseToPost: body });\n        if(body.express.status===1){\n            this.handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp);\n        }else{\n            console.log(\"error in creating asset\");\n        }\n    };\n\n    //height='240' scrollTop={ 'Top' }\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n\n    test=()=>{\n        console.log(this.state.distList);\n    }\n\n    render() {\n        const assetOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.assets.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        const distOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.distributors.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Manufacturer Panel\"/>\n                {/* Add asset side pane */}\n                <SlidingPane closeIcon={<div>[ X ]</div>} isOpen={this.state.isAssetPaneOpen} title='Add Asset' from='right' width='400px' onRequestClose={this.closeAssetPanel}>\n                    <form onSubmit={this.handleSubmit}>\n                        <Select required className={this.state.nameValid ? \"success\" : \"error\"} placeholder=\"Asset Name *\" value={this.state.nameValue} onChange={this.handleChange} options={assetNames}/>\n                        <MDBInput required id={this.state.discValid ? \"success\" : \"error\"} type=\"textarea\" label=\"Description\" rows=\"2\" name=\"discriptionValue\" value={this.state.discriptionValue} onChange={this.handleInputChange}/>\n                        <Select required className={this.state.typeValid ? \"success\" : \"error\"} placeholder=\"Asset Type *\" value={this.state.assetType} onChange={this.handleTypeChange} options={assetTypes}/>\n                        <MDBInput required id={this.state.priceValid ? \"success\" : \"error\"} label=\"Price *\" name=\"priceValue\" type=\"number\" min=\"1\" value={this.state.priceValue} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.mgfValid ? \"success\" : \"error\"} label=\"Manufacture Date *\" hint=\"mm/dd/yyyy\" name=\"manufacDate\" type=\"date\" value={this.state.manufacDate} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.expValid ? \"success\" : \"error\"} label=\"Expiry Date *\" hint=\"mm/dd/yyyy\" name=\"expiryDate\" type=\"date\" value={this.state.expiryDate} onChange={this.handleInputChange}/>\n                        <MDBInput required id={this.state.qtyValid ? \"success\" : \"error\"} label=\"Quantity *\" name=\"qtyValue\" type=\"number\" min=\"1\" value={this.state.qtyValue} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" disabled={!this.state.assetFormValid}>Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Asset</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Distributor</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>Transaction</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '4' })} onClick={() => { this.toggle('4'); }}>QR Codes</NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm={12}>\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isAssetPaneOpen: true })} >Add Asset</MDBBtn>\n                                <BootstrapTable data={ this.state.user.assets } version='4' hover condensed pagination options={ assetOptions }  expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                    <TableHeaderColumn isKey dataField='index'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='owner' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='quantity' >Quantity</TableHeaderColumn>\n                                </BootstrapTable>\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm={12}>\n                                <br/>\n                                <form onSubmit={this.enrollDistributor} >\n                                    <div className=\"form-group\">\n                                        <Select required className={this.state.distIdValid ? \"success\" : \"error\"} placeholder=\"Distributor *\" value={this.state.distId} onChange={this.handleAllDistChange} options={this.state.allDistList}/>\n                                    </div>\n                                    <MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" disabled={!this.state.distIdValid}>Enroll</MDBBtn>\n                                </form>\n\n                            {/*    <div className=\"dropright\">\n                                    <button className=\"btn btn-primary btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Add Distributor</button>\n                                    <form className=\"dropdown-menu p-4\" onSubmit={this.enrollDistributor} >\n                                        <div className=\"form-group\">\n                                            <Select required className={this.state.distIdValid ? \"success\" : \"error\"} placeholder=\"Distributor *\" value={this.state.distId} onChange={this.handleAllDistChange} options={this.state.allDistList}/>\n\n                                                <MDBInput required label=\"Name *\" name=\"distId\" type=\"text\" value={this.state.distId} onChange={this.handleInputChange}/>\n\n                                        </div>\n                                        <MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Enroll</MDBBtn>\n                                    </form>\n                                </div>\n                                */}\n                                <BootstrapTable data={ this.state.user.distributors } version='4' hover condensed pagination options={ distOptions } expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponentDist } >\n                                    <TableHeaderColumn isKey dataField='index'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Distributor Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='owneraddress' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='ownercnic' >Owner CNIC</TableHeaderColumn>\n                                </BootstrapTable>\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"3\">\n                    <MDBBtn color=\"blue\"  size=\"sm\" onClick={this.test} >Test</MDBBtn>\n                        <form onSubmit={this.tranactionSubmitAll}>\n                            <Row>\n                                <Col sm={6}>\n                                    <br/><br/>\n                                    <MDBIcon far icon=\"user\" />\n                                    <select required className={this.state.distId2Valid ? \"browser-default custom-select success\" : \"browser-default custom-select error\"} value={this.state.distId2} onChange={this.handleDistChange} >\n                                        <option value=\"0\">Distributor *</option>\n                                        {this.state.distList.map(function(item, i){\n                                            return <option value={item.value}>{item.label}</option>\n                                         })}\n                                    </select>\n                                    {/*\n                                        <Select  className={this.state.distId2Valid ? \"success\" : \"error\"} placeholder=\"Distributor *\" value={this.state.distId2} onChange={this.handleDistChange} options={this.state.distList}/>\n                                    */}\n                                </Col>\n                                <Col sm={3}>\n                                    <h5>Scanner:</h5>\n                                    <QrReader delay={500} onError={this.handleError} onScan={this.handleScan} style={{ width:\"220px\", border:\"2px solid red\" }} />\n                                    <br/>\n                                </Col>\n                                <Col sm={3}>\n                                    <br/><br/>\n                                    <label style={{color:\"green\"}}>Scanned code:   {this.state.QrResult}</label>\n                                    <label id=\"itemNotFound\" style={{color:\"red\", display:\"none\"}}>Item not found</label>\n                                    <label id=\"itemAlreadyExist\" style={{color:\"red\", display:\"none\"}}>Item already scanned</label>\n                                    <label id=\"transactionSuccess\" style={{color:\"green\", display:\"none\"}}>Asset(s) Transacted Successfully</label>\n                                    <label id=\"transactionFailure\" style={{color:\"red\", display:\"none\"}}>Transaction Failed</label>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={this.state.QrResultArray} version='4' hover>\n                                        <TableHeaderColumn isKey dataField='index'>#</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='name'>Asset Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='price'>Price</TableHeaderColumn>\n                                    </BootstrapTable>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={10}>\n                                    <MDBBtn color=\"blue\"  size=\"sm\" type=\"submit\" disabled={!(this.state.distId2Valid && (this.state.QrResultArray.length > 0)) }>Transact</MDBBtn>\n                                </Col>\n                                <Col md={2}>\n                                    <label style={{ color: \"green\" }}>Total Price: {this.state.totalPrice}</label>\n                                </Col>\n                            </Row>\n                        </form>\n                    </TabPane>\n                    <TabPane tabId=\"4\">\n                        <Row>\n                            <Col sm={12}>\n                                <center>\n                                    <br/>\n                                    <Select placeholder=\"Asset Name *\" className=\"bMDBRowser-default\" value={this.state.nameValue} onChange={this.handleChange} options={assetNames}/>\n                                    <MDBInput required label=\"Batch\" type=\"number\" onChange={this.handleInputChange} name=\"qrbatch\"/><br/>\n                                    <MDBInput required label=\"Number of cartons\" type=\"number\" onChange={this.handleInputChange} name=\"qrcarton\"/><br/>\n                                    <MDBInput required label=\"Number of packs\" type=\"number\" onChange={this.handleInputChange} name=\"qrnop\"/><br/>\n                                    <MDBInput required label=\"Quantity in pack\" type=\"number\" onChange={this.handleInputChange} name=\"qrqip\"/><br/>\n                                    <MDBBtn label=\"Genetate Codes\" onClick={this.generateQRCode} >Generate</MDBBtn>\n                                    <br/>\n                                    <div id=\"qrdiv\" style={{display:\"none\"}}>\n                                        <h2>Gernerated QR Codes</h2>\n                                        {this.state.qrlist}\n                                    </div>\n                                </center>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default ManufacturerPanel;\n"]},"metadata":{},"sourceType":"module"}