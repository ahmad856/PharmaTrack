{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/Verification.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBListGroupItem, MDBListGroup, MDBInput } from \"mdbreact\";\nimport QrReader from \"react-qr-reader\"; //<img src={qrImg} alt=\"QR Code\" height=\"50px\" width=\"50px\"/>\n\nvar Verification =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Verification, _Component);\n\n  function Verification(props) {\n    var _this;\n\n    _classCallCheck(this, Verification);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Verification).call(this, props));\n\n    _this.verify = function () {\n      _this.getAllTransactions().then(function (res) {\n        return _this.setState({\n          transactions: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllTransactions =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _this.state.code;\n              console.log(id);\n              _context.next = 4;\n              return fetch('/get_asset_history/' + id);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 10:\n              return _context.abrupt(\"return\", body);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {};\n    _this.state.code = \"\";\n    _this.state.transactions = [];\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleScan = _this.handleScan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Verification, [{\n    key: \"handleScan\",\n    value: function handleScan(data) {\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(err) {\n      console.error(err);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    // <MDBInput label=\"Code *\" name=\"code\" type=\"number\" value={this.state.code} onChange={this.handleInputChange}/>\n    // <p>_____OR_____</p>\n    value: function render() {\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"8\",\n        className: \"mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(MDBJumbotron, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Product Verification\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"fixTitle1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Scan Code :\"), React.createElement(QrReader, {\n        delay: this.state.delay,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"50%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.verify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Verify\")))))), this.state.transactions.map(function (transaction) {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            width: \"70rem\"\n          },\n          key: transaction.txid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \" Transaction Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"66rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"ID: \", transaction.txid), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Asset ID: \", transaction.asset.id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Asset Owner: \", transaction.asset.owner)))));\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.result));\n    }\n  }]);\n\n  return Verification;\n}(Component);\n\nexport default Verification;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/Verification.js"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBJumbotron","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBListGroupItem","MDBListGroup","MDBInput","QrReader","Verification","props","verify","getAllTransactions","then","res","setState","transactions","express","catch","err","console","log","id","state","code","fetch","response","json","body","status","Error","message","handleInputChange","bind","handleScan","data","result","error","event","target","value","name","delay","handleError","width","map","transaction","txid","asset","owner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBListGroupItem, MDBListGroup, MDBInput } from \"mdbreact\";\nimport QrReader from \"react-qr-reader\";\n\n//<img src={qrImg} alt=\"QR Code\" height=\"50px\" width=\"50px\"/>\nclass Verification extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.code=\"\";\n        this.state.transactions = [];\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleScan = this.handleScan.bind(this);\n    }\n\n    handleScan(data) {\n        if (data) {\n            this.setState({result: data});\n        }\n    }\n\n    handleError(err) {\n        console.error(err);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    verify = () => {\n        this.getAllTransactions()\n        .then(res => this.setState({ transactions: res.express }))\n        .catch(err => console.log(err));\n    };\n\n    getAllTransactions = async () => {\n        var id=this.state.code;\n        console.log(id);\n        const response = await fetch('/get_asset_history/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n    // <MDBInput label=\"Code *\" name=\"code\" type=\"number\" value={this.state.code} onChange={this.handleInputChange}/>\n    // <p>_____OR_____</p>\n    render() {\n        return (\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"8\" className=\"mx-auto\">\n                        <MDBJumbotron className=\"mt-3\">\n                            <h1>Product Verification</h1>\n                            <form>\n                                <center><label class=\"fixTitle1\">Scan Code :</label>\n\n                                <QrReader delay={this.state.delay} onError={this.handleError} onScan={this.handleScan} style={{ width: \"50%\" }} />\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={this.verify}>Verify</MDBBtn>\n                                </center>\n                            </form>\n                        </MDBJumbotron>\n                    </MDBCol>\n                </MDBRow>\n\n                {/* Iterates */}\n                {this.state.transactions.map(function(transaction){\n                    return(\n                        <MDBCard border=\"info\" className=\"m-3\" style={{ width: \"70rem\" }} key={ transaction.txid }>\n                            <MDBCardHeader> Transaction Details</MDBCardHeader>\n                            <MDBCardBody className=\"text-info\">\n                                <MDBRow className=\"justify-content-center\">\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"66rem\" }}>\n                                        <MDBListGroupItem color=\"primary\">ID: {transaction.txid}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Asset ID: {transaction.asset.id}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Asset Owner: {transaction.asset.owner}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </MDBCard>\n                    );\n                })}\n                {/* Iterates */}\n                <p>{this.state.result}</p>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default Verification;\n"]},"metadata":{},"sourceType":"module"}