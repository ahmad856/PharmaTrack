{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/AdminPanel.js\";\nimport React, { Component } from 'react';\nimport { Animation, MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable(props) {\n    var _this;\n\n    _classCallCheck(this, BSTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BSTable).call(this, props));\n\n    _this.closeTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: false\n      });\n    };\n\n    _this.openTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: true\n      });\n\n      _this.getAllTransactions().then(function (res) {\n        return _this.setState({\n          transactions: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllTransactions =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _this.props.data.Id;\n              _context.next = 3;\n              return fetch('/get_asset_history/' + id);\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.tranactionSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var assetId, distId, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                assetId = _this.props.data.Id;\n                distId = _this.state.distID;\n                e.preventDefault();\n                _context2.next = 5;\n                return fetch('/change_owner', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: assetId.concat('~', distId)\n                  })\n                });\n\n              case 5:\n                response = _context2.sent;\n                _context2.next = 8;\n                return response.text();\n\n              case 8:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {};\n    _this.state.isTransactionPaneOpen = false;\n    _this.state.distID = \"\";\n    _this.state.responseToPost = \"\";\n    _this.state.transactions = [];\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BSTable, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Animation, {\n          type: \"fadeIn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \" User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"ID: \", this.props.data.Id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Company Name: \", this.props.data.QRCode), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Company Address:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), \" \", this.props.data.Description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"License Number: \", this.props.data.AssetType)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Owner Name: \", this.props.data.ManufactureDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Owner CNIC: \", this.props.data.ExpiryDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Owner Address:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), \" \", this.props.data.Timestamp)))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component);\n\nvar userTypes = [{\n  label: \"Manufacturer\",\n  value: 1\n}, {\n  label: \"Distributor\",\n  value: 2\n}, {\n  label: \"Chemist\",\n  value: 3\n}];\n\nvar AdminPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminPanel, _Component);\n\n  function AdminPanel(props) {\n    var _this2;\n\n    _classCallCheck(this, AdminPanel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AdminPanel).call(this, props));\n\n    _this2.handleChange = function (selectedOption) {\n      _this2.setState({\n        nameValue: selectedOption\n      });\n    };\n\n    _this2.handleTypeChange = function (selectedOption) {\n      _this2.setState({\n        assetType: selectedOption\n      });\n    };\n\n    _this2.callGetAllAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('/get_all_assets');\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context3.sent;\n\n              if (!(response.status !== 200)) {\n                _context3.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context3.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this2.closeAssetPanel = function () {\n      _this2.setState({\n        isAssetPaneOpen: false,\n        nameValue: null,\n        discriptionValue: '',\n        assetType: null,\n        priceValue: '',\n        manufacDate: '',\n        expiryDate: '',\n        qtyValue: '',\n        ownerValue: '' // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n        // nameValid:false,\n        // priceValid:false,\n        // qtyValid:false,\n        // typeValid:false,\n        // formValid:false\n\n      });\n    };\n\n    _this2.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(e) {\n        var id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp, response, body;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = \"\" + (_this2.state.assets.length + 1);\n                qr = \"abcdef\";\n                name = _this2.state.nameValue.label;\n                description = _this2.state.discriptionValue;\n                owner = _this2.state.ownerValue;\n                type = _this2.state.assetType.label;\n                price = _this2.state.priceValue;\n                mgfDate = _this2.state.manufacDate;\n                expDate = _this2.state.expiryDate;\n                qty = _this2.state.qtyValue;\n                timestamp = Date.now();\n\n                _this2.handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp);\n\n                _this2.closeAssetPanel();\n\n                e.preventDefault();\n                _context4.next = 16;\n                return fetch('/add_asset', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', qr, '~', name, '~', description, '~', owner, '~', type, '~', price, '~', mgfDate, '~', expDate, '~', qty, '~', timestamp)\n                  })\n                });\n\n              case 16:\n                response = _context4.sent;\n                _context4.next = 19;\n                return response.text();\n\n              case 19:\n                body = _context4.sent;\n\n                _this2.setState({\n                  responseToPost: body\n                });\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this2.state = {};\n    _this2.state.activeTab = \"1\";\n    _this2.state.isAssetPaneOpen = false;\n    _this2.state.isDistributorPaneOpen = false;\n    _this2.state.response = \"\";\n    _this2.state.responseToPost = \"\";\n    _this2.state.post = \"\";\n    _this2.state.assets = [];\n    _this2.state.distributors = [];\n    _this2.state.transactions = []; /////////////////////////ASSET/////////////////////////\n\n    _this2.state.nameValue = null;\n    _this2.state.discriptionValue = \"\";\n    _this2.state.assetType = null;\n    _this2.state.priceValue = \"\";\n    _this2.state.manufacDate = \"\";\n    _this2.state.expiryDate = \"\";\n    _this2.state.qtyValue = \"\";\n    _this2.state.ownerValue = \"\"; ////////////////////////Distributor////////////////////\n\n    _this2.state.distNameValue = \"\";\n    _this2.state.distOwnerValue = \"\";\n    _this2.state.distAddressValue = \"\"; // this.state.errors={nameVal:'',priceVal:'',typeVal:'',qtyVal:''};\n    // this.state.nameValid=false;\n    // this.state.priceValid=false;\n    // this.state.qtyValid=false;\n    // this.state.typeValid=false;\n    // this.state.formValid=false;\n\n    _this2.handleInputChange = _this2.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.toggle = _this2.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(AdminPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.callGetAllAssets().then(function (res) {\n        return _this3.setState({\n          assets: _this3.flattenAssetData(res.express)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    }\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"flattenAssetData\",\n    //id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp\n    value: function flattenAssetData(assets_array) {\n      var temp_asset = [];\n\n      for (var i = 0; i < assets_array.length; i++) {\n        var temp = {};\n        temp['#'] = i + 1;\n        temp['Id'] = assets_array[i].Record.id;\n        temp['QRCode'] = assets_array[i].Record.qr;\n        temp['Name'] = assets_array[i].Record.name;\n        temp['Description'] = assets_array[i].Record.description;\n        temp['Owner'] = assets_array[i].Record.owner;\n        temp['AssetType'] = assets_array[i].Record.type;\n        temp['Price'] = assets_array[i].Record.price;\n        temp['ManufactureDate'] = assets_array[i].Record.manufactureDate;\n        temp['ExpiryDate'] = assets_array[i].Record.expiryDate;\n        temp['Quantity'] = assets_array[i].Record.quantity;\n        temp['Timestamp'] = assets_array[i].Record.timestamp;\n        temp_asset.push(temp);\n      }\n\n      return temp_asset;\n    } /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"validate\",\n    //,()=>{this.validate(name,value)}\n    value: function validate(name, value) {\n      var fieldErrors = this.state.errors;\n      var nameValid = this.state.nameValid;\n      var priceValid = this.state.priceValid;\n      var qtyValid = this.state.qtyValid;\n      var typeValid = this.state.typeValid;\n\n      switch (name) {\n        case 'nameValue':\n          nameValid = value.length > 0;\n          fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'priceValue':\n          priceValid = value.length > 0;\n          fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'typeValue':\n          typeValid = value.length > 0;\n          fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n          break;\n\n        case 'qtyValue':\n          qtyValid = value.length > 0;\n          fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n          break;\n      }\n\n      this.setState({\n        errors: fieldErrors,\n        nameValid: nameValid,\n        priceValid: priceValid,\n        typeValid: typeValid,\n        qtyValid: qtyValid\n      }, this.validateF);\n    }\n  }, {\n    key: \"validateF\",\n    value: function validateF() {\n      this.setState({\n        formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid\n      });\n    }\n  }, {\n    key: \"handleAddAsset\",\n    value: function handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp) {\n      var asset = {\n        '#': this.state.assets.length + 1,\n        'ID': id,\n        'QRCode': qr,\n        'Name': name,\n        'Description': description,\n        'Owner': owner,\n        'AssetType': type,\n        'Price': price,\n        'ManufactureDate': mgfDate,\n        'ExpiryDate': expDate,\n        'Quantity': qty,\n        'Timestamp': timestamp\n      };\n      this.state.assets.push(asset);\n      this.setState(this.state.assets);\n    }\n  }, {\n    key: \"render\",\n    //height='240' scrollTop={ 'Top' }\n    value: function render() {\n      var _React$createElement,\n          _React$createElement2,\n          _this4 = this;\n\n      var options = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.assets.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Super Admin Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(SlidingPane, {\n        closeIcon: React.createElement(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, \"[ X ]\"),\n        isOpen: this.state.isAssetPaneOpen,\n        title: \"Add User\",\n        from: \"right\",\n        width: \"400px\",\n        onRequestClose: this.closeAssetPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"User Type\",\n        options: userTypes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Company Name\",\n        value: this.state.nameValue,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), React.createElement(MDBInput, (_React$createElement = {\n        type: \"textarea\",\n        rows: \"2\",\n        label: \"Company Address\",\n        name: \"discriptionValue\"\n      }, _defineProperty(_React$createElement, \"type\", \"number\"), _defineProperty(_React$createElement, \"min\", \"1\"), _defineProperty(_React$createElement, \"value\", this.state.discriptionValue), _defineProperty(_React$createElement, \"onChange\", this.handleInputChange), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(MDBInput, {\n        label: \"License Number\",\n        name: \"priceValue\",\n        type: \"number\",\n        min: \"1\",\n        value: this.state.priceValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner Name\",\n        name: \"manufacDate\",\n        type: \"text\",\n        value: this.state.manufacDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Owner CNIC\",\n        name: \"expiryDate\",\n        type: \"text\",\n        value: this.state.expiryDate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(MDBInput, (_React$createElement2 = {\n        type: \"textarea\",\n        rows: \"2\",\n        label: \"Owner Address\",\n        name: \"qtyValue\"\n      }, _defineProperty(_React$createElement2, \"type\", \"text\"), _defineProperty(_React$createElement2, \"min\", \"1\"), _defineProperty(_React$createElement2, \"value\", this.state.qtyValue), _defineProperty(_React$createElement2, \"onChange\", this.handleInputChange), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2)), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Manufacturer\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Distributor\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Chemist\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this4.setState({\n            isAssetPaneOpen: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Add User\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: options,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Company Owner\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"Company Owner\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(Animation, {\n        type: \"fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Company Owner\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return AdminPanel;\n}(Component);\n\nexport default AdminPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/AdminPanel.js"],"names":["React","Component","Animation","MDBContainer","MDBDropdown","MDBDropdownMenu","MDBDropdownItem","MDBDropdownToggle","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","BSTable","props","closeTransactionPanel","setState","isTransactionPaneOpen","openTransactionPanel","getAllTransactions","then","res","transactions","express","catch","err","console","log","id","data","Id","fetch","response","json","body","status","Error","message","tranactionSubmit","e","assetId","distId","state","distID","preventDefault","method","headers","JSON","stringify","post","concat","text","responseToPost","handleInputChange","bind","event","target","value","name","maxWidth","width","wordwrap","QRCode","Description","AssetType","ManufactureDate","ExpiryDate","Timestamp","userTypes","label","AdminPanel","handleChange","selectedOption","nameValue","handleTypeChange","assetType","callGetAllAssets","closeAssetPanel","isAssetPaneOpen","discriptionValue","priceValue","manufacDate","expiryDate","qtyValue","ownerValue","handleSubmit","assets","length","qr","description","owner","type","price","mgfDate","expDate","qty","timestamp","Date","now","handleAddAsset","activeTab","isDistributorPaneOpen","distributors","distNameValue","distOwnerValue","distAddressValue","toggle","flattenAssetData","tab","row","assets_array","temp_asset","i","temp","Record","manufactureDate","quantity","push","fieldErrors","errors","nameValid","priceValid","qtyValid","typeValid","nameVal","priceVal","typeVal","qtyVal","validateF","formValid","asset","options","onlyOneExpanding","page","sizePerPageList","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition","color","active","isExpandableRow","expandComponent","delay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Animation, MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\nimport Select from 'react-select';\n\nclass BSTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.isTransactionPaneOpen=false;\n        this.state.distID=\"\";\n        this.state.responseToPost=\"\";\n        this.state.transactions = [];\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n\n    closeTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: false });\n    };\n\n    openTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: true });\n        this.getAllTransactions()\n        .then(res => this.setState({ transactions: res.express }))\n        .catch(err => console.log(err));\n    };\n\n    getAllTransactions = async () => {\n        var id=this.props.data.Id;\n        const response = await fetch('/get_asset_history/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    tranactionSubmit = async e => {\n        var assetId=this.props.data.Id;\n        var distId=this.state.distID;\n        e.preventDefault();\n        const response = await fetch('/change_owner', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: assetId.concat('~',distId) })\n        });\n\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <Animation  type=\"fadeIn\">\n                            <MDBCardHeader> User Details</MDBCardHeader>\n                            <MDBCardBody className=\"text-info\">\n                                <MDBRow className=\"justify-content-center\">\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\",wordwrap: \"break-word\"  }}>\n                                        <MDBListGroupItem color=\"primary\">ID: {this.props.data.Id}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Company Name: {this.props.data.QRCode}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Company Address:<br/> {this.props.data.Description}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">License Number: {this.props.data.AssetType}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\",wordwrap: \"break-word\" }}>\n                                        <MDBListGroupItem color=\"primary\">Owner Name: {this.props.data.ManufactureDate}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Owner CNIC: {this.props.data.ExpiryDate}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Owner Address:<br/> {this.props.data.Timestamp}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </Animation>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>User Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\nconst userTypes = [\n    { label: \"Manufacturer\", value: 1 },\n    { label: \"Distributor\", value: 2 },\n    { label: \"Chemist\", value: 3 },\n];\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.activeTab=\"1\";\n        this.state.isAssetPaneOpen=false;\n        this.state.isDistributorPaneOpen=false;\n        this.state.response=\"\";\n        this.state.responseToPost=\"\";\n        this.state.post=\"\";\n        this.state.assets = [];\n        this.state.distributors = [];\n        this.state.transactions = [];\n        /////////////////////////ASSET/////////////////////////\n        this.state.nameValue=null;\n        this.state.discriptionValue=\"\";\n        this.state.assetType=null;\n        this.state.priceValue=\"\";\n        this.state.manufacDate=\"\";\n        this.state.expiryDate=\"\";\n        this.state.qtyValue=\"\";\n        this.state.ownerValue=\"\";\n        ////////////////////////Distributor////////////////////\n        this.state.distNameValue=\"\";\n        this.state.distOwnerValue=\"\";\n        this.state.distAddressValue=\"\";\n\n        // this.state.errors={nameVal:'',priceVal:'',typeVal:'',qtyVal:''};\n        // this.state.nameValid=false;\n        // this.state.priceValid=false;\n        // this.state.qtyValid=false;\n        // this.state.typeValid=false;\n        // this.state.formValid=false;\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ nameValue: selectedOption });\n    }\n\n    handleTypeChange = (selectedOption) => {\n        this.setState({ assetType: selectedOption });\n    }\n\n    componentDidMount() {\n        this.callGetAllAssets()\n        .then(res => this.setState({ assets: this.flattenAssetData(res.express) }))\n        .catch(err => console.log(err));\n    }\n\n    callGetAllAssets = async () => {\n        const response = await fetch('/get_all_assets');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    expandComponent(row) {\n        return (\n            <BSTable data={ row } />\n        );\n    }\n\n    closeAssetPanel = () => {\n        this.setState({\n            isAssetPaneOpen: false,\n            nameValue:null,\n            discriptionValue:'',\n            assetType:null,\n            priceValue:'',\n            manufacDate:'',\n            expiryDate:'',\n            qtyValue:'',\n            ownerValue:'',\n            // errors:{nameVal:'',priceVal:'',typeVal:'',qtyVal:''},\n            // nameValid:false,\n            // priceValid:false,\n            // qtyValid:false,\n            // typeValid:false,\n            // formValid:false\n        });\n    };\n\n//id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp\n    flattenAssetData (assets_array) {\n        var temp_asset=[];\n        for(let i=0;i<assets_array.length;i++){\n            var temp={};\n            temp['#'] = i+1;\n            temp['Id'] = assets_array[i].Record.id;\n            temp['QRCode'] = assets_array[i].Record.qr;\n            temp['Name'] = assets_array[i].Record.name;\n            temp['Description'] = assets_array[i].Record.description;\n            temp['Owner'] = assets_array[i].Record.owner;\n            temp['AssetType'] = assets_array[i].Record.type;\n            temp['Price'] = assets_array[i].Record.price;\n            temp['ManufactureDate'] = assets_array[i].Record.manufactureDate;\n            temp['ExpiryDate'] = assets_array[i].Record.expiryDate;\n            temp['Quantity'] = assets_array[i].Record.quantity;\n            temp['Timestamp'] = assets_array[i].Record.timestamp;\n            temp_asset.push(temp);\n        }\n        return temp_asset;\n    }\n    /////////////////////////////////////////////////////////////\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n\n    validate(name,value){\n        var fieldErrors=this.state.errors;\n        var nameValid=this.state.nameValid;\n        var priceValid=this.state.priceValid;\n        var qtyValid=this.state.qtyValid;\n        var typeValid=this.state.typeValid;\n        switch(name){\n            case 'nameValue':\n                nameValid = value.length > 0;\n                fieldErrors.nameVal = nameValid ? '' : ' is Empty!!!';\n                break;\n            case 'priceValue':\n                priceValid = value.length > 0;\n                fieldErrors.priceVal = priceValid ? '' : ' is Empty!!!';\n                break;\n            case 'typeValue':\n                typeValid = value.length > 0;\n                fieldErrors.typeVal = typeValid ? '' : ' is Empty!!!';\n                break;\n            case 'qtyValue':\n                qtyValid = value.length > 0;\n                fieldErrors.qtyVal = qtyValid ? '' : ' is Empty!!!';\n                break;\n        }\n\n        this.setState({\n            errors: fieldErrors,\n            nameValid: nameValid,\n            priceValid: priceValid,\n            typeValid: typeValid,\n            qtyValid: qtyValid,\n            }, this.validateF);\n    }\n\n    validateF() {\n        this.setState({formValid: this.state.nameValid && this.state.priceValid && this.state.qtyValid && this.state.typeValid});\n    }\n\n    handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp) {\n        var asset = {\n            '#': (this.state.assets.length+1),\n            'ID': id,\n            'QRCode':qr,\n            'Name': name,\n            'Description': description,\n            'Owner':owner,\n            'AssetType':type,\n            'Price': price,\n            'ManufactureDate': mgfDate,\n            'ExpiryDate':expDate,\n            'Quantity': qty,\n            'Timestamp': timestamp,\n        }\n        this.state.assets.push(asset);\n        this.setState(this.state.assets);\n    };\n\n    //tasks.map((task) => task.name )\n\n    handleSubmit = async e => {\n        var id=\"\"+(this.state.assets.length+1);\n        var qr=\"abcdef\";\n        var name=this.state.nameValue.label;\n        var description=this.state.discriptionValue;\n        var owner=this.state.ownerValue;\n        var type=this.state.assetType.label;\n        var price=this.state.priceValue;\n        var mgfDate=this.state.manufacDate;\n        var expDate=this.state.expiryDate;\n        var qty=this.state.qtyValue;\n        var timestamp=Date.now();\n        this.handleAddAsset(id, qr, name, description, owner, type, price, mgfDate, expDate, qty, timestamp);\n        this.closeAssetPanel();\n        e.preventDefault();\n        const response = await fetch('/add_asset', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: id.concat('~',qr,'~',name,'~',description,'~',owner,'~',type,'~',price,'~',mgfDate,'~',expDate,'~',qty,'~',timestamp) })\n        });\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n    //height='240' scrollTop={ 'Top' }\n\n    render() {\n        const options = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.assets.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Super Admin Panel\"/>\n                {/* Add USer side pane */}\n                <SlidingPane closeIcon={<div style={{color:\"red\"}}>[ X ]</div>} isOpen={this.state.isAssetPaneOpen} title='Add User' from='right' width='400px' onRequestClose={this.closeAssetPanel}>\n                    <form onSubmit={this.handleSubmit}>\n                        <Select  placeholder=\"User Type\" options={userTypes}></Select>\n                        <MDBInput label=\"Company Name\" value={this.state.nameValue} onChange={this.handleChange}/>\n                        <MDBInput type=\"textarea\" rows=\"2\" label=\"Company Address\" name=\"discriptionValue\" type=\"number\" min=\"1\" value={this.state.discriptionValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"License Number\" name=\"priceValue\" type=\"number\" min=\"1\" value={this.state.priceValue} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner Name\"  name=\"manufacDate\" type=\"text\" value={this.state.manufacDate} onChange={this.handleInputChange}/>\n                        <MDBInput label=\"Owner CNIC\"  name=\"expiryDate\" type=\"text\" value={this.state.expiryDate} onChange={this.handleInputChange}/>\n                        <MDBInput type=\"textarea\" rows=\"2\" label=\"Owner Address\" name=\"qtyValue\" type=\"text\" min=\"1\" value={this.state.qtyValue} onChange={this.handleInputChange}/>\n                        <center><MDBBtn size=\"sm\" color=\"primary\" type=\"submit\" >Add</MDBBtn></center>\n                    </form>\n                </SlidingPane>\n\n                {/* Add Distributor side pane */}\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Manufacturer</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Distributor</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>Chemist</NavLink>\n                    </NavItem>\n                    <NavItem>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</NavItem>\n                    <NavItem>\n                    <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isAssetPaneOpen: true })} >Add User</MDBBtn>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.assets } version='4' hover condensed pagination options={ options }  expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                        <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='Name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='Owner' filter={{ type: 'TextFilter', delay: 100 }}>Company Owner</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.assets } version='4' hover condensed pagination options={ options }>\n                                        <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='Name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='Owner' filter={{ type: 'TextFilter', delay: 100 }}>Company Owner</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                    <TabPane tabId=\"3\">\n                        <Animation  type=\"fadeIn\">\n                            <Row>\n                                <Col sm={12}>\n                                    <BootstrapTable data={ this.state.assets } version='4' hover condensed pagination options={ options }>\n                                        <TableHeaderColumn isKey dataField='#'>No.</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='Name' filter={{ type: 'TextFilter', delay: 100 }}>Company Name</TableHeaderColumn>\n                                        <TableHeaderColumn dataField='Owner' filter={{ type: 'TextFilter', delay: 100 }}>Company Owner</TableHeaderColumn>\n                                    </BootstrapTable>\n                                    <br/><br/>\n                                </Col>\n                            </Row>\n                        </Animation>\n                    </TabPane>\n                </TabContent>\n\n\n            </MDBContainer>\n        );\n    }\n}\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}