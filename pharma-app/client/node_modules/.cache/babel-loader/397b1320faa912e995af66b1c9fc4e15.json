{"ast":null,"code":"import _defineProperty from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/DistributorPanel.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css'; //import update from 'react-addons-update';\n\nimport Select from 'react-select';\nimport QrReader from \"react-qr-scanner\";\n\nvar BSTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BSTable, _Component);\n\n  function BSTable(props) {\n    var _this;\n\n    _classCallCheck(this, BSTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BSTable).call(this, props));\n\n    _this.closeTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: false\n      });\n    };\n\n    _this.openTransactionPanel = function () {\n      _this.setState({\n        isTransactionPaneOpen: true\n      });\n\n      _this.getAllTransactions().then(function (res) {\n        return _this.setState({\n          transactions: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllTransactions =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _this.props.data.id;\n              _context.next = 3;\n              return fetch('/get_asset_history/' + id);\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.tranactionSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var id, chemId, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = _this.props.data.id;\n                chemId = _this.state.chemID;\n                e.preventDefault();\n                _context2.next = 5;\n                return fetch('/change_owner', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: id.concat('~', chemId)\n                  })\n                });\n\n              case 5:\n                response = _context2.sent;\n                _context2.next = 8;\n                return response.text();\n\n              case 8:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {};\n    _this.state.isTransactionPaneOpen = false;\n    _this.state.chemID = \"\";\n    _this.state.responseToPost = \"\";\n    _this.state.transactions = [];\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BSTable, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(SlidingPane, {\n          isOpen: this.state.isTransactionPaneOpen,\n          title: \"Transactions History\",\n          closeIcon: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"[ X ]\"),\n          from: \"left\",\n          width: \"400px\",\n          onRequestClose: this.closeTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, this.state.transactions.map(function (transaction) {\n          return React.createElement(MDBCard, {\n            border: \"info\",\n            className: \"m-3\",\n            style: {\n              width: \"20rem\"\n            },\n            key: transaction.txid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(MDBCardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \" Transaction Details\"), React.createElement(MDBCardBody, {\n            className: \"text-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(MDBRow, {\n            className: \"justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(MDBListGroup, {\n            className: \"my-4 mx-4\",\n            style: {\n              width: \"18rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \"ID: \", transaction.txid), React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"Asset ID: \", transaction.asset.id), React.createElement(MDBListGroupItem, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Asset Owner: \", transaction.asset.owner)))));\n        })), React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \" Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"ID: \", this.props.data.id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"QRCode: \", this.props.data.qr), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Description: \", this.props.data.description), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Type: \", this.props.data.type)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"20rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Mfg Date: \", this.props.data.manufactureDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"ExpiryDate: \", this.props.data.expiryDate), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Timestamp: \", this.props.data.timestamp), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Price: \", this.props.data.price))), React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          size: \"sm\",\n          color: \"primary\",\n          onClick: this.openTransactionPanel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Show Details\")))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Asset Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTable;\n}(Component);\n\nvar BSTableChem =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(BSTableChem, _Component2);\n\n  function BSTableChem() {\n    _classCallCheck(this, BSTableChem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTableChem).apply(this, arguments));\n  }\n\n  _createClass(BSTableChem, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.data) {\n        return React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \" User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"ID: \", this.props.data.id), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Company Address: \", this.props.data.address)), React.createElement(MDBListGroup, {\n          className: \"my-4 mx-4\",\n          style: {\n            width: \"25rem\",\n            wordwrap: \"break-word\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Owner Name: \", this.props.data.ownername), React.createElement(MDBListGroupItem, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"License Number: \", this.props.data.license))))));\n      } else {\n        return React.createElement(MDBCard, {\n          border: \"info\",\n          className: \"m-3\",\n          style: {\n            maxWidth: \"70rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"User Details\"), React.createElement(MDBCardBody, {\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"Details not found!!!\"))));\n      }\n    }\n  }]);\n\n  return BSTableChem;\n}(Component); ///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\n\nvar DistributorPanel =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(DistributorPanel, _Component3);\n\n  function DistributorPanel(props) {\n    var _this2;\n\n    _classCallCheck(this, DistributorPanel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DistributorPanel).call(this, props));\n\n    _this2.handleScan = function (data) {\n      console.log(data);\n      var found = false;\n\n      if (data) {\n        for (var i = 0; i < _this2.state.user.assets.length; i++) {\n          if (data == _this2.state.user.assets[i].id) {\n            for (var k = 0; k < _this2.state.QrResultArray.length; k++) {\n              if (data == _this2.state.QrResultArray[k].id) {\n                document.getElementById(\"itemAlreadyExist\").style.display = 'block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                return;\n              }\n            }\n\n            found = true;\n            document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n\n            _this2.setState({\n              QrResult: data\n            });\n\n            var temp = JSON.parse(JSON.stringify(_this2.state.user.assets[i]));\n            temp.index = _this2.state.QrResultArray.length + 1;\n\n            _this2.state.QrResultArray.push(temp);\n\n            _this2.setState(_this2.state.QrResultArray);\n\n            document.getElementById(\"itemNotFound\").style.display = 'none';\n\n            _this2.setState({\n              totalPrice: _this2.state.totalPrice + temp.price\n            });\n\n            return;\n          }\n        }\n\n        if (found == false) {\n          document.getElementById(\"itemNotFound\").style.display = 'block';\n          document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n        }\n      }\n    };\n\n    _this2.tranactionSubmitAll =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var i, assetId, chemId, response, body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < _this2.state.QrResultArray.length)) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                assetId = _this2.state.QrResultArray[i].id;\n                chemId = _this2.state.chemId2;\n                e.preventDefault();\n                _context3.next = 7;\n                return fetch('/change_owner', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: assetId.concat('~', chemId)\n                  })\n                });\n\n              case 7:\n                response = _context3.sent;\n                _context3.next = 10;\n                return response.json();\n\n              case 10:\n                body = _context3.sent;\n\n                if (!(body.express.status === -1)) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                console.log(\"error while transaction\");\n                document.getElementById(\"transactionSuccess\").style.display = 'block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n                return _context3.abrupt(\"break\", 27);\n\n              case 19:\n                _this2.setState({\n                  responseToPost2: body\n                });\n\n                console.log(\"transaction SUCCESS\");\n                document.getElementById(\"transactionFailure\").style.display = 'block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n\n              case 24:\n                i++;\n                _context3.next = 1;\n                break;\n\n              case 27:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this2.handleError = function (err) {\n      console.error(err);\n    };\n\n    _this2.redirectUser = function (path) {\n      _this2.props.history.push(path);\n    };\n\n    _this2.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = null;\n\n              if (sessionStorage.getItem(\"user\")) {\n                id = sessionStorage.getItem(\"user\");\n              }\n\n              _context4.next = 4;\n              return fetch('/get_user/' + id);\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 7;\n              return response.json();\n\n            case 7:\n              body = _context4.sent;\n\n              if (!(response.status !== 200)) {\n                _context4.next = 10;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 10:\n              return _context4.abrupt(\"return\", body);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this2.callGetAllAssets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch('/get_all_assets');\n\n            case 2:\n              response = _context5.sent;\n              _context5.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context5.sent;\n\n              if (!(response.status !== 200)) {\n                _context5.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context5.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this2.enrollChemist =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(e) {\n        var chemId, distId, response, body;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                chemId = _this2.state.chemId;\n                distId = _this2.state.userID;\n                e.preventDefault();\n                _context6.next = 5;\n                return fetch('/enroll_chemist', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: distId.concat('~', chemId)\n                  })\n                });\n\n              case 5:\n                response = _context6.sent;\n                _context6.next = 8;\n                return response.json();\n\n              case 8:\n                body = _context6.sent;\n\n                if (body.express.status === 1) {\n                  _this2.getDist().then(function (res) {\n                    return _this2.setState({\n                      chem: res.express\n                    });\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                } else {\n                  console.log(\"transaction error\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this2.getDist =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var id, response, body;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              id = _this2.state.chemId;\n              _context7.next = 3;\n              return fetch('/get_user/' + id);\n\n            case 3:\n              response = _context7.sent;\n              _context7.next = 6;\n              return response.json();\n\n            case 6:\n              body = _context7.sent;\n\n              if (!(response.status !== 200)) {\n                _context7.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              //var express = body.express;\n              // this.state.user.chemists.push(express);\n              // this.setState(this.state.user);\n              console.log(body.express);\n\n              _this2.state.user.chemists.push(body.express);\n\n              _this2.setState(_this2.state.user);\n\n              return _context7.abrupt(\"return\", body);\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    _this2.state = {};\n    _this2.state.activeTab = \"1\";\n    _this2.state.isAssetPaneOpen = false;\n    _this2.state.isChemistPaneOpen = false;\n    _this2.state.response = \"\";\n    _this2.state.responseToPost = \"\";\n    _this2.state.responseToPost2 = {};\n    _this2.state.post = \"\";\n    _this2.state.userID = \"\"; //////////////////////////////USER/////////////////////\n\n    _this2.state.user = {};\n    _this2.state.user.address = \"\";\n    _this2.state.user.id = \"\";\n    _this2.state.user.license = \"\";\n    _this2.state.user.name = \"\";\n    _this2.state.user.owneraddress = \"\";\n    _this2.state.user.ownercnic = \"\";\n    _this2.state.user.ownername = \"\";\n    _this2.state.user.password = \"\";\n    _this2.state.user.assets = [];\n    _this2.state.user.chemists = []; ////////////////////////Chemist////////////////////\n\n    _this2.state.chemId = \"\";\n    _this2.state.chemId2 = \"\";\n    _this2.state.chem = {};\n    _this2.state.chem.address = \"\";\n    _this2.state.chem.assets = [];\n    _this2.state.chem.chemists = [];\n    _this2.state.chem.id = \"\";\n    _this2.state.chem.license = \"\";\n    _this2.state.chem.name = \"\";\n    _this2.state.chem.owneraddress = \"\";\n    _this2.state.chem.ownercnic = \"\";\n    _this2.state.chem.ownername = \"\";\n    _this2.state.chem.password = \"\"; /////////////////////////QR//////////////////////\n\n    _this2.state.QrResultArray = [];\n    _this2.state.qrbatch = '';\n    _this2.state.qrcarton = '';\n    _this2.state.qrnop = '';\n    _this2.state.qrqip = '';\n    _this2.state.distId2 = '';\n    _this2.state.QrResult = '';\n    _this2.state.qrlist = [];\n    _this2.state.totalPrice = 0; /////////////////////////Bind Functions////////////////\n\n    _this2.handleInputChange = _this2.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.toggle = _this2.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(DistributorPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var user = null;\n\n      if (sessionStorage.getItem(\"user\")) {\n        user = sessionStorage.getItem(\"user\");\n\n        if (user.substring(0, 5) === \"admin\") {\n          this.redirectUser('/login/admin');\n        } else if (user.substring(0, 4) === \"manu\") {\n          this.redirectUser('/login/manufac');\n        } else if (user.substring(0, 4) === \"chem\") {\n          this.redirectUser('/login/chem');\n        } else {\n          this.setState({\n            userID: user\n          });\n        }\n      } else {\n        this.redirectUser('/');\n      } // this.callGetAllAssets()\n      // .then(res => this.setState({ assets: this.flattenAssetData(res.express) }))\n      // .catch(err => console.log(err));\n\n\n      this.getUser().then(function (res) {\n        return _this3.setState({\n          user: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      return true;\n    } // updateOwner(id,name){\n    //     this.setState({\n    //         assets: update(this.state.assets, {id: {Owner: {$set: name}}})\n    //     })\n    // }\n    //() => this.setState({ isPaneOpenLeft: false })\n\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      //console.log(this.updateOwner);\n      return React.createElement(BSTable, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"expandComponentDist\",\n    value: function expandComponentDist(row) {\n      return React.createElement(BSTableChem, {\n        data: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"isPositiveInteger\",\n    // ,()=>{this.validate(name,value)}\n    //disabled={!this.state.formValid}\n    value: function isPositiveInteger(n) {\n      return parseFloat(n) === n >>> 0;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(name, value) {\n      var fieldErrors = this.state.assetFormErrors;\n      var length = null;\n\n      switch (name) {\n        case 'discriptionValue':\n          fieldErrors.discVal = value.length > 10 ? true : false;\n          this.setState({\n            discValid: fieldErrors.discVal\n          });\n          break;\n\n        case 'priceValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.priceVal = length && this.isPositiveInteger(value);\n          this.setState({\n            priceValid: fieldErrors.priceVal\n          });\n          break;\n\n        case 'manufacDate':\n          fieldErrors.mgfVal = value.length > 0 ? true : false;\n          this.setState({\n            mgfValid: fieldErrors.mgfVal\n          });\n          break;\n\n        case 'expiryDate':\n          fieldErrors.expVal = value.length > 0 ? true : false;\n          this.setState({\n            expValid: fieldErrors.expVal\n          });\n          break;\n\n        case 'qtyValue':\n          length = value.length > 0 ? true : false;\n          fieldErrors.qtyVal = length && this.isPositiveInteger(value);\n          this.setState({\n            qtyValid: fieldErrors.qtyVal\n          });\n          break;\n\n        default:\n          console.log(\"Invalid Feild\");\n      }\n\n      this.setState({\n        errors: fieldErrors,\n        discValid: fieldErrors.discVal,\n        priceValid: fieldErrors.priceVal,\n        mgfValid: fieldErrors.mgfVal,\n        expValid: fieldErrors.expVal,\n        qtyValid: fieldErrors.qtyVal\n      }, this.validateAssetForm());\n    }\n  }, {\n    key: \"validateAssetForm\",\n    value: function validateAssetForm() {\n      console.log(\"validate asset form\");\n      this.setState({\n        assetFormValid: this.state.nameValid && this.state.discValid && this.state.typeValid && this.state.priceValid && this.state.mgfValid && this.state.expValid && this.state.qtyValid\n      });\n    } //tasks.map((task) => task.name )\n\n  }, {\n    key: \"render\",\n    //height='240' scrollTop={ 'Top' }\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n    value: function render() {\n      var _this4 = this;\n\n      var assetOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.user.assets.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      var chemOptions = {\n        onlyOneExpanding: true,\n        page: 1,\n        sizePerPageList: [{\n          text: '10',\n          value: 10\n        }, {\n          text: '20',\n          value: 20\n        }, {\n          text: '50',\n          value: 50\n        }, {\n          text: 'All',\n          value: this.state.user.chemists.length\n        }],\n        sizePerPage: 10,\n        pageStartIndex: 1,\n        paginationSize: 3,\n        prePage: 'Prev',\n        nextPage: 'Next',\n        firstPage: 'First',\n        lastPage: 'Last',\n        paginationPosition: 'top'\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(PanelHeading, {\n        title: \"Distributor Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }), React.createElement(Nav, {\n        tabs: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, \"Asset\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, \"Chemist\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, \"Transaction\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.user.assets,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: assetOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, \"Asset Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"owner\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \"Quantity\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"dropright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"btn btn-primary btn-sm dropdown-toggle\",\n        type: \"button\",\n        id: \"dropdownMenu2\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, \"Add Chemist\"), React.createElement(\"form\", {\n        class: \"dropdown-menu p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Name *\",\n        name: \"chemId\",\n        type: \"text\",\n        value: this.state.chemId,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.enrollChemist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"Enroll\"))), React.createElement(BootstrapTable, {\n        data: this.state.user.chemists,\n        version: \"4\",\n        hover: true,\n        condensed: true,\n        pagination: true,\n        options: chemOptions,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponentDist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"No.\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Chemist Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"owneraddress\",\n        filter: {\n          type: 'TextFilter',\n          delay: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ownercnic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"Owner CNIC\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Chemist ID\",\n        icon: \"user\",\n        name: \"chemId2\",\n        value: this.state.chemId2,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \"Scanner:\"), React.createElement(QrReader, {\n        delay: 500,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"220px\",\n          border: \"2px solid red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \"Scanned code:   \", this.state.QrResult), React.createElement(\"label\", {\n        id: \"itemNotFound\",\n        style: {\n          color: \"red\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Item not found\"), React.createElement(\"label\", {\n        id: \"itemAlreadyExist\",\n        style: {\n          color: \"red\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"Item already scanned\"), React.createElement(\"label\", {\n        id: \"transactionSuccess\",\n        style: {\n          color: \"green\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, \"Asset(s) Transacted Successfully\"), React.createElement(\"label\", {\n        id: \"transactionFailure\",\n        style: {\n          color: \"red\",\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, \"Transaction Failed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.QrResultArray,\n        version: \"4\",\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"#\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Asset Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, \"Price\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"blue\",\n        size: \"sm\",\n        onClick: this.tranactionSubmitAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Transact\")), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, \"Total Price: \", this.state.totalPrice))))));\n    }\n  }]);\n\n  return DistributorPanel;\n}(Component);\n\nexport default DistributorPanel;","map":{"version":3,"sources":["/home/hyperubuntu/Desktop/fabric-material/pharma-app/client/src/pages/DistributorPanel.js"],"names":["React","Component","MDBContainer","MDBDropdown","MDBDropdownMenu","MDBDropdownItem","MDBDropdownToggle","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBCardText","MDBListGroup","MDBListGroupItem","MDBRow","BootstrapTable","TableHeaderColumn","classnames","PanelHeading","Row","Col","TabContent","TabPane","Nav","NavItem","NavLink","SlidingPane","Select","QrReader","BSTable","props","closeTransactionPanel","setState","isTransactionPaneOpen","openTransactionPanel","getAllTransactions","then","res","transactions","express","catch","err","console","log","id","data","fetch","response","json","body","status","Error","message","tranactionSubmit","e","chemId","state","chemID","preventDefault","method","headers","JSON","stringify","post","concat","text","responseToPost","handleInputChange","bind","event","target","value","name","map","transaction","width","txid","asset","owner","maxWidth","qr","description","type","manufactureDate","expiryDate","timestamp","price","BSTableChem","wordwrap","address","ownername","license","DistributorPanel","handleScan","found","i","user","assets","length","k","QrResultArray","document","getElementById","style","display","QrResult","temp","parse","index","push","totalPrice","tranactionSubmitAll","assetId","chemId2","responseToPost2","handleError","error","redirectUser","path","history","getUser","sessionStorage","getItem","callGetAllAssets","enrollChemist","distId","userID","getDist","chem","chemists","activeTab","isAssetPaneOpen","isChemistPaneOpen","owneraddress","ownercnic","password","qrbatch","qrcarton","qrnop","qrqip","distId2","qrlist","toggle","substring","tab","row","n","parseFloat","fieldErrors","assetFormErrors","discVal","discValid","priceVal","isPositiveInteger","priceValid","mgfVal","mgfValid","expVal","expValid","qtyVal","qtyValid","errors","validateAssetForm","assetFormValid","nameValid","typeValid","assetOptions","onlyOneExpanding","page","sizePerPageList","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition","chemOptions","active","isExpandableRow","expandComponent","delay","expandComponentDist","border","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBDropdown, MDBDropdownMenu, MDBDropdownItem, MDBDropdownToggle, MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBCardText, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport classnames from 'classnames';\nimport PanelHeading from \"../components/PanelHeading\";\nimport { Row, Col } from 'react-bootstrap'\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\nimport 'react-sliding-pane/dist/react-sliding-pane.css';\n//import update from 'react-addons-update';\nimport Select from 'react-select';\nimport QrReader from \"react-qr-scanner\";\n\nclass BSTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state={};\n        this.state.isTransactionPaneOpen=false;\n        this.state.chemID=\"\";\n        this.state.responseToPost=\"\";\n        this.state.transactions = [];\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n    //,()=>{this.validate(name,value)}\n    // test=()=>{\n    //     this.props.onChangeOwner(1,\"ahmad\");\n    // }\n\n    closeTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: false });\n    };\n\n    openTransactionPanel = () => {\n        this.setState({ isTransactionPaneOpen: true });\n        this.getAllTransactions()\n        .then(res => this.setState({ transactions: res.express }))\n        .catch(err => console.log(err));\n    };\n\n    getAllTransactions = async () => {\n        var id=this.props.data.id;\n        const response = await fetch('/get_asset_history/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    tranactionSubmit = async e => {\n        var id=this.props.data.id;\n        var chemId=this.state.chemID;\n        e.preventDefault();\n        const response = await fetch('/change_owner', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: id.concat('~',chemId) })\n        });\n\n        const body = await response.text();\n        this.setState({ responseToPost: body });\n    };\n\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    {/* Show Transactions side pane */}\n\n                    <SlidingPane isOpen={this.state.isTransactionPaneOpen} title='Transactions History' closeIcon={<div>[ X ]</div>} from='left' width='400px' onRequestClose={this.closeTransactionPanel}>\n\n                            {/* Iterates */}\n                            {this.state.transactions.map(function(transaction){\n                                return(\n                                    <MDBCard border=\"info\" className=\"m-3\" style={{ width: \"20rem\" }} key={ transaction.txid }>\n                                        <MDBCardHeader> Transaction Details</MDBCardHeader>\n                                        <MDBCardBody className=\"text-info\">\n                                            <MDBRow className=\"justify-content-center\">\n                                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"18rem\" }}>\n                                                    <MDBListGroupItem color=\"primary\">ID: {transaction.txid}</MDBListGroupItem>\n                                                    <MDBListGroupItem color=\"primary\">Asset ID: {transaction.asset.id}</MDBListGroupItem>\n                                                    <MDBListGroupItem color=\"primary\">Asset Owner: {transaction.asset.owner}</MDBListGroupItem>\n                                                </MDBListGroup>\n                                            </MDBRow>\n                                        </MDBCardBody>\n                                    </MDBCard>\n                                );\n                            })}\n                            {/* Iterates */}\n                    </SlidingPane>\n\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                        <MDBCardHeader> Asset Details</MDBCardHeader>\n                        <MDBCardBody className=\"text-info\">\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">ID: {this.props.data.id}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">QRCode: {this.props.data.qr}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Description: {this.props.data.description}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Type: {this.props.data.type}</MDBListGroupItem>\n                                </MDBListGroup>\n                                <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"20rem\" }}>\n                                    <MDBListGroupItem color=\"primary\">Mfg Date: {this.props.data.manufactureDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">ExpiryDate: {this.props.data.expiryDate}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Timestamp: {this.props.data.timestamp}</MDBListGroupItem>\n                                    <MDBListGroupItem color=\"primary\">Price: {this.props.data.price}</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBRow>\n                            <MDBRow className=\"justify-content-center\">\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={this.openTransactionPanel}>Show Details</MDBBtn>\n                                {/* <MDBBtn size=\"sm\" color=\"primary\">Transact Asset</MDBBtn>\n                                <MDBDropdown dropup size=\"sm\">\n                                    <MDBDropdownToggle caret color=\"primary\">Transact Asset</MDBDropdownToggle>\n                                    <MDBDropdownMenu basic>\n                                        <div>\n                                            <form onSubmit={this.tranactionSubmit}>\n                                                <MDBInput label=\"Chemist ID *\" name=\"chemID\" type=\"text\" value={this.state.chemID} onChange={this.handleInputChange}/>\n                                                <MDBBtn size=\"sm\" color=\"primary\" type=\"submit\">Transact</MDBBtn>\n                                            </form>\n                                        </div>\n                                    </MDBDropdownMenu>\n                                </MDBDropdown>\n                                */}\n                            </MDBRow>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>Asset Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\nclass BSTableChem extends Component {\n    render() {\n        if (this.props.data) {\n            return (\n                <MDBContainer>\n                    <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n\n                            <MDBCardHeader> User Details</MDBCardHeader>\n                            <MDBCardBody className=\"text-info\">\n                                <MDBRow className=\"justify-content-center\">\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\",wordwrap: \"break-word\"  }}>\n                                        <MDBListGroupItem color=\"primary\">ID: {this.props.data.id}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">Company Address: {this.props.data.address}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                    <MDBListGroup className=\"my-4 mx-4\" style={{ width: \"25rem\",wordwrap: \"break-word\" }}>\n                                        <MDBListGroupItem color=\"primary\">Owner Name: {this.props.data.ownername}</MDBListGroupItem>\n                                        <MDBListGroupItem color=\"primary\">License Number: {this.props.data.license}</MDBListGroupItem>\n                                    </MDBListGroup>\n                                </MDBRow>\n                            </MDBCardBody>\n\n                    </MDBCard>\n                </MDBContainer>\n            );\n        } else {\n            return (\n                <MDBCard border=\"info\" className=\"m-3\" style={{ maxWidth: \"70rem\" }}>\n                    <MDBCardHeader>User Details</MDBCardHeader>\n                    <MDBCardBody className=\"text-info\">\n                        <center><MDBCardText>Details not found!!!</MDBCardText></center>\n                    </MDBCardBody>\n                </MDBCard>\n            );\n        }\n    }\n}\n\n///////////////////////////////ASSET//////////////////////\n// ID string `json:\"id\"`\n// QRCode string `json:\"qr\"`\n// Name string `json:\"name\"` done\n// Description string `json:\"description\"` done\n// AssetType string `json:\"type\"` done\n// Price float32 `json:\"price\"` done\n// ManufactureDate string `json:\"manufactureDate\" done`\n// ExpiryDate string `json:\"expiryDate\"` done\n// Quantity int `json:\"quantity\"` done\n// Timestamp uint64 `json:\"timestamp\"` done\n// Owner  string `json:\"owner\"`  done\n\nclass DistributorPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.state.activeTab = \"1\";\n        this.state.isAssetPaneOpen = false;\n        this.state.isChemistPaneOpen = false;\n        this.state.response = \"\";\n        this.state.responseToPost = \"\";\n        this.state.responseToPost2 = {};\n        this.state.post = \"\";\n\n        this.state.userID = \"\";\n        //////////////////////////////USER/////////////////////\n        this.state.user = {};\n        this.state.user.address=\"\";\n        this.state.user.id=\"\";\n        this.state.user.license=\"\";\n        this.state.user.name=\"\";\n        this.state.user.owneraddress=\"\";\n        this.state.user.ownercnic=\"\";\n        this.state.user.ownername=\"\";\n        this.state.user.password=\"\";\n        this.state.user.assets=[];\n        this.state.user.chemists=[];\n\n        ////////////////////////Chemist////////////////////\n        this.state.chemId = \"\";\n        this.state.chemId2 = \"\";\n        this.state.chem = {};\n        this.state.chem.address=\"\";\n        this.state.chem.assets=[];\n        this.state.chem.chemists=[];\n        this.state.chem.id=\"\";\n        this.state.chem.license=\"\";\n        this.state.chem.name=\"\";\n        this.state.chem.owneraddress=\"\";\n        this.state.chem.ownercnic=\"\";\n        this.state.chem.ownername=\"\";\n        this.state.chem.password=\"\";\n        /////////////////////////QR//////////////////////\n        this.state.QrResultArray=[];\n        this.state.qrbatch='';\n        this.state.qrcarton='';\n        this.state.qrnop='';\n        this.state.qrqip='';\n        this.state.distId2='';\n        this.state.QrResult='';\n        this.state.qrlist=[];\n        this.state.totalPrice=0;\n        /////////////////////////Bind Functions////////////////\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    handleScan = (data) => {\n        console.log(data);\n        var found = false;\n        if (data) {\n            for (var i = 0; i < this.state.user.assets.length; i++) {\n                if (data == this.state.user.assets[i].id) {\n                    for (var k = 0; k < this.state.QrResultArray.length; k++) {\n                        if (data == this.state.QrResultArray[k].id) {\n                            document.getElementById(\"itemAlreadyExist\").style.display = 'block';\n                            document.getElementById(\"itemNotFound\").style.display = 'none';\n                            return;\n                        }\n                    }\n                    found = true;\n                    document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n                    this.setState({ QrResult: data });\n                    var temp = JSON.parse(JSON.stringify(this.state.user.assets[i]));\n                    temp.index = this.state.QrResultArray.length + 1;\n                    this.state.QrResultArray.push(temp);\n                    this.setState(this.state.QrResultArray);\n                    document.getElementById(\"itemNotFound\").style.display = 'none';\n                    this.setState({ totalPrice: this.state.totalPrice + temp.price });\n                    return;\n                }\n            }\n            if (found == false) {\n                document.getElementById(\"itemNotFound\").style.display = 'block';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n            }\n        }\n    }\n\n    tranactionSubmitAll = async e => {\n        for(var i=0;i<this.state.QrResultArray.length;i++){\n            var assetId=this.state.QrResultArray[i].id;\n            var chemId=this.state.chemId2;\n            e.preventDefault();\n            const response = await fetch('/change_owner', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ post: assetId.concat('~',chemId) })\n            });\n\n            const body = await response.json();\n            if(body.express.status===-1){\n                console.log(\"error while transaction\");\n                document.getElementById(\"transactionSuccess\").style.display='block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n                break;\n            }else{\n                this.setState({ responseToPost2: body });\n                console.log(\"transaction SUCCESS\");\n                document.getElementById(\"transactionFailure\").style.display='block';\n                document.getElementById(\"itemNotFound\").style.display = 'none';\n                document.getElementById(\"itemAlreadyExist\").style.display = 'none';\n            }\n        }\n    };\n\n    handleError=(err)=> {\n        console.error(err);\n    }\n\n    redirectUser = (path) => {\n        this.props.history.push(path);\n    }\n\n    componentDidMount() {\n        var user = null;\n        if(sessionStorage.getItem(\"user\")){\n            user = sessionStorage.getItem(\"user\");\n            if(user.substring(0,5)===\"admin\"){\n                this.redirectUser('/login/admin');\n            }else if(user.substring(0,4)===\"manu\"){\n                this.redirectUser('/login/manufac');\n            }else if(user.substring(0,4)===\"chem\"){\n                this.redirectUser('/login/chem');\n            }else{\n                this.setState({userID:user});\n            }\n        }else{\n            this.redirectUser('/');\n        }\n        // this.callGetAllAssets()\n        // .then(res => this.setState({ assets: this.flattenAssetData(res.express) }))\n        // .catch(err => console.log(err));\n        this.getUser()\n        .then(res => this.setState({ user: res.express }))\n        .catch(err => console.log(err));\n    }\n\n    getUser = async () => {\n        var id = null;\n        if(sessionStorage.getItem(\"user\")){\n            id = sessionStorage.getItem(\"user\");\n        }\n        const response = await fetch('/get_user/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    callGetAllAssets = async () => {\n        const response = await fetch('/get_all_assets');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    isExpandableRow(row) {\n        return true;\n    }\n\n    // updateOwner(id,name){\n    //     this.setState({\n    //         assets: update(this.state.assets, {id: {Owner: {$set: name}}})\n    //     })\n    // }\n\n    //() => this.setState({ isPaneOpenLeft: false })\n    expandComponent(row) {\n        //console.log(this.updateOwner);\n        return (\n            <BSTable data={ row }/>\n        );\n    }\n\n    expandComponentDist(row) {\n        return (\n            <BSTableChem data={ row }/>\n        );\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    // ,()=>{this.validate(name,value)}\n    //disabled={!this.state.formValid}\n\n    isPositiveInteger(n) {\n        return parseFloat(n) === n >>> 0;\n    }\n\n    validate(name,value){\n        var fieldErrors=this.state.assetFormErrors;\n        var length=null;\n        switch(name){\n            case 'discriptionValue':\n                fieldErrors.discVal = value.length > 10 ? true : false;\n                this.setState({ discValid:fieldErrors.discVal });\n                break;\n            case 'priceValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.priceVal = length && this.isPositiveInteger(value);\n                this.setState({ priceValid:fieldErrors.priceVal });\n                break;\n            case 'manufacDate':\n                fieldErrors.mgfVal = value.length > 0 ? true : false;\n                this.setState({ mgfValid:fieldErrors.mgfVal });\n                break;\n            case 'expiryDate':\n                fieldErrors.expVal = value.length > 0 ? true : false;\n                this.setState({ expValid:fieldErrors.expVal });\n                break;\n            case 'qtyValue':\n                length = value.length > 0 ? true : false;\n                fieldErrors.qtyVal = length && this.isPositiveInteger(value);\n                this.setState({ qtyValid:fieldErrors.qtyVal });\n                break;\n            default:\n                console.log(\"Invalid Feild\");\n        }\n\n        this.setState({\n            errors: fieldErrors,\n            discValid:fieldErrors.discVal,\n            priceValid:fieldErrors.priceVal,\n            mgfValid:fieldErrors.mgfVal,\n            expValid:fieldErrors.expVal,\n            qtyValid:fieldErrors.qtyVal,\n        }, this.validateAssetForm());\n    }\n\n    validateAssetForm() {\n        console.log(\"validate asset form\");\n        this.setState({assetFormValid: this.state.nameValid && this.state.discValid && this.state.typeValid && this.state.priceValid && this.state.mgfValid && this.state.expValid && this.state.qtyValid });\n    }\n\n    //tasks.map((task) => task.name )\n\n    enrollChemist = async e => {\n        var chemId=this.state.chemId;\n        var distId=this.state.userID;\n        e.preventDefault();\n        const response = await fetch('/enroll_chemist', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ post: distId.concat('~',chemId) })\n        });\n        const body = await response.json();\n        if(body.express.status===1){\n            this.getDist()\n            .then(res => this.setState({ chem: res.express }))\n            .catch(err => console.log(err));\n        }else{\n            console.log(\"transaction error\");\n        }\n    }\n\n    getDist = async () => {\n        var id = this.state.chemId;\n        const response = await fetch('/get_user/'+id);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        //var express = body.express;\n        // this.state.user.chemists.push(express);\n        // this.setState(this.state.user);\n        console.log(body.express);\n        this.state.user.chemists.push(body.express);\n        this.setState(this.state.user);\n        return body;\n    };\n\n    //height='240' scrollTop={ 'Top' }\n    // this.setState({\n    //     items: update(this.state.items, {1: {name: {$set: 'updated field name'}}})\n    // })\n\n    render() {\n        const assetOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.assets.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        const chemOptions = {\n            onlyOneExpanding: true,\n            page:1, sizePerPageList: [ { text: '10', value: 10 }, { text: '20', value: 20 }, { text: '50', value: 50 }, { text: 'All', value: this.state.user.chemists.length } ],\n            sizePerPage: 10, pageStartIndex: 1, paginationSize: 3, prePage: 'Prev', nextPage: 'Next', firstPage: 'First', lastPage: 'Last', paginationPosition: 'top'\n        }\n\n        return (\n            <MDBContainer>\n                <PanelHeading title=\"Distributor Panel\"/>\n\n                <Nav tabs pills>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => { this.toggle('1'); }}>Asset</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => { this.toggle('2'); }}>Chemist</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '3' })} onClick={() => { this.toggle('3'); }}>Transaction</NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm={12}>\n                            {/*\n                                <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isAssetPaneOpen: true })} >Add Asset</MDBBtn>\n                            */}\n                                <BootstrapTable data={ this.state.user.assets } version='4' hover condensed pagination options={ assetOptions }  expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponent } >\n                                    <TableHeaderColumn isKey dataField='index'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='owner' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='quantity' >Quantity</TableHeaderColumn>\n                                </BootstrapTable>\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm={12}>\n                                <div class=\"dropright\">\n                                    <button class=\"btn btn-primary btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Add Chemist</button>\n\n                                    <form class=\"dropdown-menu p-4\">\n                                        <div class=\"form-group\">\n                                            <MDBInput label=\"Name *\" name=\"chemId\" type=\"text\" value={this.state.chemId} onChange={this.handleInputChange}/>\n                                        </div>\n                                        <MDBBtn size=\"sm\" color=\"primary\"  onClick={this.enrollChemist}>Enroll</MDBBtn>\n                                    </form>\n                                </div>\n\n                                {/*\n                                    <MDBBtn size=\"sm\" color=\"primary\" onClick={()=>this.setState({ isChemistPaneOpen: true })} >Add Chemist</MDBBtn>\n                                */}\n\n                                <BootstrapTable data={ this.state.user.chemists } version='4' hover condensed pagination options={ chemOptions } expandableRow={ this.isExpandableRow } expandComponent={ this.expandComponentDist } >\n                                    <TableHeaderColumn isKey dataField='index'>No.</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name' filter={{ type: 'TextFilter', delay: 100 }}>Chemist Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='owneraddress' filter={{ type: 'TextFilter', delay: 100 }}>Owner</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='ownercnic' >Owner CNIC</TableHeaderColumn>\n                                </BootstrapTable>\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"3\">\n                        <Row>\n                            <Col sm={6}>\n                                <br/><br/>\n                                <MDBInput label=\"Chemist ID\" icon=\"user\" name=\"chemId2\" value={this.state.chemId2} onChange={this.handleInputChange} /><br/>\n                            </Col>\n                            <Col sm={3}>\n                                <h5>Scanner:</h5>\n                                <QrReader delay={500} onError={this.handleError} onScan={this.handleScan} style={{ width:\"220px\", border:\"2px solid red\" }} />\n                                <br/>\n                            </Col>\n                            <Col sm={3}>\n                                <br/><br/>\n                                <label style={{color:\"green\"}}>Scanned code:   {this.state.QrResult}</label>\n                                <label id=\"itemNotFound\" style={{color:\"red\", display:\"none\"}}>Item not found</label>\n                                <label id=\"itemAlreadyExist\" style={{color:\"red\", display:\"none\"}}>Item already scanned</label>\n                                <label id=\"transactionSuccess\" style={{color:\"green\", display:\"none\"}}>Asset(s) Transacted Successfully</label>\n                                <label id=\"transactionFailure\" style={{color:\"red\", display:\"none\"}}>Transaction Failed</label>\n\n                                <br/><br/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <BootstrapTable data={this.state.QrResultArray} version='4' hover>\n                                    <TableHeaderColumn isKey dataField='index'>#</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name'>Asset Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='price'>Price</TableHeaderColumn>\n                                </BootstrapTable>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"10\">\n                                <MDBBtn color=\"blue\"  size=\"sm\" onClick={this.tranactionSubmitAll}>Transact</MDBBtn>\n                            </Col>\n                            <Col md=\"2\">\n                                <label style={{ color: \"green\" }}>Total Price: {this.state.totalPrice}</label>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n\n            </MDBContainer>\n        );\n    }\n}\n\nexport default DistributorPanel;\n"]},"metadata":{},"sourceType":"module"}